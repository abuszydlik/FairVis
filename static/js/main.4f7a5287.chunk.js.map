{"version":3,"sources":["data/compas.csv","data/adult.csv","util/generateSubgroups.js","util/clusterDescriptions.js","util/globals.js","workers/dataLoader.js","workers/WebWorker.js","components/ClassDistribution.js","components/MetricsDistribution.js","components/ExpandedCard.js","components/Histogram.js","components/FeatureDrawer.js","components/ClusterDistribution.js","util/neighboringClusters.js","components/GroupSuggestions.js","components/MetricSelector.js","components/StripPlot.js","components/Welcome.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","createSubgroups","data","groups","nextId","allFeatures","allValues","sub","Map","groupFeatures","Object","keys","forEach","inst","key","vals","include","feat_name","v","includes","length","push","slice","old","get","undefined","set","insts","subgroups","metrics","i","group","fm","calculateFairnessMetrics","dist","f","thisVals","v_dist","item","entries","tuple","collator","Intl","Collator","numeric","sensitivity","distrib_arr","r","sort","a","b","compare","calcValueDist","id","feats","type","distrib","calculateSubgroupMetrics","m","items","p","n","tp","tn","fp","fn","predicted","Math","round","parseFloat","actual","parseInt","calculateBaseRates","size","acc","rec","spec","prec","npv","fnr","fpr","fdr","for","f1","k","isNaN","getClusters","features","splice","indexOf","all_atts","attr","s","Set","map","clustInstances","cluster","clustDistributions","clustDistrib","feat","featDistrib","clustEntropies","_","clustEntr","arr","log2","shannonEntropy","clustDefining","orderedFeats","orderedVals","reduce","clusterid","SECONDARY_COLOR","TERTIARY_COLOR","METRICS","label","value","self","addEventListener","e","out","avgs","s_arr","Array","from","postMessage","WebWorker","worker","code","toString","blob","Blob","Worker","URL","createObjectURL","$schema","mark","tooltip","width","transform","calculate","as","encoding","y","field","axis","title","labelFontSize","labelPadding","x","aggregate","format","color","scale","domain","range","legend","ClassDistribution","this","props","clickedGroup","name","val","hoveredGroup","values","Component","height","spacing","row","padding","header","labelLimit","labels","MetricsDistribution","concat","selectedMetrics","metric","styles","card","marginTop","marginRight","overflow","featureStyle","textAlign","avatar","backgroundColor","expand","margin","marginBottom","hovered","paddingRight","clicked","display","flexDirection","justifyContent","selectedGroups","paddingLeft","ExpandedCard","export","activeGroups","text","filename","document","createElement","setAttribute","encodeURIComponent","click","saveText","JSON","stringify","nextProps","nextState","classes","featsClick","featsHov","hoveredCell","clickedCell","align","class","className","exportButton","variant","onClick","table","style","tableHeader","withStyles","boxWidth","boxHeight","Histogram","update","drawGlobalDistBar","dataDistrib","featName","featIndex","maxy","groupIndex","drawGroupDistBar","drawBar","d3","remove","feat_dist_arr","data_arr","bar_type","node","svg","append","state","left","top","rangeRound","d","hght","tip","d3tip","offset","html","call","selectAll","enter","bandwidth","on","show","hide","right","bottom","ref","info","drawer","flexShrink","maxWidth","feature","button","listItem","paddingBottom","alignItems","listText","radio","divider","boxLabel","textTransform","fontSize","fontWeight","cursor","FeatureDrawer","compareState","oldState","newState","opened","checked","subchecked","handleToggle","newChecked","has","delete","add","setState","handleSubToggle","feat_i","item_i","subnew","handleClick","newOpened","handleHover","j","selector","handleUnhover","handleClickSubgroup","val_arr","valIndex","max_ys","paper","anchor","placement","onChange","disabled","in","timeout","unmountOnExit","value_i","onMouseOver","onMouseOut","primary","order","ClusterDistribution","makeup","maxVal","getNeighbors","subgroup","oneAwayGroups","same","diffFeatInd","ind","GroupSuggestions","mouseEnter","suggestedHover","mouseLeave","suggestedUnhover","mouseClick","suggestedClick","pageRight","page","clusters","pageLeft","changeView","target","showSimilar","neighbors","changeSort","clustersLoaded","similarGroups","neigh","index","onMouseEnter","onMouseLeave","cardContent","diffTable","featDiff","settings","sortText","headerDivider","cards","filter","clust","minSize","leftCell","cell","paging","marginLeft","fab","float","flexWrap","inputComponent","inputRef","components","Control","fullWidth","InputProps","inputProps","selectProps","input","innerRef","children","innerProps","textFieldProps","Menu","square","MultiValue","tabIndex","classNames","chip","chipFocused","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","selected","component","isSelected","Placeholder","placeholder","ValueContainer","valueContainer","MetricSelector","handleChange","onMetricChange","selectedOptions","suggs","suggestions","selectorWrapper","options","isMulti","theme","minWidth","flex","unit","emphasize","palette","grey","position","zIndex","StripPlot","createStripPlot","xAxis","select","xScale","barHover","barClick","avgG","toFixed","yScale","tickPadding","ticks","tickFormat","prevProps","plot","body","content","subtitle","flexGrow","tagline","loadingScreen","minHeight","loadingText","paddingTop","loadingProgress","datasets","tabletitle","adddata","dataLink","textDecorationColor","textDecoration","socialLink","background","fontFamily","borderColor","borderRadius","social","icon","Welcome","loadIcon","loading","scope","href","loadData","adultData","compasData","ReactGA","initialize","pageview","window","location","pathname","search","createMuiTheme","main","secondary","overrides","MuiSlider","thumb","track","appBar","slider","reset","App","loaderWorker","dataLoaded","then","classed","foundArr","el","newActives","changeMinSize","resetGroups","handleMetricsChange","inline","step","min","max","metricSelector","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f7a5287.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compas.6aa63d4a.csv\";","module.exports = __webpack_public_path__ + \"static/media/adult.f0b32474.csv\";","/** Since ES6 Maps do equality by reference, objects can't really be used as keys.\n *  Here we simply use a concatenated string as the key.\n **/\nexport function createSubgroups(data, groups, nextId, allFeatures, allValues) {\n  let sub = new Map();\n\n  let groupFeatures = Object.keys(groups);\n\n  data.forEach(inst => {\n    let key = \"\";\n    let vals = [];\n\n    let include = true;\n\n    groupFeatures.forEach(feat_name => {\n      let v = inst[feat_name];\n      if (groups[feat_name].includes(v) || groups[feat_name].length === 0) {\n        vals.push(v);\n        key += v + \", \";\n      } else {\n        include = false;\n      }\n    });\n\n    if (include) {\n      //  Remove last \", \"\n      key = key.slice(0, -2);\n\n      // If key doesn't exist add entry, else push to group\n      let old = sub.get(key);\n      if (old === undefined) {\n        sub.set(key, { vals: vals, insts: [inst] });\n      } else {\n        old[\"insts\"].push(inst);\n        sub.set(key, old);\n      }\n    }\n  });\n\n  return calculateSubgroupMetrics(\n    sub,\n    nextId,\n    groupFeatures,\n    allFeatures,\n    allValues\n  );\n}\n\n/**\n * Calculate Common Fairness Metrics\n *\n * @param counts: counts of tp, tn, fp, tn, p, n\n * Note:\n * acc = accuracy\n * rec = recall\n * prec = precision\n * spec = specificity\n * npv = negative predictive value\n * fnr = false negative rate or miss rate\n * fpr = false positive rate\n * fdr = false discovery rate\n * for = false omission rate\n * f1 = f1 score\n */\nexport function calculateFairnessMetrics(data) {\n  let m = calculateBaseRates(data);\n\n  let metrics = {\n    size: data.length,\n    p: (100 * m.p) / data.length,\n    n: (100 * m.n) / data.length,\n    acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\n    rec: (100 * m.tp) / (m.tp + m.fn),\n    spec: (100 * m.tn) / (m.fp + m.tn),\n    prec: (100 * m.tp) / (m.tp + m.fp),\n    npv: (100 * m.tn) / (m.tn + m.fn),\n    fnr: (100 * m.fn) / (m.fn + m.tp),\n    fpr: (100 * m.fp) / (m.fp + m.tn),\n    fdr: (100 * m.fp) / (m.fp + m.tp),\n    for: (100 * m.fn) / (m.fn + m.tn),\n    f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\n  };\n\n  Object.keys(metrics).forEach(k => {\n    if (isNaN(metrics[k])) {\n      metrics[k] = 0;\n    }\n  });\n\n  return metrics;\n}\n\n/** Calculate performance metrics for all subgroups */\nfunction calculateSubgroupMetrics(\n  subgroups,\n  nextId,\n  groupFeatures,\n  allFeatures,\n  allValues\n) {\n  let metrics = [];\n\n  // Keep track of the ID for all active subgroups\n  let i = nextId;\n\n  subgroups.forEach((group, key) => {\n    let fm = calculateFairnessMetrics(group.insts);\n    let dist = calcValueDist(group.insts, allFeatures, allValues);\n\n    metrics.push({\n      id: i,\n      feats: groupFeatures,\n      vals: group.vals,\n      insts: group.insts,\n      metrics: fm,\n      type: \"top\",\n      distrib: dist\n    });\n    i++;\n  });\n\n  return metrics;\n}\n\n/** Calculate the base classification COUNTS for a group of instances */\nfunction calculateBaseRates(items) {\n  let p = 0;\n  let n = 0;\n  let tp = 0;\n  let tn = 0;\n  let fp = 0;\n  let fn = 0;\n\n  items.forEach(item => {\n    let predicted = Math.round(parseFloat(item[\"out\"]));\n    let actual = parseInt(item[\"class\"], 10);\n\n    if (predicted === 1 && actual === 1) {\n      tp++;\n      p++;\n    } else if (predicted === 0 && actual === 0) {\n      tn++;\n      n++;\n    } else if (predicted === 1 && actual === 0) {\n      fp++;\n      n++;\n    } else {\n      fn++;\n      p++;\n    }\n  });\n\n  return {\n    p: p,\n    n: n,\n    tp: tp,\n    tn: tn,\n    fp: fp,\n    fn: fn\n  };\n}\n\nfunction calcValueDist(insts, allFeatures, allValues) {\n  // init dist\n  let dist = {};\n  allFeatures.forEach((f, i) => {\n    let thisVals = allValues[i];\n    let v_dist = {};\n    thisVals.forEach((v, i) => {\n      v_dist[v] = 0;\n    });\n    dist[f] = v_dist;\n  });\n\n  // populate dist\n  insts.forEach((item, i) => {\n    Object.entries(item).forEach(tuple => {\n      // tuple = [\"age\", 17]\n      dist[tuple[0]][tuple[1]] += 1;\n    });\n  });\n\n  // turn into array with values sorted\n  let collator = new Intl.Collator(undefined, {\n    numeric: true,\n    sensitivity: \"base\"\n  });\n\n  let distrib_arr = [];\n  allFeatures.forEach(feat_name => {\n    let r = Object.entries(dist[feat_name]);\n    r.sort((a, b) => collator.compare(a[0], b[0]));\n    distrib_arr.push(r);\n  });\n\n  return distrib_arr;\n}\n","import { calculateFairnessMetrics } from \"../util/generateSubgroups\";\n\nfunction shannonEntropy(arr, size) {\n  let s = 0;\n  Object.keys(arr).forEach(k => {\n    arr[k] = arr[k] / size;\n    let v = arr[k];\n    if (v !== 0) {\n      s += v * Math.log2(v);\n    }\n  });\n  return -s;\n}\n\n/**\n * Given an array of instances with a class, output label, and cluster, returns an array of clusters\n * with the defining feature, corresponding values, instances that belong to\n * the cluster, and performance metrics.\n */\nexport function getClusters(data, feats, vals) {\n  // Get all features, ignoring class, out, and cluster\n  let features = Object.keys(data[0]);\n  features.splice(features.indexOf(\"class\"), 1);\n  features.splice(features.indexOf(\"out\"), 1);\n  features.splice(features.indexOf(\"cluster\"), 1);\n\n  // Calculte all possible features values\n  let all_atts = {};\n  features.forEach(attr => {\n    let s = new Set(data.map(p => p[attr]));\n    all_atts[attr] = s;\n  });\n\n  // Group instances by cluster\n  let clustInstances = [];\n  //let clusters = runClustering(data, feats, vals);\n  data.forEach(inst => {\n    // Ignore cluster -1, since unclustered\n    if (inst.cluster !== -1) {\n      if (clustInstances[inst.cluster] == null) {\n        clustInstances[inst.cluster] = [inst];\n      } else {\n        clustInstances[inst.cluster] = [...clustInstances[inst.cluster], inst];\n      }\n    }\n  });\n\n  // Calculate value count per cluster\n  let clustDistributions = [];\n  clustInstances.forEach((cluster, i) => {\n    clustDistributions[i] = {};\n    let clustDistrib = clustDistributions[i];\n    clustDistrib[\"size\"] = cluster.length;\n    features.forEach(feat => {\n      clustDistrib[feat] = {};\n      let featDistrib = clustDistrib[feat];\n      cluster.forEach(inst => {\n        featDistrib[inst[feat]] = featDistrib[inst[feat]]\n          ? featDistrib[inst[feat]] + 1\n          : 1;\n      });\n    });\n  });\n\n  // Calculate entropy per cluster per feature, normalizing value counts to get distributions\n  let clustEntropies = [];\n  clustDistributions.forEach((_, i) => {\n    clustEntropies[i] = {};\n    let clustEntr = clustEntropies[i];\n    let clustDistrib = clustDistributions[i];\n    let size = clustDistrib[\"size\"];\n    features.forEach(feat => {\n      clustEntr[feat] = shannonEntropy(clustDistrib[feat], size);\n    });\n  });\n\n  // TODO: Let user set or see more than 3 features\n  // Get top K defining features and values for each cluster\n  let clustDefining = [];\n  clustEntropies.forEach((cluster, i) => {\n    let orderedFeats = Object.keys(cluster).sort((a, b) => {\n      return cluster[a] - cluster[b];\n    });\n\n    let clustDistrib = clustDistributions[i];\n    let orderedVals = orderedFeats.map(feat => {\n      let vals = clustDistrib[feat];\n      return Object.keys(vals).reduce((a, b) => (vals[a] > vals[b] ? a : b));\n    });\n\n    clustDefining[i] = {\n      feats: orderedFeats,\n      clusterid: i,\n      vals: orderedVals,\n      insts: clustInstances[i],\n      metrics: calculateFairnessMetrics(clustInstances[i]),\n      distrib: clustDistributions[i],\n      type: \"bottom\"\n    };\n  });\n\n  return clustDefining;\n}\n","export const PRIMARY_COLOR = \"#1D2737\";\nexport const SECONDARY_COLOR = \"#5a6d94\";\nexport const TERTIARY_COLOR = \"#d6d6d6\";\nexport const HOVERED_COLOR = \"#2979ff\";\nexport const CLICKED_COLOR = \"#b71c1c\";\n\nexport const METRICS = [\n  { label: \"Accuracy\", value: \"acc\", key: \"acc\" },\n  { label: \"Precision\", value: \"prec\", key: \"prec\" },\n  { label: \"Recall\", value: \"rec\", key: \"rec\" },\n  { label: \"Specificity\", value: \"spec\", key: \"spec\" },\n  { label: \"Negative Predictive Value\", value: \"npv\", key: \"npv\" },\n  { label: \"False Negative Rate\", value: \"fnr\", key: \"fnr\" },\n  { label: \"False Positive Rate\", value: \"fpr\", key: \"fpr\" },\n  { label: \"False Discovery Rate\", value: \"fdr\", key: \"fdr\" },\n  { label: \"False Omission Rate\", value: \"for\", key: \"for\" },\n  { label: \"F1\", value: \"f1\", key: \"f1\" }\n];\n","// This WebWorker loads takes the loaded data and calcualtes fairnes metrics for it.\nexport default () => {\n  /**\n   * Calculate Common Fairness Metrics\n   *\n   * @param counts: counts of tp, tn, fp, tn, p, n\n   * Note:\n   * acc = accuracy\n   * rec = recall\n   * prec = precision\n   * spec = specificity\n   * npv = negative predictive value\n   * fnr = false negative rate or miss rate\n   * fpr = false positive rate\n   * fdr = false discovery rate\n   * for = false omission rate\n   * f1 = f1 score\n   */\n  function calculateFairnessMetrics(data) {\n    let m = calculateBaseRates(data);\n\n    let metrics = {\n      size: data.length,\n      p: (100 * m.p) / data.length,\n      n: (100 * m.n) / data.length,\n      acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\n      rec: (100 * m.tp) / (m.tp + m.fn),\n      spec: (100 * m.tn) / (m.fp + m.tn),\n      prec: (100 * m.tp) / (m.tp + m.fp),\n      npv: (100 * m.tn) / (m.tn + m.fn),\n      fnr: (100 * m.fn) / (m.fn + m.tp),\n      fpr: (100 * m.fp) / (m.fp + m.tn),\n      fdr: (100 * m.fp) / (m.fp + m.tp),\n      for: (100 * m.fn) / (m.fn + m.tn),\n      f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\n    };\n\n    Object.keys(metrics).forEach(k => {\n      if (isNaN(metrics[k])) {\n        metrics[k] = 0;\n      }\n    });\n\n    return metrics;\n  }\n\n  /** Calculate the base classification COUNTS for a group of instances */\n  function calculateBaseRates(items) {\n    let p = 0;\n    let n = 0;\n    let tp = 0;\n    let tn = 0;\n    let fp = 0;\n    let fn = 0;\n\n    items.forEach(item => {\n      let predicted = Math.round(parseFloat(item[\"out\"]));\n      let actual = parseInt(item[\"class\"], 10);\n\n      if (predicted === 1 && actual === 1) {\n        tp++;\n        p++;\n      } else if (predicted === 0 && actual === 0) {\n        tn++;\n        n++;\n      } else if (predicted === 1 && actual === 0) {\n        fp++;\n        n++;\n      } else {\n        fn++;\n        p++;\n      }\n    });\n\n    return {\n      p: p,\n      n: n,\n      tp: tp,\n      tn: tn,\n      fp: fp,\n      fn: fn\n    };\n  }\n\n  /** Calculate distribution over instances */\n  function calcValueDist(insts, allFeatures, allValues) {\n    // init dist\n    let dist = {};\n    allFeatures.forEach((f, i) => {\n      let thisVals = allValues[i];\n      let v_dist = {};\n      thisVals.forEach((v, i) => {\n        v_dist[v] = 0;\n      });\n      dist[f] = v_dist;\n    });\n\n    // populate dist\n    insts.forEach((item, i) => {\n      Object.entries(item).forEach(tuple => {\n        // tuple = [\"age\", 17]\n        dist[tuple[0]][tuple[1]] += 1;\n      });\n    });\n\n    return dist;\n  }\n\n  self.addEventListener(\"message\", function(e) { // eslint-disable-line no-restricted-globals\n    let out = {};\n    let data = e.data;\n\n    out.data = data;\n    out.avgs = calculateFairnessMetrics(data);\n    out.feats = Object.keys(data[0]);\n\n    // calculate values\n    let vals = [];\n    for (let i = 0; i < out.feats.length; i++) {\n      let s = new Set(data.map(p => p[out.feats[i]]));\n      let s_arr = Array.from(s);\n      vals.push(s_arr);\n    }\n\n    out.vals = vals;\n\n    // calculate global feat distribution\n    let distrib = calcValueDist(data, out.feats, out.vals);\n    let distrib_arr = [];\n\n    let collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: \"base\"\n    });\n\n    out.feats.forEach(feat_name => {\n      let r = Object.entries(distrib[feat_name]);\n      r.sort((a, b) => collator.compare(a[0], b[0]));\n      distrib_arr.push(r);\n    });\n\n    out.distrib = distrib_arr;\n\n    postMessage(out);\n  });\n};\n","export default class WebWorker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob([\"(\" + code + \")()\"]);\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n","import React, { Component } from \"react\";\nimport VegaLite from \"react-vega-lite\";\n\nconst spec = {\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\n  mark: { type: \"bar\", tooltip: true },\n  width: 250,\n  transform: [\n    {\n      calculate: \"datum.val/100\",\n      as: \"percent\"\n    }\n  ],\n  encoding: {\n    y: {\n      field: \"name\",\n      type: \"ordinal\",\n      axis: { title: \"\", labelFontSize: 13, labelPadding: 10 }\n    },\n    x: {\n      field: \"percent\",\n      aggregate: \"sum\",\n      type: \"quantitative\",\n      axis: { title: \"Ground Truth Label Balance\", format: \"%\" }\n    },\n    color: {\n      field: \"color\",\n      type: \"nominal\",\n      scale: {\n        domain: [\"hovpos\", \"hovneg\", \"clickpos\", \"clickneg\"],\n        range: [\n          \"#64b5f6\",\n          \"rgba(100, 181, 246, .3)\",\n          \"#e57373\",\n          \"rgba(229, 115, 115, .3)\"\n        ]\n      },\n      legend: null\n    }\n  }\n};\n\nclass ClassDistribution extends Component {\n  render() {\n    let data = [];\n    if (this.props.clickedGroup !== undefined) {\n      data.push({\n        name: \"Pinned\",\n        type: \"Positive\",\n        val: this.props.clickedGroup.metrics.p,\n        color: \"clickpos\"\n      });\n      data.push({\n        name: \"Pinned\",\n        type: \"Negative\",\n        val: this.props.clickedGroup.metrics.n,\n        color: \"clickneg\"\n      });\n    }\n    if (this.props.hoveredGroup !== undefined) {\n      data.push({\n        name: \"Hovered\",\n        type: \"Positive\",\n        val: this.props.hoveredGroup.metrics.p,\n        color: \"hovpos\"\n      });\n      data.push({\n        name: \"Hovered\",\n        type: \"Negative\",\n        val: this.props.hoveredGroup.metrics.n,\n        color: \"hovneg\"\n      });\n    }\n\n    return <VegaLite data={{ values: data }} spec={spec} />;\n  }\n}\n\nexport default ClassDistribution;\n","import React, { Component } from \"react\";\nimport VegaLite from \"react-vega-lite\";\n\nconst spec = {\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\n  width: 250,\n  height: 50,\n  mark: \"bar\",\n  transform: [\n    {\n      calculate: \"datum.value/100\",\n      as: \"percent\"\n    }\n  ],\n  spacing: 5,\n  encoding: {\n    row: {\n      field: \"metric\",\n      type: \"ordinal\",\n      scale: { padding: 0 },\n      header: {title: \"\", labelLimit: 60},\n    },\n    y: {\n      field: \"group\",\n      type: \"ordinal\",\n      axis: { title: \"\", labels: false }\n    },\n    x: {\n      field: \"percent\",\n      type: \"quantitative\",\n      scale: {\n        domain: [0, 1]\n      },\n      axis: { title: \"\", format: \"%\" }\n    },\n    tooltip: {\n      field: \"percent\",\n      type: \"quantitative\"\n    },\n    color: {\n      field: \"group\",\n      type: \"nominal\",\n      scale: {\n        domain: [\"hovered\", \"pinned\"],\n        // range: [HOVERED_COLOR, CLICKED_COLOR]\n        range: [\"#64b5f6\", \"#e57373\"]\n      },\n      legend: null\n    }\n  }\n};\n\nclass MetricsDistribution extends Component {\n  render() {\n    let data = [];\n    if (this.props.hoveredGroup) {\n      data = data.concat(\n        this.props.selectedMetrics.map(m => {\n          return {\n            group: \"hovered\",\n            metric: m.label,\n            value: this.props.hoveredGroup.metrics[m.value]\n          };\n        })\n      );\n    }\n    if (this.props.clickedGroup) {\n      data = data.concat(\n        this.props.selectedMetrics.map(m => {\n          return {\n            group: \"pinned\",\n            metric: m.label,\n            value: this.props.clickedGroup.metrics[m.value]\n          };\n        })\n      );\n    }\n    return <VegaLite data={{ values: data }} spec={spec} />;\n  }\n}\n\nexport default MetricsDistribution;\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { Component } from \"react\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ClassDistribution from \"./ClassDistribution\";\nimport \"../style/Radar.css\";\nimport MetricsDistribution from \"./MetricsDistribution\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { HOVERED_COLOR, CLICKED_COLOR } from \"../util/globals\";\n\nconst styles = {\n  card: {\n    width: \"25%\",\n    height: \"100%\",\n    marginTop: 70,\n    marginRight: 10,\n    overflow: \"scroll\"\n  },\n  featureStyle: {\n    textAlign: \"justify\"\n  },\n  avatar: {\n    backgroundColor: \"#1D2737\"\n  },\n  expand: {\n    margin: \"0px auto\"\n  },\n  metrics: {\n    marginTop: 10\n  },\n  feats: {\n    marginBottom: 10\n  },\n  hovered: {\n    color: HOVERED_COLOR,\n    paddingRight: 8\n  },\n  clicked: {\n    color: CLICKED_COLOR\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"space-between\",\n    padding: 7,\n    marginBottom: 5\n  },\n  selectedGroups: {\n    marginTop: 8\n  },\n  feats: {\n    paddingLeft: 8\n  },\n  hoveredCell: {\n    paddingRight: 8\n  }\n};\n\nclass ExpandedCard extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      nextProps.hovered === this.props.hovered &&\n      nextProps.clicked === this.props.clicked\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  export = () => {\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\n    if (clickedGroup) {\n      function saveText(text, filename) {\n        var a = document.createElement(\"a\");\n        a.setAttribute(\n          \"href\",\n          \"data:text/plain;charset=utf-u,\" + encodeURIComponent(text)\n        );\n        a.setAttribute(\"download\", filename);\n        a.click();\n      }\n      saveText(JSON.stringify(clickedGroup), \"clickedgroup.json\");\n    }\n  };\n\n  render() {\n    let classes = this.props.classes;\n\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\n    let hoveredGroup = this.props.activeGroups[this.props.hovered];\n\n    let featsClick = [];\n    if (clickedGroup) {\n      featsClick = clickedGroup.feats;\n      if (clickedGroup.type === \"bottom\") {\n        featsClick = clickedGroup.feats.slice(0, 5);\n      }\n    }\n\n    let featsHov = [];\n    if (hoveredGroup) {\n      featsHov = hoveredGroup.feats;\n      if (hoveredGroup.type === \"bottom\") {\n        featsHov = hoveredGroup.feats.slice(0, 5);\n      }\n    }\n    let feats_comb = [...new Set(featsHov.concat(featsClick))];\n\n    let feats = feats_comb.map((feat, i) => {\n      let hoveredCell = <TableCell />;\n      let clickedCell = <TableCell />;\n      if (this.props.clicked !== -1 && clickedGroup.feats.includes(feat)) {\n        clickedCell = (\n          <TableCell align={\"right\"}>\n            {clickedGroup.vals[clickedGroup.feats.indexOf(feat)]}\n          </TableCell>\n        );\n      }\n      if (this.props.hovered !== -1 && hoveredGroup.feats.includes(feat)) {\n        hoveredCell = (\n          <TableCell align={\"right\"}>\n            <span class={classes.hoveredCell}>{hoveredGroup.vals[hoveredGroup.feats.indexOf(feat)]}</span>\n          </TableCell>\n        );\n      }\n\n      return (\n        <>\n          <TableRow key={i}>\n            <TableCell className={classes.feat}>{feat}</TableCell>\n            {clickedCell}\n            {hoveredCell}\n          </TableRow>\n        </>\n      );\n    });\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <div className={classes.header}>\n            <h4 className={classes.selectedGroups}>Group Details</h4>\n            <Button\n              className={classes.exportButton}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.export}\n            >\n              Export\n            </Button>\n          </div>\n          <Divider />\n          <MetricsDistribution\n            hoveredGroup={hoveredGroup}\n            clickedGroup={clickedGroup}\n            selectedMetrics={this.props.selectedMetrics}\n          />\n          <ClassDistribution\n            hoveredGroup={hoveredGroup}\n            clickedGroup={clickedGroup}\n          />\n          <Paper className={classes.feats}>\n            <Table className={classes.table} padding=\"none\" size=\"small\">\n              <colgroup>\n                <col style={{ width: \"33%\" }} />\n                <col style={{ width: \"33%\" }} />\n                <col style={{ width: \"33%\" }} />\n              </colgroup>\n              <TableHead className={classes.tableHeader}>\n                <TableRow key={0}>\n                  <TableCell className={classes.feat}>Feature</TableCell>\n                  <TableCell align=\"right\">\n                    <span className={classes.clicked}>Pinned</span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span className={classes.hovered}>Hovered</span>\n                  </TableCell>\n                </TableRow>\n                <TableRow key={1}>\n                  <TableCell>Size</TableCell>\n                  <TableCell align=\"right\">\n                    {clickedGroup && clickedGroup.metrics.size}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span className={classes.hoveredCell}>{hoveredGroup && hoveredGroup.metrics.size}</span>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{feats}</TableBody>\n            </Table>\n          </Paper>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(ExpandedCard);\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport d3tip from \"d3-tip\";\nimport \"../style/BoxPlot.css\";\nimport { TERTIARY_COLOR } from \"../util/globals\";\n\nconst boxWidth = 300;\nconst boxHeight = 100;\n\nclass Histogram extends Component {\n  constructor(props) {\n    super(props);\n\n    var margin = {\n        top: 50,\n        right: 10,\n        bottom: 0,\n        left: 10\n      },\n      width = boxWidth - margin.left - margin.right,\n      height = boxHeight - margin.top - margin.bottom;\n\n    this.state = {\n      margin,\n      width,\n      height\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.type === \"global\" &&\n      this.props.dataDistrib.length === 0 &&\n      nextProps.dataDistrib.length !== 0\n    ) {\n      return true;\n    } else if (\n      this.props.type === \"click\" &&\n      this.props.clicked !== nextProps.clicked\n    ) {\n      return true;\n    } else if (\n      this.props.type === \"hover\" &&\n      this.props.hovered !== nextProps.hovered\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate() {\n    this.update();\n  }\n\n  update = () => {\n    if (this.props.type === \"global\") {\n      this.drawGlobalDistBar(\n        this.props.dataDistrib,\n        this.props.featName,\n        this.props.featIndex,\n        this.props.maxy\n      );\n    } else {\n      let groupIndex =\n        this.props.type === \"click\" ? this.props.clicked : this.props.hovered;\n\n      this.drawGroupDistBar(\n        this.props.activeGroups,\n        groupIndex,\n        this.props.type,\n        this.props.featName,\n        this.props.featIndex,\n        this.props.maxy\n      );\n    }\n  };\n\n  drawGlobalDistBar = (dataDistrib, feat, featIndex, maxy) => {\n    let arr = dataDistrib[featIndex];\n\n    this.drawBar(arr, featIndex, \"global\", maxy);\n  };\n\n  /**\n   * @param clickedGroupDist dist for this feature\n   * @param type: \"hover\" or \"click\"\n   */\n  drawGroupDistBar = (\n    activeGroups,\n    groupIndex,\n    type,\n    feat,\n    featIndex,\n    maxy\n  ) => {\n    // delete existing plots of this type\n    d3.select(\"#box-plot-bar-\" + type + \"-\" + featIndex).remove();\n\n    if (groupIndex >= 0) {\n      let group = activeGroups[groupIndex];\n\n      // TODO temp: need to change format of bottom up subgroups\n      if (group.type === \"top\") {\n        let feat_dist_arr = group.distrib[featIndex];\n        this.drawBar(feat_dist_arr, featIndex, \"bar-\" + type, maxy);\n      }\n    }\n  };\n\n  /**\n   * Draw the actual bars yah\n   * @param data_arr: [value, count]\n   * @param featIndex\n   * @param bar_type: \"\", \"bar-click\", or \"bar-hover\"\n   */\n  drawBar = (data_arr, featIndex, bar_type, maxy) => {\n    const node = this.node;\n\n    let svg = d3\n      .select(node)\n      .append(\"svg\")\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 300 100\")\n      .attr(\"class\", \"box-plot\")\n      .attr(\"id\", \"box-plot-\" + bar_type + \"-\" + featIndex)\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          this.state.margin.left +\n          \",\" +\n          this.state.margin.top +\n          \")\"\n      );\n\n    // categorical X\n    let x = d3\n      .scaleBand()\n      .rangeRound([0, 300], 0.1)\n      .domain(\n        data_arr.map(d => {\n          return d[0];\n        })\n      );\n\n    let y = d3\n      .scaleLinear()\n      .range([this.state.height, 0])\n      .domain([0, maxy]);\n\n    let hght = this.state.height;\n\n    var tip = d3tip()\n      .attr(\"class\", \"d3-tip\")\n      .offset([-10, 0])\n      .html(function(d) {\n        return (\n          d[0] +\n          \": <span style='color:\" +\n          TERTIARY_COLOR +\n          \"'>\" +\n          d[1] +\n          \"</span>\"\n        );\n      });\n\n    svg.call(tip);\n\n    svg\n      .selectAll(\"rect\")\n      .data(data_arr)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", d => {\n        return x(d[0]);\n      })\n      .attr(\"y\", d => {\n        return y(d[1]);\n      })\n      .attr(\"width\", function(d) {\n        return x.bandwidth();\n      })\n      .attr(\"height\", function(d) {\n        return hght - y(d[1]);\n      })\n      .attr(\"id\", function(d, i) {\n        return \"rect-\" + featIndex + \"-\" + i;\n      })\n      .attr(\"class\", \"barchart-rect \" + bar_type)\n      .on(\"mouseover\", tip.show)\n      .on(\"mouseout\", tip.hide);\n  };\n\n  render() {\n    return <div ref={node => (this.node = node)} />;\n  }\n}\n\nexport default Histogram;\n","import Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport * as d3 from \"d3\";\nimport React, { Component } from \"react\";\nimport Histogram from \"./Histogram\";\nimport {\n  PRIMARY_COLOR,\n  SECONDARY_COLOR,\n  TERTIARY_COLOR\n} from \"../util/globals\";\n\n// import { FaInfoCircle } from \"react-icons/fa\";\n\nconst styles = {\n  info: {},\n  drawer: {\n    width: \"20%\",\n    flexShrink: 0,\n    marginTop: 65,\n    maxWidth: 360\n  },\n  feature: {\n    margin: 10\n  },\n  button: {\n    margin: \"0px auto\"\n  },\n  listItem: {\n    paddingBottom: \"20px\",\n    height: 100,\n    alignItems: \"baseline\"\n  },\n  listText: {\n    height: 25\n  },\n  radio: {\n    top: \"25%\"\n  },\n  divider: {\n    marginTop: 5\n  },\n  boxLabel: {\n    textTransform: \"capitalize\",\n    fontSize: \"16px\",\n    color: PRIMARY_COLOR,\n    fontWeight: 500,\n    margin: 0\n  },\n  info: {\n    color: PRIMARY_COLOR,\n    cursor: \"pointer\"\n  }\n};\n\nclass FeatureDrawer extends Component {\n  constructor(props) {\n    super(props);\n\n    let sub = {};\n    let max_ys = [];\n\n    props.features.forEach((feat_name, feat_i) => {\n      sub[feat_i] = new Set();\n      let maxy = d3.max(props.dataDistrib[feat_i], d => {\n        return d[1];\n      });\n      max_ys.push(maxy);\n    });\n\n    this.state = {\n      checked: new Set(),\n      opened: new Set(),\n      subchecked: sub,\n      features: props.features,\n      max_ys: max_ys\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      (this.props.features.length === 0 && nextProps.features.length > 0) ||\n      this.props.clicked !== nextProps.clicked ||\n      this.props.hovered !== nextProps.hovered ||\n      this.compareState(this.state, nextState)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Determine if state has changed...only comparing size of sets for increased speed.\n   */\n  compareState = (oldState, newState) => {\n    if (\n      oldState.opened.size !== newState.opened.size ||\n      oldState.checked.size !== newState.checked.size\n    ) {\n      return true;\n    }\n\n    let out = false;\n    Object.keys(oldState.subchecked).forEach(k => {\n      if (newState.subchecked[k].size !== oldState.subchecked[k].size) {\n        out = true;\n      }\n    });\n\n    return out;\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n\n    let newChecked = new Set(checked);\n\n    if (newChecked.has(value)) {\n      newChecked.delete(value);\n    } else {\n      newChecked.add(value);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n\n  handleSubToggle = (feat_i, item_i) => () => {\n    const { subchecked, checked } = this.state;\n\n    let subnew = {};\n    Object.keys(subchecked).forEach(k => {\n      subnew[k] = new Set(subchecked[k]);\n    });\n\n    let n = new Set(checked);\n\n    if (subnew[feat_i].has(item_i)) {\n      subnew[feat_i].delete(item_i);\n    } else {\n      subnew[feat_i].add(item_i);\n    }\n\n    n.delete(feat_i);\n\n    this.setState({\n      subchecked: subnew,\n      checked: n\n    });\n  };\n\n  handleClick = feat_i => () => {\n    const { opened } = this.state;\n\n    let newOpened = new Set(opened);\n\n    if (newOpened.has(feat_i)) {\n      newOpened.delete(feat_i);\n    } else {\n      newOpened.add(feat_i);\n    }\n    this.setState({\n      opened: newOpened\n    });\n  };\n\n  handleHover = (i, j) => {\n    let selector = \"#rect-\" + i + \"-\" + j;\n\n    d3.select(selector)\n      .style(\"fill\", SECONDARY_COLOR)\n      .style(\"opacity\", 1);\n  };\n\n  handleUnhover = (i, j) => {\n    let selector = \"#rect-\" + i + \"-\" + j;\n\n    d3.select(selector)\n      .style(\"fill\", TERTIARY_COLOR)\n      .style(\"opacity\", 0.8);\n  };\n\n  handleClickSubgroup = () => {\n    let groups = {};\n    let sub = {};\n\n    this.props.features.forEach((feat_name, feat_i) => {\n      // get value\n      if (\n        this.state.checked.has(feat_i) ||\n        this.state.subchecked[feat_i].size > 0\n      ) {\n        let val_arr = [];\n\n        this.state.subchecked[feat_i].forEach(valIndex => {\n          val_arr.push(this.props.values[feat_i][valIndex]);\n        });\n\n        groups[feat_name] = val_arr;\n      }\n\n      // reset selection\n      sub[feat_i] = new Set();\n    });\n\n    this.props.createSubgroups(groups);\n\n    this.setState({ checked: new Set(), subchecked: sub });\n  };\n\n  render() {\n    const classes = this.props.classes;\n    const collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: \"base\"\n    });\n\n    if (this.props.features.length > 0) {\n      return (\n        <Drawer\n          className={classes.drawer}\n          classes={{ paper: classes.drawer }}\n          variant=\"permanent\"\n          anchor=\"left\"\n        >\n          <List>\n            <ListItem key={-1}>\n              <Tooltip\n                title=\"Create all subgroups of the selected features\"\n                placement=\"bottom\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  onClick={this.handleClickSubgroup}\n                >\n                  Generate Subgroups\n                </Button>\n              </Tooltip>\n              {/* <FaInfoCircle className={classes.info} onClick={() => alert(\"hello\")}/> */}\n            </ListItem>\n            <Divider />\n\n            {this.props.features.map((feat_name, feat_i) => (\n              <>\n                <ListItem\n                  key={`section-${feat_i}`}\n                  className={classes.listItem}\n                  onClick={this.handleClick(feat_i)}\n                >\n                  <p className={classes.boxLabel}>{feat_name}</p>\n                  {/* Global BoxPlot */}\n                  <Histogram\n                    featName={feat_name}\n                    dataDistrib={this.props.dataDistrib}\n                    featIndex={feat_i}\n                    type={\"global\"}\n                    maxy={this.state.max_ys[feat_i]}\n                  />\n                  {/* Clicked BoxPlot */}\n                  <Histogram\n                    featName={feat_name}\n                    featIndex={feat_i}\n                    clicked={this.props.clicked}\n                    hovered={this.props.hovered}\n                    activeGroups={this.props.activeGroups}\n                    type={\"click\"}\n                    maxy= {this.state.max_ys[feat_i]}\n                  />\n                  {/* Hovered BoxPlot */}\n                  <Histogram\n                    featName={feat_name}\n                    featIndex={feat_i}\n                    clicked={this.props.clicked}\n                    hovered={this.props.hovered}\n                    activeGroups={this.props.activeGroups}\n                    type={\"hover\"}\n                    maxy={this.state.max_ys[feat_i]}\n                  />\n\n                  <ListItemSecondaryAction className={classes.radio}>\n                    <Checkbox\n                      onChange={this.handleToggle(feat_i)}\n                      checked={this.state.checked.has(feat_i)}\n                      disabled={this.state.subchecked[feat_i].size > 0}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n\n                <Collapse\n                  in={this.state.opened.has(feat_i)}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  {this.props.values[feat_i]\n                    .sort(collator.compare)\n                    .map((value, value_i) => (\n                      <ListItem\n                        key={`item-${feat_i}-${value_i}`}\n                        button\n                        onMouseOver={e => this.handleHover(feat_i, value_i, e)}\n                        onMouseOut={e => this.handleUnhover(feat_i, value_i, e)}\n                      >\n                        <ListItemText primary={value} />\n\n                        <ListItemSecondaryAction>\n                          <Checkbox\n                            onChange={this.handleSubToggle(feat_i, value_i)}\n                            checked={this.state.subchecked[feat_i].has(value_i)}\n                          />\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                </Collapse>\n                <Divider className={classes.divider} />\n              </>\n            ))}\n          </List>\n        </Drawer>\n      );\n    }\n\n    return <div className={classes.drawer}>Loading...</div>;\n  }\n}\n\nexport default withStyles(styles)(FeatureDrawer);\n","import React, { Component } from \"react\";\nimport VegaLite from \"react-vega-lite\";\nimport { PRIMARY_COLOR } from \"../util/globals\";\n\nconst spec = {\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\n  height: 50,\n  width: 75,\n  data: {\n    name: \"myData\"\n  },\n  transform: [\n    {\n      calculate: \"datum.makeup/100\",\n      as: \"percent\"\n    }\n  ],\n  mark: {type: \"bar\", tooltip: true},\n  encoding: {\n    y: {\n      field: \"value\",\n      type: \"ordinal\",\n      axis: { title: \"\" },\n      sort: { field: \"makeup\", order: \"descending\" }\n    },\n    x: {\n      field: \"percent\",\n      type: \"quantitative\",\n      axis: { title: \"\", format: \"%\" }\n    },\n    color: {\n      field: \"primary\",\n      type: \"nominal\",\n      scale: {\n        domain: [0, 1],\n        range: [PRIMARY_COLOR, \"#718C73\"]\n      },\n      legend: null\n    }\n  }\n};\n\nclass ClusterDistribution extends Component {\n  render() {\n    let cluster = this.props.cluster;\n    let feature = this.props.feature;\n\n    let distrib = cluster.distrib[feature];\n    let data = this.props.values[this.props.features.indexOf(feature)].map(\n      (val, i) => {\n        if (distrib[val]) {\n          return {\n            value: val,\n            makeup: distrib[val] * 100,\n            primary: val === this.props.maxVal ? 1 : 0\n          };\n        } else {\n          return {\n            value: val,\n            makeup: 0,\n            primary: 0\n          };\n        }\n      }\n    );\n\n    // only take top 3 so labels are visible on plot\n    data = data.sort((a, b) => {\n      return b.makeup - a.makeup;\n    })\n\n    data = data.slice(0, 4)\n\n    return (\n      <VegaLite\n        data={{ values: data }}\n        spec={spec}\n        style={{ paddingLeft: 0 }}\n      />\n    );\n  }\n}\n\nexport default ClusterDistribution;\n","// Gets all neighbors in activeGroups that only have one feature difference.\nexport function getNeighbors(subgroup, activeGroups) {\n  let oneAwayGroups = [];\n  activeGroups.forEach(group => {\n    let same = group.feats.length;\n    let diffFeatInd = -1;\n    subgroup.feats.forEach((feat, ind) => {\n      let i = group.feats.indexOf(feat);\n      if (i >= 0) {\n        if (group.vals[i] === subgroup.vals[ind]) {\n          same--;\n        } else {\n          diffFeatInd = ind;\n        }\n      }\n    });\n    if (same === 1) {\n      group[\"featDiff\"] = diffFeatInd;\n      oneAwayGroups.push(group);\n    }\n  });\n  return oneAwayGroups;\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClusterDistribution from \"./ClusterDistribution\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { CLICKED_COLOR, METRICS } from \"../util/globals\";\nimport { getNeighbors } from \"../util/neighboringClusters\";\nimport { TableHead } from \"@material-ui/core\";\nimport \"../style/GroupSuggestions.css\";\n\nconst styles = {\n  paper: {\n    height: 350,\n    overflow: \"scroll\",\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 30\n  },\n  metrics: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"space-between\",\n    padding: 7\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"space-between\",\n    padding: 7\n  },\n  cards: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"center\"\n  },\n  cardContent: {\n    padding: 0\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  headerDivider: {\n    marginBottom: 7\n  },\n  table: {\n    width: \"100%\"\n  },\n  fab: {\n    float: \"right\"\n  },\n  paging: {\n    float: \"right\",\n    display: \"inline-flex\",\n    marginTop: 7,\n    justifyContent: \"center\"\n  },\n  label: {\n    textTransform: \"capitalize\"\n  },\n  value: {\n    color: \"#718C73\"\n  },\n  similarGroups: {\n    display: \"inline-flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  settings: {\n    display: \"inline-flex\"\n  },\n  sortText: {\n    marginRight: 13,\n    marginTop: 7\n  },\n  diffTable: {\n    marginTop: 10\n  },\n  leftCell: {\n    paddingLeft: \"10px\",\n    maxWidth: 50\n  }\n};\n\nclass GroupSuggestions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      showSimilar: false,\n      neighbors: [],\n      sort: \"acc\"\n    };\n  }\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.clustersLoaded) {\n      return true;\n    }\n    return false;\n  }\n\n  mouseEnter = cluster => {\n    this.props.suggestedHover(cluster);\n  };\n\n  mouseLeave = cluster => {\n    this.props.suggestedUnhover(cluster);\n  };\n\n  mouseClick = cluster => {\n    this.props.suggestedClick(cluster);\n  };\n\n  pageRight = () => {\n    if (this.state.page * 2 + 3 < this.props.clusters.length) {\n      this.setState({\n        page: this.state.page + 1\n      });\n    }\n  };\n\n  pageLeft = () => {\n    if (this.state.page !== 0) {\n      this.setState({\n        page: this.state.page - 1\n      });\n    }\n  };\n\n  changeView = val => {\n    if (val.target.value === 0) {\n      this.setState({\n        showSimilar: false\n      });\n    } else {\n      if (this.props.clicked !== -1) {\n        this.setState({\n          neighbors: getNeighbors(\n            this.props.activeGroups[this.props.clicked],\n            this.props.activeGroups.slice()\n          ),\n          showSimilar: true\n        });\n      } else {\n        this.setState({\n          showSimilar: true\n        });\n      }\n    }\n  };\n\n  changeSort = val => {\n    this.setState({\n      sort: val.target.value\n    });\n  };\n\n  render() {\n    let classes = this.props.classes;\n\n    // SIMILAR subgroups\n    if (this.state.showSimilar && this.state.neighbors.length !== 0 && this.props.clicked !== -1) {\n      let clickedGroup = this.props.activeGroups[this.props.clicked];\n      let similarGroups = this.state.neighbors\n        .sort((a, b) => {\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\n        })\n        .map((neigh, index) => {\n          return (\n            <Card\n              className={\"similar-card\"}\n              key={index}\n              onMouseEnter={_ => this.mouseEnter(neigh)}\n              onMouseLeave={_ => this.mouseLeave(neigh)}\n              onClick={_ => this.mouseClick(neigh)}\n            >\n              <CardContent className={classes.cardContent}>\n                <Table className={classes.table} padding=\"dense\">\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        <b> Group {this.state.page * 2 + index + 1} </b>\n                        <br />\n                        {neigh.type === \"top\" ? \"Generated\" : \"Suggested\"}\n                      </TableCell>\n                      <TableCell />\n                      <TableCell align=\"right\">\n                        {neigh.metrics.size} Instances\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n                <Table className={classes.diffTable} padding=\"dense\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Feature Difference</TableCell>\n                      <TableCell style={{ color: CLICKED_COLOR }} align=\"right\">\n                        Pinned\n                      </TableCell>\n                      <TableCell style={{ color: \"#718C73\" }} align=\"right\">\n                        Similar\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableCell>{clickedGroup.feats[neigh.featDiff]}</TableCell>\n                    <TableCell align=\"right\">\n                      {clickedGroup.vals[neigh.featDiff]}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {\n                        neigh.vals[\n                          neigh.feats.indexOf(\n                            clickedGroup.feats[neigh.featDiff]\n                          )\n                        ]\n                      }\n                    </TableCell>\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          );\n        });\n\n      return (\n        <Paper className={classes.paper}>\n          <div className={classes.header}>\n            <FormControl>\n              <Select value={1} onChange={this.changeView}>\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\n              </Select>\n            </FormControl>\n            <div className={classes.settings}>\n              <Typography variant=\"body1\" className={classes.sortText}>\n                Sort by:\n              </Typography>\n              <FormControl>\n                <Select value={this.state.sort} onChange={this.changeSort}>\n                  {METRICS.map(m => (\n                    <MenuItem value={m.value}>{m.label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <Divider className={classes.headerDivider} />\n          <div className={classes.similarGroups}>{similarGroups}</div>\n        </Paper>\n      );\n    } else {\n      // SUGGESTED subgroups\n      // Get least performing subgroups.\n      let bottomClusters = this.props.clusters\n        .filter(clust => clust.metrics.size > this.props.minSize)\n        .sort((a, b) => {\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\n        })\n        .slice(this.state.page * 2, this.state.page * 2 + 2);\n\n      let cards = bottomClusters.map((clust, index) => (\n        <Card\n          className={\"suggested-card\"}\n          key={index}\n          onMouseEnter={_ => this.mouseEnter(clust)}\n          onMouseLeave={_ => this.mouseLeave(clust)}\n          onClick={_ => this.mouseClick(clust)}\n        >\n          <CardContent className={classes.cardContent}>\n            <Table className={classes.table} padding=\"none\">\n              <TableBody>\n                <TableRow>\n                  <TableCell padding=\"none\" className={classes.leftCell}>\n                    <b>Group {this.state.page * 2 + index + 1}</b>\n                  </TableCell>\n                  <TableCell width={80} padding=\"dense\" align=\"right\">\n                    {clust.metrics.size} Instances\n                  </TableCell>\n                </TableRow>\n                {clust.feats.map((feat, i) => (\n                  <TableRow key={i}>\n                    <TableCell padding=\"none\" className={classes.leftCell}>\n                      <b className={classes.label}>{feat}</b>\n                      <br />\n                      <span className={classes.value}>{clust.vals[i]}</span>\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"right\"\n                    >\n                      <ClusterDistribution\n                        maxVal={clust.vals[i]}\n                        features={this.props.features}\n                        values={this.props.values}\n                        cluster={clust}\n                        feature={feat}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      ));\n\n      return (\n        <Paper className={classes.paper}>\n          <div className={classes.header}>\n            <FormControl>\n              <Select value={0} onChange={this.changeView}>\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\n              </Select>\n            </FormControl>\n            <div className={classes.settings}>\n              <Typography variant=\"body1\" className={classes.sortText}>\n                Sort by:\n              </Typography>\n              <FormControl>\n                <Select value={this.state.sort} onChange={this.changeSort}>\n                  {METRICS.map(m => (\n                    <MenuItem value={m.value}>{m.label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <div className={classes.paging}>\n                <ChevronLeft onClick={this.pageLeft} />\n                <Typography variant=\"body1\">\n                  {this.state.page * 2 + 1} -{\" \"}\n                  {this.state.page * 2 + 2 > this.props.clusters.length\n                    ? this.props.clusters.length\n                    : this.state.page * 2 + 2}\n                </Typography>\n                <ChevronRight onClick={this.pageRight} />\n              </div>\n            </div>\n          </div>\n          <Divider className={classes.headerDivider} />\n          <div className={classes.cards}>{cards}</div>\n        </Paper>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(GroupSuggestions);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport Select from \"react-select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\n\nconst styles = theme => ({\n  selectorWrapper: {\n    minWidth: 250,\n    color: \"white\",\n    marginRight: 20,\n    marginTop: 10\n  },\n  input: {\n    display: \"flex\",\n    padding: 0\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    fontSize: 16\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  ValueContainer\n};\n\nclass MetricSelector extends Component {\n  handleChange = values => {\n    this.props.onMetricChange(values);\n  };\n\n  render() {\n    // these have to be defined out here or it breaks...idk man\n    var selectedOptions = this.props.selectedMetrics;\n    var suggs = this.props.suggestions;\n\n    return (\n      <div className={this.props.classes.selectorWrapper}>\n        <Select\n          classes={this.props.classes}\n          options={suggs}\n          components={components}\n          onChange={this.handleChange}\n          value={selectedOptions}\n          placeholder=\"Select Fairness Metrics\"\n          isMulti\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MetricSelector);\n","import { withStyles } from \"@material-ui/core/styles\";\nimport * as d3 from \"d3\";\nimport React, { Component } from \"react\";\nimport \"../style/StripPlot.css\";\n\nconst styles = {\n  plot: {\n    display: \"inline-block\",\n    minWidth: 500,\n    width: \"100%\"\n  }\n};\n\nclass StripPlot extends Component {\n  constructor(props) {\n    super(props);\n\n    let margin = {\n      top: 0,\n      right: 50,\n      bottom: 0,\n      left: 50\n    };\n    let width = 1000;\n    let height = 80;\n\n    let xScale = d3\n      .scaleLinear()\n      .range([0, width - margin.right - margin.left])\n      .domain([0, 100]);\n    let yScale = d3\n      .scaleLinear()\n      .range([height - margin.top - margin.bottom, 0])\n      .domain([0, 100]);\n\n    let xAxis = d3\n      .axisBottom()\n      .scale(xScale)\n      .tickPadding(8)\n      .ticks(8)\n      .tickFormat(function(d) {\n        return d * 1 + \"%\";\n      });\n\n    this.state = {\n      margin: margin,\n      width: width - margin.left - margin.right,\n      height: height - margin.top - margin.bottom,\n      xScale: xScale,\n      yScale: yScale,\n      xAxis: xAxis\n    };\n  }\n\n  componentDidMount() {\n    this.createStripPlot();\n  }\n\n  createStripPlot = () => {\n    const node = this.node;\n\n    d3.select(node)\n      .selectAll(\"svg\")\n      .remove();\n\n    this.props.selectedMetrics.forEach(m => {\n      let svg = d3\n        .select(node)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 1000 105\")\n        .attr(\"id\", \"stripplot-\" + m.value)\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          \"translate(\" +\n            this.state.margin.left +\n            \",\" +\n            this.state.margin.top +\n            \")\"\n        );\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\n        .call(this.state.xAxis)\n        .append(\"text\")\n        .text(m.label)\n        .attr(\"class\", \"axis-label\")\n        .attr(\"x\", -10)\n        .attr(\"y\", -10);\n    });\n\n    this.update();\n  };\n\n  update = () => {\n    this.props.selectedMetrics.forEach(m => {\n      let svg = d3.select(this.node).select(\"#stripplot-\" + m.value);\n\n      svg.selectAll(\".percentline\").remove();\n\n      svg\n        .selectAll(\".percentline\")\n        .data(this.props.activeGroups, d => d.id)\n        .enter()\n        .append(\"line\")\n        .filter(d => {\n          return d.metrics.size > this.props.minSize;\n        })\n        .attr(\"x1\", d => {\n          return this.state.xScale(d.metrics[m.value]) + 50;\n        })\n        .attr(\"x2\", d => {\n          return this.state.xScale(d.metrics[m.value]) + 50;\n        })\n        .attr(\"y1\", 30)\n        .attr(\"y2\", 80)\n        .attr(\"class\", \"percentline\")\n        .attr(\"id\", d => {\n          return \"linecluster\" + d.id;\n        })\n        .on(\"mouseover\", d => {\n          this.props.barHover(d.id);\n        })\n        .on(\"mouseout\", d => {\n          this.props.barHover(-1);\n        })\n        .on(\"click\", d => {\n          this.props.barClick(d.id);\n        });\n\n      delete this.props.avgs.size;\n\n      let avgG = svg\n        .selectAll(\"line.avg\")\n        .data(this.props.avgs)\n        .enter()\n        .append(\"g\");\n\n      avgG\n        .append(\"line\")\n        .attr(\"x1\", d => {\n          return this.state.xScale(d[m.value]) + 50;\n        })\n        .attr(\"x2\", d => {\n          return this.state.xScale(d[m.value]) + 50;\n        })\n        .attr(\"y1\", 20)\n        .attr(\"y2\", 90)\n        .style(\"stroke\", \"#5a6d94\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\", 0.4);\n\n      avgG\n        .append(\"text\")\n        .text(d => \"avg: \" + d[m.value].toFixed(2) + \"%\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", d => {\n          return this.state.xScale(d[m.value]) + 50;\n        })\n        .attr(\"y\", 15)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"fill\", \"#5a6d94\");\n    });\n  };\n\n  shouldComponentUpdate(nextProps, _) {\n    if (nextProps.minSize !== this.props.minSize) {\n      return true;\n    }\n    if (\n      nextProps.selectedMetrics.length !== this.props.selectedMetrics.length\n    ) {\n      return true;\n    }\n    if (nextProps.activeGroups.length === this.props.activeGroups.length) {\n      return false;\n    }\n    return true;\n  }\n\n  componentDidUpdate(prevProps, _) {\n    if (\n      prevProps.selectedMetrics.length !== this.props.selectedMetrics.length\n    ) {\n      this.createStripPlot();\n    }\n  }\n\n  render() {\n    this.update();\n    return (\n      <div\n        className={this.props.classes.plot}\n        ref={node => (this.node = node)}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(StripPlot);\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { FaMedium, FaScroll, FaGithub, FaGlobe } from \"react-icons/fa\";\nimport { PRIMARY_COLOR, TERTIARY_COLOR } from \"../util/globals\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/* Datasets - Add new dataset imports here. */\nimport compasData from \"../data/compas.csv\";\nimport adultData from \"../data/adult.csv\";\n// import censusData from \"../data/census.csv\";\n\nconst styles = {\n  body: {\n    display: \"flex\",\n    flexDirection: \"inline\"\n  },\n  content: {\n    width: \"55%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 65,\n    marginLeft: 10\n  },\n  subtitle: {\n    flexGrow: 1,\n    color: TERTIARY_COLOR,\n    textAlign: \"center\"\n  },\n  tagline: {\n    flexGrow: 1,\n    marginLeft: 30,\n    color: TERTIARY_COLOR,\n    textAlign: \"left\"\n  },\n  loadingScreen: {\n    minWidth: \"100%\",\n    minHeight: \"calc(100% + 22px)\",\n    marginTop: -22,\n    backgroundColor: PRIMARY_COLOR,\n    margin: \"0px auto\"\n  },\n  loadingText: {\n    paddingTop: 150,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  loadingProgress: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: \"white\"\n  },\n  datasets: {\n    width: \"600px\",\n    margin: \"0px auto\",\n    marginTop: 10\n  },\n  tabletitle: {\n    marginTop: 50,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  title: {\n    fontWeight: 800\n  },\n  adddata: {\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  dataLink: {\n    textDecorationColor: \"black\",\n    color: \"black\",\n    textDecoration: \"none\"\n  },\n  socialLink: {\n    padding: 10,\n    background: PRIMARY_COLOR,\n    margin: 10,\n    color: TERTIARY_COLOR,\n    fontFamily: \"Roboto\",\n    fontWeight: 500,\n    fontSize: 16,\n    borderColor: \"white\",\n    borderRadius: 7,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  social: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 70\n  },\n  icon: {\n    fontSize: 16,\n    marginRight: 10\n  }\n};\n\nclass Welcome extends Component {\n  render() {\n    let classes = this.props.classes;\n\n    let loadIcon = <></>\n    if (this.props.loading) {\n      loadIcon = <CircularProgress />\n    }\n\n    return (\n      <div className={classes.loadingScreen}>\n        <Typography\n          variant=\"h2\"\n          color=\"inherit\"\n          className={classes.loadingText}\n        >\n          <strong>FairVis</strong>{\" \"}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.subtitle}>\n          Audit Classification Models for Intersectional Bias\n        </Typography>\n        <Typography variant=\"h6\" className={classes.tabletitle}>\n          Select a Dataset\n        </Typography>\n        <Paper className={classes.datasets}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Dataset</TableCell>\n                <TableCell>Goal</TableCell>\n                <TableCell>Size</TableCell>\n                <TableCell align=\"center\">{loadIcon}</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* Add a new row to this body for a dataset */}\n            <TableBody>\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\">\n                  <a\n                    className={classes.dataLink}\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Adult\"\n                  >\n                    UCI Adult\n                  </a>\n                </TableCell>\n                <TableCell>Predict income >$50K</TableCell>\n                <TableCell>32,562</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={_ => this.props.loadData(adultData)}\n                  >\n                    Select\n                  </Button>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\">\n                  <a\n                    className={classes.dataLink}\n                    href=\"https://github.com/propublica/compas-analysis/\"\n                  >\n                    COMPAS\n                  </a>\n                </TableCell>\n                <TableCell>Predict recidivism</TableCell>\n                <TableCell>6,173</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={_ => this.props.loadData(compasData)}\n                  >\n                    Select\n                  </Button>\n                </TableCell>\n              </TableRow>\n              {/* <TableRow> \n                <TableCell component=\"th\" scope=\"row\">\n                  <a\n                    className={classes.dataLink}\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Census-Income+%28KDD%29\"\n                  >\n                    UCI Census-Income\n                  </a>\n                </TableCell>\n                <TableCell>Predict income >$50K</TableCell>\n                <TableCell>199,523</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={_ => this.props.loadData(censusData)}\n                  >\n                    Select\n                  </Button>\n                </TableCell>\n              </TableRow> */}\n            </TableBody>\n          </Table>\n        </Paper>\n        <a href=\"https://github.com/poloclub/FairVis/blob/master/README.md\" className={classes.adddata}>\n          <p>Instructions for adding a custom dataset</p>\n        </a>\n\n        <div className={classes.social}>\n          <a href=\"https://arxiv.org/abs/1904.05419\">\n            <button className={classes.socialLink}>\n              <FaScroll className={classes.icon} />\n              Full Paper\n            </button>\n          </a>\n          <a href=\"https://medium.com/p/acbd362a3e2f\">\n            <button className={classes.socialLink}>\n              <FaMedium className={classes.icon} /> Blog\n            </button>\n          </a>\n          <a href=\"https://github.com/poloclub/FairVis\">\n            <button className={classes.socialLink}>\n              <FaGithub className={classes.icon} />\n              Code\n            </button>\n          </a>\n          <a href=\"https://cabreraalex.com/#/paper/fairvis\">\n            <button className={classes.socialLink}>\n              <FaGlobe className={classes.icon} />\n              Cite\n            </button>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Welcome);\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  withStyles\n} from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/lab/Slider\";\nimport * as d3 from \"d3\";\nimport React, { Component } from \"react\";\nimport \"../style/App.css\";\nimport { getClusters } from \"../util/clusterDescriptions\";\nimport { createSubgroups } from \"../util/generateSubgroups\";\nimport {\n  METRICS,\n  PRIMARY_COLOR,\n  SECONDARY_COLOR,\n  TERTIARY_COLOR\n} from \"../util/globals\";\nimport worker from \"../workers/dataLoader.js\";\nimport WebWorker from \"../workers/WebWorker\";\nimport ExpandedCard from \"./ExpandedCard\";\nimport FeatureDrawer from \"./FeatureDrawer\";\nimport GroupSuggestions from \"./GroupSuggestions\";\nimport MetricSelector from \"./MetricSelector\";\nimport StripPlot from \"./StripPlot\";\nimport Welcome from \"./Welcome\";\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-50459890-3');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: PRIMARY_COLOR\n    },\n    secondary: {\n      main: SECONDARY_COLOR\n    }\n  },\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        backgroundColor: \"#EBEBEB\"\n      },\n      track: {\n        backgroundColor: \"#EBEBEB\"\n      }\n    }\n  }\n});\n\nconst styles = {\n  appBar: {\n    zIndex: 1\n  },\n  body: {\n    display: \"flex\",\n    flexDirection: \"inline\"\n  },\n  content: {\n    width: \"55%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 65,\n    marginLeft: 10\n  },\n  plot: {\n    width: \"100%\"\n  },\n  slider: {\n    width: 150,\n    padding: 20,\n    marginRight: 30\n  },\n  reset: {\n    float: \"right\"\n  },\n  subtitle: {\n    flexGrow: 1,\n    color: TERTIARY_COLOR,\n    textAlign: \"center\"\n  },\n  tagline: {\n    flexGrow: 1,\n    marginLeft: 30,\n    color: TERTIARY_COLOR,\n    textAlign: \"left\"\n  },\n  loadingScreen: {\n    minWidth: \"100%\",\n    minHeight: \"calc(100% + 22px)\",\n    marginTop: -22,\n    backgroundColor: PRIMARY_COLOR,\n    margin: \"0px auto\"\n  },\n  loadingText: {\n    paddingTop: 150,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  loadingProgress: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: \"white\"\n  },\n  datasets: {\n    width: \"600px\",\n    margin: \"0px auto\",\n    marginTop: 10\n  },\n  tabletitle: {\n    marginTop: 50,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  title: {\n    fontWeight: 800\n  },\n  adddata: {\n    color: \"white\",\n    textAlign: \"center\"\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    document.title = \"FairVis - Audit Classification for Intersectional Bias\";\n\n    /**\n     * Every subgroup in the activeGroups array should have the following form:\n     * {\n     *  feats: -> Array of features defining the group\n     *  vals: -> Array of values corresponding to the features (same indices)\n     *  insts: -> Array of all the instances belonging to the subgroup\n     *  metrics: -> Object containing all the base metrics (Acc, Prec, etc.)\n     *  type: -> The type of subgroup it is, either 'top' or 'bottom'\n     *  distrib: -> Value distribution for each feature\n     * }\n     */\n    this.state = {\n      // Array of instances with features, label, class output, and cluster\n      data: [],\n      // distribution counts of data in same order as features, sorted by value\n      dataDistrib: {},\n      // Array of clusters from DBSCAN with metrics and value distribution\n      clusters: [],\n      // Array of active groups with values and metrics\n      activeGroups: [],\n      // Object of metrics for the overall group\n      avgs: [],\n\n      // Features and values for all instances\n      features: [],\n      values: [],\n\n      // State of StripPlot\n      hovered: -1,\n      clicked: -1,\n\n      // State for selected metrics, by default accuracy, recall, and specificity\n      selectedMetrics: METRICS.slice(0, 3),\n\n      minSize: 0,\n\n      loading: 0,\n      dataLoaded: false,\n      clustersLoaded: false,\n    };\n  }\n\n  loadData = data => {\n    this.setState({ loading: 1 });\n\n    // WebWorker to run preprocessing in parallel.\n    let loaderWorker = new WebWorker(worker);\n\n    loaderWorker.addEventListener(\"message\", r => {\n      let out = r.data;\n      let clusters = getClusters(out.data, out.feats, out.vals);\n      this.setState({\n        data: out.data,\n        dataDistrib: out.distrib,\n        avgs: [out.avgs],\n        features: out.feats,\n        values: out.vals,\n        clusters: clusters,\n        dataLoaded: true,\n        clustersLoaded: true\n      });\n    });\n    d3.csv(data).then(d => loaderWorker.postMessage(d));\n  };\n\n  createSubgroups = groups => {\n    // TODO: Prevent adding duplicate subgroups\n    let subgroups = createSubgroups(\n      this.state.data,\n      groups,\n      this.state.activeGroups.length,\n      this.state.features,\n      this.state.values\n    );\n    this.setState({\n      activeGroups: this.state.activeGroups.concat(subgroups)\n    });\n  };\n\n  // Either -1 or the cluster that was hovered.\n  suggestedHover = clust => {\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\n\n    const foundArr = this.state.activeGroups.filter(\n      el => el.clusterid === clust.clusterid\n    );\n\n    if (foundArr.length === 0) {\n      clust.id = this.state.activeGroups.length;\n\n      this.setState(\n        {\n          activeGroups: this.state.activeGroups.concat(clust),\n          hovered: clust.id\n        },\n        () => {\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"linehover\", true);\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\n            \"lineclick\",\n            true\n          );\n        }\n      );\n    } else {\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"linehover\", true);\n      this.setState(\n        {\n          hovered: foundArr[0].id\n        },\n        () => {\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\n            \"lineclick\",\n            true\n          );\n        }\n      );\n    }\n  };\n\n  suggestedUnhover = clust => {\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\n\n    let newActives = this.state.activeGroups.filter(\n      e => e.id === this.state.clicked || e.id !== clust.id\n    );\n\n    this.setState(\n      {\n        activeGroups: newActives,\n        hovered: -1\n      },\n      () => {\n        d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\n          \"lineclick\",\n          true\n        );\n      }\n    );\n  };\n\n  /**\n   * Have to set id to length -1 since groups gets added once on hover then again\n   * on click. If not it breaks when hovering later on\n   */\n  suggestedClick = clust => {\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\n\n    const foundArr = this.state.activeGroups.filter(\n      el => el.clusterid === clust.clusterid\n    );\n\n    if (foundArr.length === 0) {\n      clust.id = this.state.activeGroups.length;\n\n      this.setState(\n        {\n          activeGroups: this.state.activeGroups.concat(clust),\n          clicked: clust.id\n        },\n        () => {\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"lineclick\", true);\n        }\n      );\n    } else {\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"lineclick\", true);\n      this.setState({\n        clicked: foundArr[0].id\n      });\n    }\n  };\n\n  barHover = id => {\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\n\n    d3.selectAll(\"#linecluster\" + id).classed(\"linehover\", true);\n\n    this.setState({\n      hovered: id\n    });\n  };\n\n  barClick = id => {\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\n    d3.selectAll(\"#linecluster\" + id).classed(\"lineclick\", true);\n\n    this.setState({\n      clicked: id\n    });\n  };\n\n  changeMinSize = (_, val) => {\n    this.setState({\n      minSize: val\n    });\n  };\n\n  resetGroups = () => {\n    this.setState({\n      hovered: -1,\n      clicked: -1,\n      minSize: 0,\n      activeGroups: []\n    });\n  };\n\n  handleMetricsChange = m => {\n    this.setState({\n      selectedMetrics: m\n    });\n  };\n\n  render() {\n    let classes = this.props.classes;\n\n    if (!this.state.dataLoaded) {\n      return <Welcome loadData={this.loadData} loading={this.state.loading} />;\n    }\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography\n              inline\n              variant=\"h4\"\n              color=\"inherit\"\n              className={classes.title}\n            >\n              FairVis\n            </Typography>\n            <Typography inline variant=\"h6\" className={classes.tagline}>\n              {\" \"}\n              Audit Classification for Intersectional Bias{\" \"}\n            </Typography>\n            <Typography variant=\"body1\" color=\"inherit\">\n              Minimum Size: {this.state.minSize}\n            </Typography>\n            <Slider\n              className={classes.slider}\n              value={this.state.minSize}\n              onChange={this.changeMinSize}\n              step={1}\n              min={0}\n              max={\n                this.state.activeGroups.length === 0\n                  ? 0\n                  : d3.max(this.state.activeGroups, d => d.metrics.size)\n              }\n            />\n            <Button\n              className={classes.reset}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.resetGroups}\n            >\n              Reset Groups\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.body}>\n          <FeatureDrawer\n            features={this.state.features}\n            values={this.state.values}\n            createSubgroups={this.createSubgroups}\n            dataDistrib={this.state.dataDistrib}\n            dataLoaded={this.state.dataLoaded}\n            hovered={this.state.hovered}\n            clicked={this.state.clicked}\n            activeGroups={this.state.activeGroups}\n          />\n          <div className={classes.content}>\n            <MetricSelector\n              className={classes.metricSelector}\n              onMetricChange={this.handleMetricsChange}\n              suggestions={METRICS}\n              selectedMetrics={this.state.selectedMetrics}\n            />\n            <div className={classes.plot}>\n              <StripPlot\n                activeGroups={this.state.activeGroups}\n                avgs={this.state.avgs}\n                barHover={this.barHover}\n                barClick={this.barClick}\n                minSize={this.state.minSize}\n                selectedMetrics={this.state.selectedMetrics}\n              />\n            </div>\n            <GroupSuggestions\n              clusters={this.state.clusters}\n              minSize={this.state.minSize}\n              suggestedHover={this.suggestedHover}\n              suggestedUnhover={this.suggestedUnhover}\n              suggestedClick={this.suggestedClick}\n              clustersLoaded={this.state.clustersLoaded}\n              features={this.state.features}\n              values={this.state.values}\n              clicked={this.state.clicked}\n              activeGroups={this.state.activeGroups}\n            />\n          </div>\n          <ExpandedCard\n            hovered={this.state.hovered}\n            clicked={this.state.clicked}\n            activeGroups={this.state.activeGroups}\n            selectedMetrics={this.state.selectedMetrics}\n            clusters={this.state.clusters}\n          />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}