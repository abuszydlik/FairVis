{"version":3,"sources":["data/compas.csv","data/adult.csv","util/generateSubgroups.js","util/clusterDescriptions.js","util/globals.js","workers/dataLoader.js","workers/WebWorker.js","components/ClassDistribution.js","components/MetricsDistribution.js","components/ExpandedCard.js","components/Histogram.js","components/FeatureDrawer.js","components/ClusterDistribution.js","util/neighboringClusters.js","components/GroupSuggestions.js","components/MetricSelector.js","components/StripPlot.js","components/Welcome.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","createSubgroups","data","groups","nextId","allFeatures","allValues","sub","Map","groupFeatures","Object","keys","forEach","inst","key","vals","include","feat_name","v","includes","length","push","slice","old","get","undefined","set","insts","subgroups","metrics","i","group","fm","calculateFairnessMetrics","dist","f","thisVals","v_dist","item","entries","tuple","collator","Intl","Collator","numeric","sensitivity","distrib_arr","r","sort","a","b","compare","calcValueDist","id","feats","type","distrib","calculateSubgroupMetrics","m","items","p","n","tp","tn","fp","fn","predicted","Math","round","parseFloat","actual","parseInt","calculateBaseRates","size","acc","rec","spec","prec","npv","fnr","fpr","fdr","for","f1","k","isNaN","getClusters","features","splice","indexOf","all_atts","attr","s","Set","map","clustInstances","cluster","clustDistributions","clustDistrib","feat","featDistrib","clustEntropies","_","clustEntr","arr","log2","shannonEntropy","clustDefining","orderedFeats","orderedVals","reduce","clusterid","SECONDARY_COLOR","TERTIARY_COLOR","METRICS","label","value","self","addEventListener","e","out","avgs","s_arr","Array","from","postMessage","WebWorker","worker","code","toString","blob","Blob","Worker","URL","createObjectURL","$schema","mark","tooltip","width","transform","calculate","as","encoding","y","field","axis","title","labelFontSize","labelPadding","x","aggregate","format","color","scale","domain","range","legend","ClassDistribution","this","props","clickedGroup","name","val","hoveredGroup","values","Component","height","spacing","row","padding","orient","axisWidth","offset","header","labels","MetricsDistribution","concat","selectedMetrics","metric","styles","card","marginTop","marginRight","overflow","featureStyle","textAlign","avatar","backgroundColor","expand","margin","marginBottom","hovered","clicked","display","flexDirection","justifyContent","selectedGroups","paddingLeft","paddingRight","ExpandedCard","export","activeGroups","text","filename","document","createElement","setAttribute","encodeURIComponent","click","saveText","JSON","stringify","nextProps","nextState","classes","featsClick","featsHov","hoveredCell","clickedCell","align","className","exportButton","variant","onClick","table","style","tableHeader","withStyles","boxWidth","boxHeight","Histogram","update","drawGlobalDistBar","dataDistrib","featName","featIndex","maxy","groupIndex","drawGroupDistBar","drawBar","d3","remove","feat_dist_arr","data_arr","bar_type","node","svg","append","state","left","top","rangeRound","d","hght","tip","d3tip","html","call","selectAll","enter","bandwidth","on","show","hide","right","bottom","ref","info","drawer","flexShrink","maxWidth","feature","button","listItem","paddingBottom","alignItems","listText","radio","divider","boxLabel","textTransform","fontSize","fontWeight","cursor","FeatureDrawer","compareState","oldState","newState","opened","checked","subchecked","handleToggle","newChecked","has","delete","add","setState","handleSubToggle","feat_i","item_i","subnew","handleClick","newOpened","handleHover","j","selector","handleUnhover","handleClickSubgroup","val_arr","valIndex","max_ys","paper","anchor","placement","alert","onChange","disabled","in","timeout","unmountOnExit","value_i","onMouseOver","onMouseOut","primary","order","ClusterDistribution","makeup","maxVal","getNeighbors","subgroup","oneAwayGroups","same","diffFeatInd","ind","GroupSuggestions","mouseEnter","suggestedHover","mouseLeave","suggestedUnhover","mouseClick","suggestedClick","pageRight","page","clusters","pageLeft","changeView","target","showSimilar","neighbors","changeSort","clustersLoaded","similarGroups","neigh","index","onMouseEnter","onMouseLeave","cardContent","diffTable","featDiff","settings","sortText","headerDivider","cards","filter","clust","minSize","leftCell","cell","paging","marginLeft","fab","float","flexWrap","inputComponent","inputRef","components","Control","fullWidth","InputProps","inputProps","selectProps","input","innerRef","children","innerProps","textFieldProps","Menu","square","MultiValue","tabIndex","classNames","chip","chipFocused","isFocused","onDelete","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","selected","component","isSelected","Placeholder","placeholder","ValueContainer","valueContainer","MetricSelector","handleChange","onMetricChange","selectedOptions","suggs","suggestions","selectorWrapper","options","isMulti","theme","minWidth","flex","unit","emphasize","palette","grey","position","zIndex","StripPlot","createStripPlot","xAxis","select","xScale","barHover","barClick","avgG","toFixed","yScale","tickPadding","ticks","tickFormat","prevProps","plot","body","content","subtitle","flexGrow","tagline","loadingScreen","minHeight","loadingText","paddingTop","loadingProgress","datasets","tabletitle","adddata","dataLink","textDecorationColor","textDecoration","socialLink","background","fontFamily","borderColor","borderRadius","social","icon","Welcome","loadIcon","loading","scope","href","loadData","adultData","compasData","createMuiTheme","main","secondary","overrides","MuiSlider","thumb","track","appBar","slider","reset","App","loaderWorker","dataLoaded","then","classed","foundArr","el","newActives","changeMinSize","resetGroups","handleMetricsChange","inline","step","min","max","metricSelector","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,ycCGpC,SAASC,EAAgBC,EAAMC,EAAQC,EAAQC,EAAaC,GACjE,IAAIC,EAAM,IAAIC,IAEVC,EAAgBC,OAAOC,KAAKR,GAiChC,OA/BAD,EAAKU,QAAQ,SAAAC,GACX,IAAIC,EAAM,GACNC,EAAO,GAEPC,GAAU,EAYd,GAVAP,EAAcG,QAAQ,SAAAK,GACpB,IAAIC,EAAIL,EAAKI,GACTd,EAAOc,GAAWE,SAASD,IAAmC,IAA7Bf,EAAOc,GAAWG,QACrDL,EAAKM,KAAKH,GACVJ,GAAOI,EAAI,MAEXF,GAAU,IAIVA,EAAS,CAEXF,EAAMA,EAAIQ,MAAM,GAAI,GAGpB,IAAIC,EAAMhB,EAAIiB,IAAIV,QACNW,IAARF,EACFhB,EAAImB,IAAIZ,EAAK,CAAEC,KAAMA,EAAMY,MAAO,CAACd,MAEnCU,EAAG,MAAUF,KAAKR,GAClBN,EAAImB,IAAIZ,EAAKS,OA2DrB,SACEK,EACAxB,EACAK,EACAJ,EACAC,GAEA,IAAIuB,EAAU,GAGVC,EAAI1B,EAkBR,OAhBAwB,EAAUhB,QAAQ,SAACmB,EAAOjB,GACxB,IAAIkB,EAAKC,EAAyBF,EAAMJ,OACpCO,EAuDR,SAAuBP,EAAOtB,EAAaC,GAEzC,IAAI4B,EAAO,GACX7B,EAAYO,QAAQ,SAACuB,EAAGL,GACtB,IAAIM,EAAW9B,EAAUwB,GACrBO,EAAS,GACbD,EAASxB,QAAQ,SAACM,EAAGY,GACnBO,EAAOnB,GAAK,IAEdgB,EAAKC,GAAKE,IAIZV,EAAMf,QAAQ,SAAC0B,EAAMR,GACnBpB,OAAO6B,QAAQD,GAAM1B,QAAQ,SAAA4B,GAE3BN,EAAKM,EAAM,IAAIA,EAAM,KAAO,MAKhC,IAAIC,EAAW,IAAIC,KAAKC,cAASlB,EAAW,CAC1CmB,SAAS,EACTC,YAAa,SAGXC,EAAc,GAOlB,OANAzC,EAAYO,QAAQ,SAAAK,GAClB,IAAI8B,EAAIrC,OAAO6B,QAAQL,EAAKjB,IAC5B8B,EAAEC,KAAK,SAACC,EAAGC,GAAJ,OAAUT,EAASU,QAAQF,EAAE,GAAIC,EAAE,MAC1CJ,EAAYzB,KAAK0B,KAGZD,EAxFMM,CAAcrB,EAAMJ,MAAOtB,EAAaC,GAEnDuB,EAAQR,KAAK,CACXgC,GAAIvB,EACJwB,MAAO7C,EACPM,KAAMgB,EAAMhB,KACZY,MAAOI,EAAMJ,MACbE,QAASG,EACTuB,KAAM,MACNC,QAAStB,IAEXJ,MAGKD,EAlFA4B,CACLlD,EACAH,EACAK,EACAJ,EACAC,GAoBG,SAAS2B,EAAyB/B,GACvC,IAAIwD,EA4DN,SAA4BC,GAC1B,IAAIC,EAAI,EACJC,EAAI,EACJC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EAqBT,OAnBAN,EAAM/C,QAAQ,SAAA0B,GACZ,IAAI4B,EAAYC,KAAKC,MAAMC,WAAW/B,EAAI,MACtCgC,EAASC,SAASjC,EAAI,MAAW,IAEnB,IAAd4B,GAA8B,IAAXI,GACrBR,IACAF,KACuB,IAAdM,GAA8B,IAAXI,GAC5BP,IACAF,KACuB,IAAdK,GAA8B,IAAXI,GAC5BN,IACAH,MAEAI,IACAL,OAIG,CACLA,EAAGA,EACHC,EAAGA,EACHC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,GA7FEO,CAAmBtE,GAEvB2B,EAAU,CACZ4C,KAAMvE,EAAKkB,OACXwC,EAAI,IAAMF,EAAEE,EAAK1D,EAAKkB,OACtByC,EAAI,IAAMH,EAAEG,EAAK3D,EAAKkB,OACtBsD,IAAM,KAAOhB,EAAEI,GAAKJ,EAAEK,KAAQL,EAAEE,EAAIF,EAAEG,GACtCc,IAAM,IAAMjB,EAAEI,IAAOJ,EAAEI,GAAKJ,EAAEO,IAC9BW,KAAO,IAAMlB,EAAEK,IAAOL,EAAEM,GAAKN,EAAEK,IAC/Bc,KAAO,IAAMnB,EAAEI,IAAOJ,EAAEI,GAAKJ,EAAEM,IAC/Bc,IAAM,IAAMpB,EAAEK,IAAOL,EAAEK,GAAKL,EAAEO,IAC9Bc,IAAM,IAAMrB,EAAEO,IAAOP,EAAEO,GAAKP,EAAEI,IAC9BkB,IAAM,IAAMtB,EAAEM,IAAON,EAAEM,GAAKN,EAAEK,IAC9BkB,IAAM,IAAMvB,EAAEM,IAAON,EAAEM,GAAKN,EAAEI,IAC9BoB,IAAM,IAAMxB,EAAEO,IAAOP,EAAEO,GAAKP,EAAEK,IAC9BoB,GAAK,IAAUzB,EAAEI,IAAO,EAAIJ,EAAEI,GAAKJ,EAAEM,GAAKN,EAAEO,KAS9C,OANAvD,OAAOC,KAAKkB,GAASjB,QAAQ,SAAAwE,GACvBC,MAAMxD,EAAQuD,MAChBvD,EAAQuD,GAAK,KAIVvD,ECtEF,SAASyD,EAAYpF,EAAMoD,EAAOvC,GAEvC,IAAIwE,EAAW7E,OAAOC,KAAKT,EAAK,IAChCqF,EAASC,OAAOD,EAASE,QAAQ,SAAU,GAC3CF,EAASC,OAAOD,EAASE,QAAQ,OAAQ,GACzCF,EAASC,OAAOD,EAASE,QAAQ,WAAY,GAG7C,IAAIC,EAAW,GACfH,EAAS3E,QAAQ,SAAA+E,GACf,IAAIC,EAAI,IAAIC,IAAI3F,EAAK4F,IAAI,SAAAlC,GAAC,OAAIA,EAAE+B,MAChCD,EAASC,GAAQC,IAInB,IAAIG,EAAiB,GAErB7F,EAAKU,QAAQ,SAAAC,IAEW,IAAlBA,EAAKmF,UAC6B,MAAhCD,EAAelF,EAAKmF,SACtBD,EAAelF,EAAKmF,SAAW,CAACnF,GAEhCkF,EAAelF,EAAKmF,SAApB,sBAAmCD,EAAelF,EAAKmF,UAAvD,CAAiEnF,OAMvE,IAAIoF,EAAqB,GACzBF,EAAenF,QAAQ,SAACoF,EAASlE,GAC/BmE,EAAmBnE,GAAK,GACxB,IAAIoE,EAAeD,EAAmBnE,GACtCoE,EAAY,KAAWF,EAAQ5E,OAC/BmE,EAAS3E,QAAQ,SAAAuF,GACfD,EAAaC,GAAQ,GACrB,IAAIC,EAAcF,EAAaC,GAC/BH,EAAQpF,QAAQ,SAAAC,GACduF,EAAYvF,EAAKsF,IAASC,EAAYvF,EAAKsF,IACvCC,EAAYvF,EAAKsF,IAAS,EAC1B,QAMV,IAAIE,EAAiB,GACrBJ,EAAmBrF,QAAQ,SAAC0F,EAAGxE,GAC7BuE,EAAevE,GAAK,GACpB,IAAIyE,EAAYF,EAAevE,GAC3BoE,EAAeD,EAAmBnE,GAClC2C,EAAOyB,EAAY,KACvBX,EAAS3E,QAAQ,SAAAuF,GACfI,EAAUJ,GAtEhB,SAAwBK,EAAK/B,GAC3B,IAAImB,EAAI,EAQR,OAPAlF,OAAOC,KAAK6F,GAAK5F,QAAQ,SAAAwE,GACvBoB,EAAIpB,GAAKoB,EAAIpB,GAAKX,EAClB,IAAIvD,EAAIsF,EAAIpB,GACF,IAANlE,IACF0E,GAAK1E,EAAIiD,KAAKsC,KAAKvF,OAGf0E,EA6Dcc,CAAeR,EAAaC,GAAO1B,OAMzD,IAAIkC,EAAgB,GAuBpB,OAtBAN,EAAezF,QAAQ,SAACoF,EAASlE,GAC/B,IAAI8E,EAAelG,OAAOC,KAAKqF,GAAShD,KAAK,SAACC,EAAGC,GAC/C,OAAO8C,EAAQ/C,GAAK+C,EAAQ9C,KAG1BgD,EAAeD,EAAmBnE,GAClC+E,EAAcD,EAAad,IAAI,SAAAK,GACjC,IAAIpF,EAAOmF,EAAaC,GACxB,OAAOzF,OAAOC,KAAKI,GAAM+F,OAAO,SAAC7D,EAAGC,GAAJ,OAAWnC,EAAKkC,GAAKlC,EAAKmC,GAAKD,EAAIC,MAGrEyD,EAAc7E,GAAK,CACjBwB,MAAOsD,EACPG,UAAWjF,EACXf,KAAM8F,EACNlF,MAAOoE,EAAejE,GACtBD,QAASI,EAAyB8D,EAAejE,IACjD0B,QAASyC,EAAmBnE,GAC5ByB,KAAM,YAIHoD,ECrGF,I,EACMK,EAAkB,UAClBC,EAAiB,UAIjBC,EAAU,CACrB,CAAEC,MAAO,WAAYC,MAAO,MAAOtG,IAAK,OACxC,CAAEqG,MAAO,YAAaC,MAAO,OAAQtG,IAAK,QAC1C,CAAEqG,MAAO,SAAUC,MAAO,MAAOtG,IAAK,OACtC,CAAEqG,MAAO,cAAeC,MAAO,OAAQtG,IAAK,QAC5C,CAAEqG,MAAO,4BAA6BC,MAAO,MAAOtG,IAAK,OACzD,CAAEqG,MAAO,sBAAuBC,MAAO,MAAOtG,IAAK,OACnD,CAAEqG,MAAO,sBAAuBC,MAAO,MAAOtG,IAAK,OACnD,CAAEqG,MAAO,uBAAwBC,MAAO,MAAOtG,IAAK,OACpD,CAAEqG,MAAO,sBAAuBC,MAAO,MAAOtG,IAAK,OACnD,CAAEqG,MAAO,KAAMC,MAAO,KAAMtG,IAAK,OCfpB,aAiBb,SAASmB,EAAyB/B,GAChC,IAAIwD,EA4BN,SAA4BC,GAC1B,IAAIC,EAAI,EACJC,EAAI,EACJC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EAqBT,OAnBAN,EAAM/C,QAAQ,SAAA0B,GACZ,IAAI4B,EAAYC,KAAKC,MAAMC,WAAW/B,EAAI,MACtCgC,EAASC,SAASjC,EAAI,MAAW,IAEnB,IAAd4B,GAA8B,IAAXI,GACrBR,IACAF,KACuB,IAAdM,GAA8B,IAAXI,GAC5BP,IACAF,KACuB,IAAdK,GAA8B,IAAXI,GAC5BN,IACAH,MAEAI,IACAL,OAIG,CACLA,EAAGA,EACHC,EAAGA,EACHC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,GA7DEO,CAAmBtE,GAEvB2B,EAAU,CACZ4C,KAAMvE,EAAKkB,OACXwC,EAAI,IAAMF,EAAEE,EAAK1D,EAAKkB,OACtByC,EAAI,IAAMH,EAAEG,EAAK3D,EAAKkB,OACtBsD,IAAM,KAAOhB,EAAEI,GAAKJ,EAAEK,KAAQL,EAAEE,EAAIF,EAAEG,GACtCc,IAAM,IAAMjB,EAAEI,IAAOJ,EAAEI,GAAKJ,EAAEO,IAC9BW,KAAO,IAAMlB,EAAEK,IAAOL,EAAEM,GAAKN,EAAEK,IAC/Bc,KAAO,IAAMnB,EAAEI,IAAOJ,EAAEI,GAAKJ,EAAEM,IAC/Bc,IAAM,IAAMpB,EAAEK,IAAOL,EAAEK,GAAKL,EAAEO,IAC9Bc,IAAM,IAAMrB,EAAEO,IAAOP,EAAEO,GAAKP,EAAEI,IAC9BkB,IAAM,IAAMtB,EAAEM,IAAON,EAAEM,GAAKN,EAAEK,IAC9BkB,IAAM,IAAMvB,EAAEM,IAAON,EAAEM,GAAKN,EAAEI,IAC9BoB,IAAM,IAAMxB,EAAEO,IAAOP,EAAEO,GAAKP,EAAEK,IAC9BoB,GAAK,IAAUzB,EAAEI,IAAO,EAAIJ,EAAEI,GAAKJ,EAAEM,GAAKN,EAAEO,KAS9C,OANAvD,OAAOC,KAAKkB,GAASjB,QAAQ,SAAAwE,GACvBC,MAAMxD,EAAQuD,MAChBvD,EAAQuD,GAAK,KAIVvD,EAiETwF,KAAKC,iBAAiB,UAAW,SAASC,GACxC,IAAIC,EAAM,GACNtH,EAAOqH,EAAErH,KAEbsH,EAAItH,KAAOA,EACXsH,EAAIC,KAAOxF,EAAyB/B,GACpCsH,EAAIlE,MAAQ5C,OAAOC,KAAKT,EAAK,IAI7B,IADA,IAAIa,EAAO,GATgC,WAUlCe,GACP,IAAI8D,EAAI,IAAIC,IAAI3F,EAAK4F,IAAI,SAAAlC,GAAC,OAAIA,EAAE4D,EAAIlE,MAAMxB,OACtC4F,EAAQC,MAAMC,KAAKhC,GACvB7E,EAAKM,KAAKqG,IAHH5F,EAAI,EAAGA,EAAI0F,EAAIlE,MAAMlC,OAAQU,IAAM,EAAnCA,GAMT0F,EAAIzG,KAAOA,EAGX,IAAIyC,EA1CN,SAAuB7B,EAAOtB,EAAaC,GAEzC,IAAI4B,EAAO,GAkBX,OAjBA7B,EAAYO,QAAQ,SAACuB,EAAGL,GACtB,IAAIM,EAAW9B,EAAUwB,GACrBO,EAAS,GACbD,EAASxB,QAAQ,SAACM,EAAGY,GACnBO,EAAOnB,GAAK,IAEdgB,EAAKC,GAAKE,IAIZV,EAAMf,QAAQ,SAAC0B,EAAMR,GACnBpB,OAAO6B,QAAQD,GAAM1B,QAAQ,SAAA4B,GAE3BN,EAAKM,EAAM,IAAIA,EAAM,KAAO,MAIzBN,EAsBOkB,CAAclD,EAAMsH,EAAIlE,MAAOkE,EAAIzG,MAC7C+B,EAAc,GAEdL,EAAW,IAAIC,KAAKC,cAASlB,EAAW,CAC1CmB,SAAS,EACTC,YAAa,SAGf2E,EAAIlE,MAAM1C,QAAQ,SAAAK,GAChB,IAAI8B,EAAIrC,OAAO6B,QAAQiB,EAAQvC,IAC/B8B,EAAEC,KAAK,SAACC,EAAGC,GAAJ,OAAUT,EAASU,QAAQF,EAAE,GAAIC,EAAE,MAC1CJ,EAAYzB,KAAK0B,KAGnByE,EAAIhE,QAAUV,EAEd+E,YAAYL,MC/IKM,EACnB,WAAYC,GAAS,oBACnB,IAAMC,EAAOD,EAAOE,WACdC,EAAO,IAAIC,KAAK,CAAC,IAAMH,EAAO,QACpC,OAAO,IAAII,OAAOC,IAAIC,gBAAgBJ,K,iKCDpCtD,EAAO,CACX2D,QAAS,kDACTC,KAAM,CAAEjF,KAAM,MAAOkF,SAAS,GAC9BC,MAAO,IACPC,UAAW,CACT,CACEC,UAAW,gBACXC,GAAI,YAGRC,SAAU,CACRC,EAAG,CACDC,MAAO,OACPzF,KAAM,UACN0F,KAAM,CAAEC,MAAO,GAAIC,cAAe,GAAIC,aAAc,KAEtDC,EAAG,CACDL,MAAO,UACPM,UAAW,MACX/F,KAAM,eACN0F,KAAM,CAAEC,MAAO,6BAA8BK,OAAQ,MAEvDC,MAAO,CACLR,MAAO,QACPzF,KAAM,UACNkG,MAAO,CACLC,OAAQ,CAAC,SAAU,SAAU,WAAY,YACzCC,MAAO,CACL,UACA,0BACA,UACA,4BAGJC,OAAQ,QAyCCC,G,iLAlCX,IAAI3J,EAAO,GA8BX,YA7BgCuB,IAA5BqI,KAAKC,MAAMC,eACb9J,EAAKmB,KAAK,CACR4I,KAAM,SACN1G,KAAM,WACN2G,IAAKJ,KAAKC,MAAMC,aAAanI,QAAQ+B,EACrC4F,MAAO,aAETtJ,EAAKmB,KAAK,CACR4I,KAAM,SACN1G,KAAM,WACN2G,IAAKJ,KAAKC,MAAMC,aAAanI,QAAQgC,EACrC2F,MAAO,mBAGqB/H,IAA5BqI,KAAKC,MAAMI,eACbjK,EAAKmB,KAAK,CACR4I,KAAM,UACN1G,KAAM,WACN2G,IAAKJ,KAAKC,MAAMI,aAAatI,QAAQ+B,EACrC4F,MAAO,WAETtJ,EAAKmB,KAAK,CACR4I,KAAM,UACN1G,KAAM,WACN2G,IAAKJ,KAAKC,MAAMI,aAAatI,QAAQgC,EACrC2F,MAAO,YAIJ,kBAAC,IAAD,CAAUtJ,KAAM,CAAEkK,OAAQlK,GAAQ0E,KAAMA,Q,GAhCnByF,aCvC1BzF,I,OAAO,CACX2D,QAAS,kDACTG,MAAO,IACP4B,OAAQ,GACR9B,KAAM,MACNG,UAAW,CACT,CACEC,UAAW,kBACXC,GAAI,YAGR0B,QAAS,GACTzB,SAAU,CACR0B,IAAK,CACHxB,MAAO,SACPzF,KAAM,UACNkG,MAAO,CAAEgB,QAAS,GAClBxB,KAAM,CAAEC,MAAO,GAAIwB,OAAQ,MAAOC,UAAW,EAAGC,QAAS,GACzDC,OAAQ,CAAC3B,MAAO,KAElBH,EAAG,CACDC,MAAO,QACPzF,KAAM,UACN0F,KAAM,CAAEC,MAAO,GAAI4B,QAAQ,IAE7BzB,EAAG,CACDL,MAAO,UACPzF,KAAM,eACNkG,MAAO,CACLC,OAAQ,CAAC,EAAG,IAEdT,KAAM,CAAEC,MAAO,GAAIK,OAAQ,MAE7Bd,QAAS,CACPO,MAAO,UACPzF,KAAM,gBAERiG,MAAO,CACLR,MAAO,QACPzF,KAAM,UACNkG,MAAO,CACLC,OAAQ,CAAC,UAAW,UAEpBC,MAAO,CAAC,UAAW,YAErBC,OAAQ,SAkCCmB,G,iLA5BH,IAAD,OACH7K,EAAO,GAuBX,OAtBI4J,KAAKC,MAAMI,eACbjK,EAAOA,EAAK8K,OACVlB,KAAKC,MAAMkB,gBAAgBnF,IAAI,SAAApC,GAC7B,MAAO,CACL3B,MAAO,UACPmJ,OAAQxH,EAAEyD,MACVC,MAAO,EAAK2C,MAAMI,aAAatI,QAAQ6B,EAAE0D,YAK7C0C,KAAKC,MAAMC,eACb9J,EAAOA,EAAK8K,OACVlB,KAAKC,MAAMkB,gBAAgBnF,IAAI,SAAApC,GAC7B,MAAO,CACL3B,MAAO,SACPmJ,OAAQxH,EAAEyD,MACVC,MAAO,EAAK2C,MAAMC,aAAanI,QAAQ6B,EAAE0D,YAK1C,kBAAC,IAAD,CAAUlH,KAAM,CAAEkK,OAAQlK,GAAQ0E,KAAMA,S,GAzBjByF,a,oBCpC5Bc,IAAM,GACVC,KAAM,CACJ1C,MAAO,MACP4B,OAAQ,OACRe,UAAW,GACXC,YAAa,GACbC,SAAU,UAEZC,aAAc,CACZC,UAAW,WAEbC,OAAQ,CACNC,gBAAiB,WAEnBC,OAAQ,CACNC,OAAQ,YAEVhK,QAAS,CACPwJ,UAAW,IAEb/H,MAAO,CACLwI,aAAc,IAEhBC,QAAS,CACPvC,MLtCyB,WKwC3BwC,QAAS,CACPxC,MLxCyB,WK0C3BqB,OAAQ,CACNoB,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChB1B,QAAS,EACTqB,aAAc,GAEhBM,eAAgB,CACdf,UAAW,IArCH,sBAuCH,CACLgB,YAAa,IAxCL,4BA0CG,CACXC,aAAc,IA3CN,GA+CNC,G,2MAWJC,OAAS,WACP,IAAIxC,EAAe,EAAKD,MAAM0C,aAAa,EAAK1C,MAAMiC,SACtD,GAAIhC,EAAc,EAChB,SAAkB0C,EAAMC,GACtB,IAAI1J,EAAI2J,SAASC,cAAc,KAC/B5J,EAAE6J,aACA,OACA,iCAAmCC,mBAAmBL,IAExDzJ,EAAE6J,aAAa,WAAYH,GAC3B1J,EAAE+J,QAEJC,CAASC,KAAKC,UAAUnD,GAAe,uB,qFAtBrBoD,EAAWC,GAC/B,OACED,EAAUrB,UAAYjC,KAAKC,MAAMgC,SACjCqB,EAAUpB,UAAYlC,KAAKC,MAAMiC,U,+BAuB3B,IAAD,OACHsB,EAAUxD,KAAKC,MAAMuD,QAErBtD,EAAeF,KAAKC,MAAM0C,aAAa3C,KAAKC,MAAMiC,SAClD7B,EAAeL,KAAKC,MAAM0C,aAAa3C,KAAKC,MAAMgC,SAElDwB,EAAa,GACbvD,IACFuD,EAAavD,EAAa1G,MACA,WAAtB0G,EAAazG,OACfgK,EAAavD,EAAa1G,MAAMhC,MAAM,EAAG,KAI7C,IAAIkM,EAAW,GACXrD,IACFqD,EAAWrD,EAAa7G,MACE,WAAtB6G,EAAa5G,OACfiK,EAAWrD,EAAa7G,MAAMhC,MAAM,EAAG,KAG3C,IAEIgC,EAFU,YAAO,IAAIuC,IAAI2H,EAASxC,OAAOuC,KAEtBzH,IAAI,SAACK,EAAMrE,GAChC,IAAI2L,EAAc,kBAAC,IAAD,MACdC,EAAc,kBAAC,IAAD,MAgBlB,OAf4B,IAAxB,EAAK3D,MAAMiC,SAAkBhC,EAAa1G,MAAMnC,SAASgF,KAC3DuH,EACE,kBAAC,IAAD,CAAWC,MAAO,SACf3D,EAAajJ,KAAKiJ,EAAa1G,MAAMmC,QAAQU,OAIxB,IAAxB,EAAK4D,MAAMgC,SAAkB5B,EAAa7G,MAAMnC,SAASgF,KAC3DsH,EACE,kBAAC,IAAD,CAAWE,MAAO,QAASC,UAAWN,EAAQG,aAC3CtD,EAAapJ,KAAKoJ,EAAa7G,MAAMmC,QAAQU,MAMlD,oCACE,kBAAC,IAAD,CAAUrF,IAAKgB,GACb,kBAAC,IAAD,CAAW8L,UAAWN,EAAQnH,MAAOA,GACpCuH,EACAD,MAMT,OACE,kBAAC,IAAD,CAAMG,UAAWN,EAAQlC,MACvB,kBAAC,IAAD,KACE,yBAAKwC,UAAWN,EAAQzC,QACtB,wBAAI+C,UAAWN,EAAQlB,gBAAvB,iBACA,kBAAC,IAAD,CACEwB,UAAWN,EAAQO,aACnBC,QAAQ,YACRtE,MAAM,YACNuE,QAASjE,KAAK0C,QAJhB,WASF,kBAAC,KAAD,MACA,kBAAC,GAAD,CACErC,aAAcA,EACdH,aAAcA,EACdiB,gBAAiBnB,KAAKC,MAAMkB,kBAE9B,kBAAC,GAAD,CACEd,aAAcA,EACdH,aAAcA,IAEhB,kBAAC,IAAD,CAAO4D,UAAWN,EAAQhK,OACxB,kBAAC,IAAD,CAAOsK,UAAWN,EAAQU,MAAOvD,QAAQ,OAAOhG,KAAK,SACnD,kCACE,yBAAKwJ,MAAO,CAAEvF,MAAO,SACrB,yBAAKuF,MAAO,CAAEvF,MAAO,SACrB,yBAAKuF,MAAO,CAAEvF,MAAO,UAEvB,kBAAC,IAAD,CAAWkF,UAAWN,EAAQY,aAC5B,kBAAC,IAAD,CAAUpN,IAAK,GACb,kBAAC,IAAD,CAAW8M,UAAWN,EAAQnH,MAA9B,WACA,kBAAC,IAAD,CAAWwH,MAAM,SACf,0BAAMC,UAAWN,EAAQtB,SAAzB,WAEF,kBAAC,IAAD,CAAW2B,MAAM,QAAQC,UAAWN,EAAQG,aAC1C,0BAAMG,UAAWN,EAAQvB,SAAzB,aAGJ,kBAAC,IAAD,CAAUjL,IAAK,GACb,kBAAC,IAAD,aACA,kBAAC,IAAD,CAAW6M,MAAM,SACd3D,GAAgBA,EAAanI,QAAQ4C,MAExC,kBAAC,IAAD,CAAWkJ,MAAM,SACdxD,GAAgBA,EAAatI,QAAQ4C,QAI5C,kBAAC,IAAD,KAAYnB,W,GAlIC+G,aA2IZ8D,wBAAWhD,GAAXgD,CAAmB5B,I,8KCrM5B6B,I,OAAW,KACXC,GAAY,IAoMHC,G,YAjMb,WAAYvE,GAAQ,IAAD,uBACjB,4CAAMA,KAgDRwE,OAAS,WACP,GAAwB,WAApB,EAAKxE,MAAMxG,KACb,EAAKiL,kBACH,EAAKzE,MAAM0E,YACX,EAAK1E,MAAM2E,SACX,EAAK3E,MAAM4E,UACX,EAAK5E,MAAM6E,UAER,CACL,IAAIC,EACkB,UAApB,EAAK9E,MAAMxG,KAAmB,EAAKwG,MAAMiC,QAAU,EAAKjC,MAAMgC,QAEhE,EAAK+C,iBACH,EAAK/E,MAAM0C,aACXoC,EACA,EAAK9E,MAAMxG,KACX,EAAKwG,MAAM2E,SACX,EAAK3E,MAAM4E,UACX,EAAK5E,MAAM6E,QAnEE,EAwEnBJ,kBAAoB,SAACC,EAAatI,EAAMwI,EAAWC,GACjD,IAAIpI,EAAMiI,EAAYE,GAEtB,EAAKI,QAAQvI,EAAKmI,EAAW,SAAUC,IA3EtB,EAkFnBE,iBAAmB,SACjBrC,EACAoC,EACAtL,EACA4C,EACAwI,EACAC,GAKA,GAFAI,IAAU,iBAAmBzL,EAAO,IAAMoL,GAAWM,SAEjDJ,GAAc,EAAG,CACnB,IAAI9M,EAAQ0K,EAAaoC,GAGzB,GAAmB,QAAf9M,EAAMwB,KAAgB,CACxB,IAAI2L,EAAgBnN,EAAMyB,QAAQmL,GAClC,EAAKI,QAAQG,EAAeP,EAAW,OAASpL,EAAMqL,MAnGzC,EA8GnBG,QAAU,SAACI,EAAUR,EAAWS,EAAUR,GACxC,IAAMS,EAAO,EAAKA,KAEdC,EAAMN,IACAK,GACPE,OAAO,OACP5J,KAAK,sBAAuB,iBAC5BA,KAAK,UAAW,eAChBA,KAAK,QAAS,YACdA,KAAK,KAAM,YAAcyJ,EAAW,IAAMT,GAC1CY,OAAO,KACP5J,KACC,YACA,aACE,EAAK6J,MAAM3D,OAAO4D,KAClB,IACA,EAAKD,MAAM3D,OAAO6D,IAClB,KAIFrG,EAAI2F,MAELW,WAAW,CAAC,EAAG,KAAM,IACrBjG,OACCyF,EAASrJ,IAAI,SAAA8J,GACX,OAAOA,EAAE,MAIX7G,EAAIiG,MAELrF,MAAM,CAAC,EAAK6F,MAAMlF,OAAQ,IAC1BZ,OAAO,CAAC,EAAGkF,IAEViB,EAAO,EAAKL,MAAMlF,OAElBwF,EAAMC,eACPpK,KAAK,QAAS,UACdiF,OAAO,EAAE,GAAI,IACboF,KAAK,SAASJ,GACb,OACEA,EAAE,GACF,wBACA3I,EACA,KACA2I,EAAE,GACF,YAINN,EAAIW,KAAKH,GAETR,EACGY,UAAU,QACVhQ,KAAKiP,GACLgB,QACAZ,OAAO,QACP5J,KAAK,IAAK,SAAAiK,GACT,OAAOvG,EAAEuG,EAAE,MAEZjK,KAAK,IAAK,SAAAiK,GACT,OAAO7G,EAAE6G,EAAE,MAEZjK,KAAK,QAAS,SAASiK,GACtB,OAAOvG,EAAE+G,cAEVzK,KAAK,SAAU,SAASiK,GACvB,OAAOC,EAAO9G,EAAE6G,EAAE,MAEnBjK,KAAK,KAAM,SAASiK,EAAG9N,GACtB,MAAO,QAAU6M,EAAY,IAAM7M,IAEpC6D,KAAK,QAAS,iBAAmByJ,GACjCiB,GAAG,YAAaP,EAAIQ,MACpBD,GAAG,WAAYP,EAAIS,OAtLtB,IAAI1E,EAAS,CACT6D,IAAK,GACLc,MAAO,GACPC,OAAQ,EACRhB,KAAM,IAER/G,EAAQ0F,GAAWvC,EAAO4D,KAAO5D,EAAO2E,MACxClG,EAAS+D,GAAYxC,EAAO6D,IAAM7D,EAAO4E,OAV1B,OAYjB,EAAKjB,MAAQ,CACX3D,SACAnD,QACA4B,UAfe,E,mFAmBG8C,EAAWC,GAC/B,MACsB,WAApBvD,KAAKC,MAAMxG,MACuB,IAAlCuG,KAAKC,MAAM0E,YAAYrN,QACU,IAAjCgM,EAAUqB,YAAYrN,SAIF,UAApB0I,KAAKC,MAAMxG,MACXuG,KAAKC,MAAMiC,UAAYoB,EAAUpB,SAIb,UAApBlC,KAAKC,MAAMxG,MACXuG,KAAKC,MAAMgC,UAAYqB,EAAUrB,W,0CASnCjC,KAAKyE,W,2CAILzE,KAAKyE,W,+BA8IG,IAAD,OACP,OAAO,yBAAKmC,IAAK,SAAArB,GAAI,OAAK,EAAKA,KAAOA,S,GA9LlBhF,a,SCalBc,GAAM,aACVwF,KAAM,GACNC,OAAQ,CACNlI,MAAO,MACPmI,WAAY,EACZxF,UAAW,GACXyF,SAAU,KAEZC,QAAS,CACPlF,OAAQ,IAEVmF,OAAQ,CACNnF,OAAQ,YAEVoF,SAAU,CACRC,cAAe,OACf5G,OAAQ,IACR6G,WAAY,YAEdC,SAAU,CACR9G,OAAQ,IAEV+G,MAAO,CACL3B,IAAK,OAEP4B,QAAS,CACPjG,UAAW,GAEbkG,SAAU,CACRC,cAAe,aACfC,SAAU,OACVjI,MPrDyB,UOsDzBkI,WAAY,IACZ7F,OAAQ,IAjCA,OAmCJ,CACJrC,MP1DyB,UO2DzBmI,OAAQ,YAINC,G,YACJ,WAAY7H,GAAQ,IAAD,uBACjB,4CAAMA,KAsCR8H,aAAe,SAACC,EAAUC,GACxB,GACED,EAASE,OAAOvN,OAASsN,EAASC,OAAOvN,MACzCqN,EAASG,QAAQxN,OAASsN,EAASE,QAAQxN,KAE3C,OAAO,EAGT,IAAI+C,GAAM,EAOV,OANA9G,OAAOC,KAAKmR,EAASI,YAAYtR,QAAQ,SAAAwE,GACnC2M,EAASG,WAAW9M,GAAGX,OAASqN,EAASI,WAAW9M,GAAGX,OACzD+C,GAAM,KAIHA,GAtDU,EAyDnB2K,aAAe,SAAA/K,GAAK,OAAI,WAAO,IACrB6K,EAAY,EAAKzC,MAAjByC,QAEJG,EAAa,IAAIvM,IAAIoM,GAErBG,EAAWC,IAAIjL,GACjBgL,EAAWE,OAAOlL,GAElBgL,EAAWG,IAAInL,GAGjB,EAAKoL,SAAS,CACZP,QAASG,MArEM,EAyEnBK,gBAAkB,SAACC,EAAQC,GAAT,OAAoB,WAAO,IAAD,EACV,EAAKnD,MAA7B0C,EADkC,EAClCA,WAAYD,EADsB,EACtBA,QAEhBW,EAAS,GACblS,OAAOC,KAAKuR,GAAYtR,QAAQ,SAAAwE,GAC9BwN,EAAOxN,GAAK,IAAIS,IAAIqM,EAAW9M,MAGjC,IAAIvB,EAAI,IAAIgC,IAAIoM,GAEZW,EAAOF,GAAQL,IAAIM,GACrBC,EAAOF,GAAQJ,OAAOK,GAEtBC,EAAOF,GAAQH,IAAII,GAGrB9O,EAAEyO,OAAOI,GAET,EAAKF,SAAS,CACZN,WAAYU,EACZX,QAASpO,MA7FM,EAiGnBgP,YAAc,SAAAH,GAAM,OAAI,WAAO,IACrBV,EAAW,EAAKxC,MAAhBwC,OAEJc,EAAY,IAAIjN,IAAImM,GAEpBc,EAAUT,IAAIK,GAChBI,EAAUR,OAAOI,GAEjBI,EAAUP,IAAIG,GAEhB,EAAKF,SAAS,CACZR,OAAQc,MA5GO,EAgHnBC,YAAc,SAACjR,EAAGkR,GAChB,IAAIC,EAAW,SAAWnR,EAAI,IAAMkR,EAEpChE,IAAUiE,GACPhF,MAAM,OAAQjH,GACdiH,MAAM,UAAW,IArHH,EAwHnBiF,cAAgB,SAACpR,EAAGkR,GAClB,IAAIC,EAAW,SAAWnR,EAAI,IAAMkR,EAEpChE,IAAUiE,GACPhF,MAAM,OAAQhH,GACdgH,MAAM,UAAW,KA7HH,EAgInBkF,oBAAsB,WACpB,IAAIhT,EAAS,GACTI,EAAM,GAEV,EAAKwJ,MAAMxE,SAAS3E,QAAQ,SAACK,EAAWyR,GAEtC,GACE,EAAKlD,MAAMyC,QAAQI,IAAIK,IACvB,EAAKlD,MAAM0C,WAAWQ,GAAQjO,KAAO,EACrC,CACA,IAAI2O,EAAU,GAEd,EAAK5D,MAAM0C,WAAWQ,GAAQ9R,QAAQ,SAAAyS,GACpCD,EAAQ/R,KAAK,EAAK0I,MAAMK,OAAOsI,GAAQW,MAGzClT,EAAOc,GAAamS,EAItB7S,EAAImS,GAAU,IAAI7M,MAGpB,EAAKkE,MAAM9J,gBAAgBE,GAE3B,EAAKqS,SAAS,CAAEP,QAAS,IAAIpM,IAAOqM,WAAY3R,KAtJhD,IAAIA,EAAM,GACN+S,EAAS,GAJI,OAMjBvJ,EAAMxE,SAAS3E,QAAQ,SAACK,EAAWyR,GACjCnS,EAAImS,GAAU,IAAI7M,IAClB,IAAI+I,EAAOI,IAAOjF,EAAM0E,YAAYiE,GAAS,SAAA9C,GAC3C,OAAOA,EAAE,KAEX0D,EAAOjS,KAAKuN,KAGd,EAAKY,MAAQ,CACXyC,QAAS,IAAIpM,IACbmM,OAAQ,IAAInM,IACZqM,WAAY3R,EACZgF,SAAUwE,EAAMxE,SAChB+N,OAAQA,GAnBO,E,mFAuBGlG,EAAWC,GAC/B,SACkC,IAA/BvD,KAAKC,MAAMxE,SAASnE,QAAgBgM,EAAU7H,SAASnE,OAAS,GACjE0I,KAAKC,MAAMiC,UAAYoB,EAAUpB,SACjClC,KAAKC,MAAMgC,UAAYqB,EAAUrB,SACjCjC,KAAK+H,aAAa/H,KAAK0F,MAAOnC,M,+BAgIxB,IAAD,OACDC,EAAUxD,KAAKC,MAAMuD,QACrB7K,EAAW,IAAIC,KAAKC,cAASlB,EAAW,CAC5CmB,SAAS,EACTC,YAAa,SAGf,OAAIiH,KAAKC,MAAMxE,SAASnE,OAAS,EAE7B,kBAAC,KAAD,CACEwM,UAAWN,EAAQsD,OACnBtD,QAAS,CAAEiG,MAAOjG,EAAQsD,QAC1B9C,QAAQ,YACR0F,OAAO,QAEP,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAU1S,KAAM,GACd,kBAAC,KAAD,CACEoI,MAAM,gDACNuK,UAAU,UAEV,kBAAC,IAAD,CACE3F,QAAQ,YACRtE,MAAM,YACNoE,UAAWN,EAAQ0D,OACnBjD,QAASjE,KAAKqJ,qBAJhB,uBASF,kBAAC,KAAD,CAAcvF,UAAWN,EAAQqD,KAAM5C,QAAS,kBAAM2F,MAAM,aAE9D,kBAAC,KAAD,MAEC5J,KAAKC,MAAMxE,SAASO,IAAI,SAAC7E,EAAWyR,GAAZ,OACvB,oCACE,kBAAC,KAAD,CACE5R,IAAG,kBAAa4R,GAChB9E,UAAWN,EAAQ2D,SACnBlD,QAAS,EAAK8E,YAAYH,IAE1B,uBAAG9E,UAAWN,EAAQiE,UAAWtQ,GAEjC,kBAAC,GAAD,CACEyN,SAAUzN,EACVwN,YAAa,EAAK1E,MAAM0E,YACxBE,UAAW+D,EACXnP,KAAM,SACNqL,KAAM,EAAKY,MAAM8D,OAAOZ,KAa1B,kBAAC,GAAD,CACEhE,SAAUzN,EACV0N,UAAW+D,EACX1G,QAAS,EAAKjC,MAAMiC,QACpBD,QAAS,EAAKhC,MAAMgC,QACpBU,aAAc,EAAK1C,MAAM0C,aACzBlJ,KAAM,QACNqL,KAAM,EAAKY,MAAM8D,OAAOZ,KAG1B,kBAAC,KAAD,CAAyB9E,UAAWN,EAAQ+D,OAC1C,kBAAC,KAAD,CACEsC,SAAU,EAAKxB,aAAaO,GAC5BT,QAAS,EAAKzC,MAAMyC,QAAQI,IAAIK,GAChCkB,SAAU,EAAKpE,MAAM0C,WAAWQ,GAAQjO,KAAO,MAKrD,kBAAC,KAAD,CACEoP,GAAI,EAAKrE,MAAMwC,OAAOK,IAAIK,GAC1BoB,QAAQ,OACRC,eAAa,GAEZ,EAAKhK,MAAMK,OAAOsI,GAChB1P,KAAKP,EAASU,SACd2C,IAAI,SAACsB,EAAO4M,GAAR,OACH,kBAAC,KAAD,CACElT,IAAG,eAAU4R,EAAV,YAAoBsB,GACvBhD,QAAM,EACNiD,YAAa,SAAA1M,GAAC,OAAI,EAAKwL,YAAYL,EAAQsB,EAASzM,IACpD2M,WAAY,SAAA3M,GAAC,OAAI,EAAK2L,cAAcR,EAAQsB,EAASzM,KAErD,kBAAC,KAAD,CAAc4M,QAAS/M,IAEvB,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEuM,SAAU,EAAKlB,gBAAgBC,EAAQsB,GACvC/B,QAAS,EAAKzC,MAAM0C,WAAWQ,GAAQL,IAAI2B,UAMvD,kBAAC,KAAD,CAASpG,UAAWN,EAAQgE,eAQjC,yBAAK1D,UAAWN,EAAQsD,QAAxB,kB,GA9QiBvG,aAkRb8D,wBAAWhD,GAAXgD,CAAmByD,IC7U5BhN,GAAO,CACX2D,QAAS,kDACT+B,OAAQ,GACR5B,MAAO,GACPxI,KAAM,CACJ+J,KAAM,UAERtB,UAAW,CACT,CACEC,UAAW,mBACXC,GAAI,YAGRL,KAAM,CAACjF,KAAM,MAAOkF,SAAS,GAC7BK,SAAU,CACRC,EAAG,CACDC,MAAO,QACPzF,KAAM,UACN0F,KAAM,CAAEC,MAAO,IACflG,KAAM,CAAE8F,SAAU,IAAKsL,MAAO,eAEhC/K,EAAG,CACDL,MAAO,UACPzF,KAAM,eACN0F,KAAM,CAAEC,MAAO,GAAIK,OAAQ,MAE7BC,MAAO,CACLR,MAAO,UACPzF,KAAM,UACNkG,MAAO,CACLC,OAAQ,CAAC,EAAG,GACZC,MAAO,CRnCc,UQmCE,YAEzBC,OAAQ,QAuCCyK,G,iLAjCH,IAAD,OACHrO,EAAU8D,KAAKC,MAAM/D,QACrB+K,EAAUjH,KAAKC,MAAMgH,QAErBvN,EAAUwC,EAAQxC,QAAQuN,GAC1B7Q,EAAO4J,KAAKC,MAAMK,OAAON,KAAKC,MAAMxE,SAASE,QAAQsL,IAAUjL,IACjE,SAACoE,EAAKpI,GACJ,OAAI0B,EAAQ0G,GACH,CACL9C,MAAO8C,EACPoK,OAAuB,IAAf9Q,EAAQ0G,GAChBiK,QAASjK,IAAQ,EAAKH,MAAMwK,OAAS,EAAI,GAGpC,CACLnN,MAAO8C,EACPoK,OAAQ,EACRH,QAAS,KAMjB,OACE,kBAAC,IAAD,CACEjU,KAAM,CAAEkK,OAAQlK,GAChB0E,KAAMA,GACNqJ,MAAO,CAAE5B,YAAa,S,GA5BIhC,a,sGCzC3B,SAASmK,GAAaC,EAAUhI,GACrC,IAAIiI,EAAgB,GAmBpB,OAlBAjI,EAAa7L,QAAQ,SAAAmB,GACnB,IAAI4S,EAAO5S,EAAMuB,MAAMlC,OACnBwT,GAAe,EACnBH,EAASnR,MAAM1C,QAAQ,SAACuF,EAAM0O,GAC5B,IAAI/S,EAAIC,EAAMuB,MAAMmC,QAAQU,GACxBrE,GAAK,IACHC,EAAMhB,KAAKe,KAAO2S,EAAS1T,KAAK8T,GAClCF,IAEAC,EAAcC,KAIP,IAATF,IACF5S,EAAK,SAAe6S,EACpBF,EAAcrT,KAAKU,MAGhB2S,E,cC2EHI,I,mBACJ,WAAY/K,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRgL,WAAa,SAAA/O,GACX,EAAK+D,MAAMiL,eAAehP,IAlBT,EAqBnBiP,WAAa,SAAAjP,GACX,EAAK+D,MAAMmL,iBAAiBlP,IAtBX,EAyBnBmP,WAAa,SAAAnP,GACX,EAAK+D,MAAMqL,eAAepP,IA1BT,EA6BnBqP,UAAY,WACY,EAAlB,EAAK7F,MAAM8F,KAAW,EAAI,EAAKvL,MAAMwL,SAASnU,QAChD,EAAKoR,SAAS,CACZ8C,KAAM,EAAK9F,MAAM8F,KAAO,KAhCX,EAqCnBE,SAAW,WACe,IAApB,EAAKhG,MAAM8F,MACb,EAAK9C,SAAS,CACZ8C,KAAM,EAAK9F,MAAM8F,KAAO,KAxCX,EA6CnBG,WAAa,SAAAvL,GACc,IAArBA,EAAIwL,OAAOtO,MACb,EAAKoL,SAAS,CACZmD,aAAa,KAGa,IAAxB,EAAK5L,MAAMiC,QACb,EAAKwG,SAAS,CACZoD,UAAWpB,GACT,EAAKzK,MAAM0C,aAAa,EAAK1C,MAAMiC,SACnC,EAAKjC,MAAM0C,aAAanL,SAE1BqU,aAAa,IAGf,EAAKnD,SAAS,CACZmD,aAAa,KA7DF,EAmEnBE,WAAa,SAAA3L,GACX,EAAKsI,SAAS,CACZxP,KAAMkH,EAAIwL,OAAOtO,SAlEnB,EAAKoI,MAAQ,CACX8F,KAAM,EACNK,aAAa,EACbC,UAAW,GACX5S,KAAM,OAPS,E,mFAUGoK,GACpB,QAAIA,EAAU0I,iB,+BA8DN,IAAD,OACHxI,EAAUxD,KAAKC,MAAMuD,QAEzB,GAAIxD,KAAK0F,MAAMmG,aAA+C,IAAhC7L,KAAK0F,MAAMoG,UAAUxU,SAAwC,IAAxB0I,KAAKC,MAAMiC,QAAgB,CAC5F,IAAIhC,EAAeF,KAAKC,MAAM0C,aAAa3C,KAAKC,MAAMiC,SAClD+J,EAAgBjM,KAAK0F,MAAMoG,UAC5B5S,KAAK,SAACC,EAAGC,GACR,OAAOD,EAAEpB,QAAQ,EAAK2N,MAAMxM,MAAQE,EAAErB,QAAQ,EAAK2N,MAAMxM,QAE1D8C,IAAI,SAACkQ,EAAOC,GACX,OACE,kBAAC,IAAD,CACErI,UAAW,eACX9M,IAAKmV,EACLC,aAAc,SAAA5P,GAAC,OAAI,EAAKyO,WAAWiB,IACnCG,aAAc,SAAA7P,GAAC,OAAI,EAAK2O,WAAWe,IACnCjI,QAAS,SAAAzH,GAAC,OAAI,EAAK6O,WAAWa,KAE9B,kBAAC,IAAD,CAAapI,UAAWN,EAAQ8I,aAC9B,kBAAC,IAAD,CAAOxI,UAAWN,EAAQU,MAAOvD,QAAQ,SACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,qCAA6B,EAAlB,EAAK+E,MAAM8F,KAAWW,EAAQ,EAAzC,KACA,6BACgB,QAAfD,EAAMzS,KAAiB,YAAc,aAExC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAWoK,MAAM,SACdqI,EAAMnU,QAAQ4C,KADjB,iBAMN,kBAAC,IAAD,CAAOmJ,UAAWN,EAAQ+I,UAAW5L,QAAQ,SAC3C,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,2BACA,kBAAC,IAAD,CAAWwD,MAAO,CAAEzE,MV5Mb,WU4MqCmE,MAAM,SAAlD,UAGA,kBAAC,IAAD,CAAWM,MAAO,CAAEzE,MAAO,WAAamE,MAAM,SAA9C,aAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAY3D,EAAa1G,MAAM0S,EAAMM,WACrC,kBAAC,IAAD,CAAW3I,MAAM,SACd3D,EAAajJ,KAAKiV,EAAMM,WAE3B,kBAAC,IAAD,CAAW3I,MAAM,SAEbqI,EAAMjV,KACJiV,EAAM1S,MAAMmC,QACVuE,EAAa1G,MAAM0S,EAAMM,mBAY/C,OACE,kBAAC,IAAD,CAAO1I,UAAWN,EAAQiG,OACxB,yBAAK3F,UAAWN,EAAQzC,QACtB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAQzD,MAAO,EAAGuM,SAAU7J,KAAK2L,YAC/B,kBAAC,KAAD,CAAUrO,MAAO,GAAjB,uBACA,kBAAC,KAAD,CAAUA,MAAO,GAAjB,uBAGJ,yBAAKwG,UAAWN,EAAQiJ,UACtB,kBAAC,IAAD,CAAYzI,QAAQ,QAAQF,UAAWN,EAAQkJ,UAA/C,YAGA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAQpP,MAAO0C,KAAK0F,MAAMxM,KAAM2Q,SAAU7J,KAAK+L,YAC5C3O,EAAQpB,IAAI,SAAApC,GAAC,OACZ,kBAAC,KAAD,CAAU0D,MAAO1D,EAAE0D,OAAQ1D,EAAEyD,aAMvC,kBAAC,KAAD,CAASyG,UAAWN,EAAQmJ,gBAC5B,yBAAK7I,UAAWN,EAAQyI,eAAgBA,IAK5C,IAOIW,EAPiB5M,KAAKC,MAAMwL,SAC7BoB,OAAO,SAAAC,GAAK,OAAIA,EAAM/U,QAAQ4C,KAAO,EAAKsF,MAAM8M,UAChD7T,KAAK,SAACC,EAAGC,GACR,OAAOD,EAAEpB,QAAQ,EAAK2N,MAAMxM,MAAQE,EAAErB,QAAQ,EAAK2N,MAAMxM,QAE1D1B,MAAwB,EAAlBwI,KAAK0F,MAAM8F,KAA4B,EAAlBxL,KAAK0F,MAAM8F,KAAW,GAEzBxP,IAAI,SAAC8Q,EAAOX,GAAR,OAC7B,kBAAC,IAAD,CACErI,UAAW,iBACX9M,IAAKmV,EACLC,aAAc,SAAA5P,GAAC,OAAI,EAAKyO,WAAW6B,IACnCT,aAAc,SAAA7P,GAAC,OAAI,EAAK2O,WAAW2B,IACnC7I,QAAS,SAAAzH,GAAC,OAAI,EAAK6O,WAAWyB,KAE9B,kBAAC,IAAD,CAAahJ,UAAWN,EAAQ8I,aAC9B,kBAAC,IAAD,CAAOxI,UAAWN,EAAQU,MAAOvD,QAAQ,QACvC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWA,QAAQ,OAAOmD,UAAWN,EAAQwJ,UAC3C,oCAA4B,EAAlB,EAAKtH,MAAM8F,KAAWW,EAAQ,IAE1C,kBAAC,IAAD,CAAWvN,MAAO,GAAI+B,QAAQ,QAAQkD,MAAM,SACzCiJ,EAAM/U,QAAQ4C,KADjB,eAIDmS,EAAMtT,MAAMwC,IAAI,SAACK,EAAMrE,GAAP,OACf,kBAAC,IAAD,CAAUhB,IAAKgB,GACb,kBAAC,IAAD,CAAW2I,QAAQ,OAAOmD,UAAWN,EAAQwJ,UAC3C,uBAAGlJ,UAAWN,EAAQnG,OAAQhB,GAC9B,6BACA,0BAAMyH,UAAWN,EAAQlG,OAAQwP,EAAM7V,KAAKe,KAE9C,kBAAC,IAAD,CACE2I,QAAQ,OACRmD,UAAWN,EAAQyJ,KACnBpJ,MAAM,SAEN,kBAAC,GAAD,CACE4G,OAAQqC,EAAM7V,KAAKe,GACnByD,SAAU,EAAKwE,MAAMxE,SACrB6E,OAAQ,EAAKL,MAAMK,OACnBpE,QAAS4Q,EACT7F,QAAS5K,cAW3B,OACE,kBAAC,IAAD,CAAOyH,UAAWN,EAAQiG,OACxB,yBAAK3F,UAAWN,EAAQzC,QACtB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAQzD,MAAO,EAAGuM,SAAU7J,KAAK2L,YAC/B,kBAAC,KAAD,CAAUrO,MAAO,GAAjB,uBACA,kBAAC,KAAD,CAAUA,MAAO,GAAjB,uBAGJ,yBAAKwG,UAAWN,EAAQiJ,UACtB,kBAAC,IAAD,CAAYzI,QAAQ,QAAQF,UAAWN,EAAQkJ,UAA/C,YAGA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAQpP,MAAO0C,KAAK0F,MAAMxM,KAAM2Q,SAAU7J,KAAK+L,YAC5C3O,EAAQpB,IAAI,SAAApC,GAAC,OACZ,kBAAC,KAAD,CAAU0D,MAAO1D,EAAE0D,OAAQ1D,EAAEyD,WAInC,yBAAKyG,UAAWN,EAAQ0J,QACtB,kBAAC,KAAD,CAAajJ,QAASjE,KAAK0L,WAC3B,kBAAC,IAAD,CAAY1H,QAAQ,SACC,EAAlBhE,KAAK0F,MAAM8F,KAAW,EADzB,KAC8B,IACT,EAAlBxL,KAAK0F,MAAM8F,KAAW,EAAIxL,KAAKC,MAAMwL,SAASnU,OAC3C0I,KAAKC,MAAMwL,SAASnU,OACF,EAAlB0I,KAAK0F,MAAM8F,KAAW,GAE5B,kBAAC,KAAD,CAAcvH,QAASjE,KAAKuL,eAIlC,kBAAC,KAAD,CAASzH,UAAWN,EAAQmJ,gBAC5B,yBAAK7I,UAAWN,EAAQoJ,OAAQA,Q,GAhQXrM,cAuQhB8D,wBAjVA,CACboF,MAAO,CACLjJ,OAAQ,IACRiB,SAAU,SACV0L,WAAY,GACZ3L,YAAa,GACbD,UAAW,IAEbxJ,QAAS,CACPoK,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChB1B,QAAS,GAEXI,OAAQ,CACNoB,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChB1B,QAAS,GAEXiM,MAAO,CACLzK,QAAS,OACTC,cAAe,SACfC,eAAgB,UAElBiK,YAAa,CACX3L,QAAS,GAEX6G,QAAS,CACPjG,UAAW,GACXS,aAAc,IAEhB2K,cAAe,CACb3K,aAAc,GAEhBkC,MAAO,CACLtF,MAAO,QAETwO,IAAK,CACHC,MAAO,SAETH,OAAQ,CACNG,MAAO,QACPlL,QAAS,cACTZ,UAAW,EACXc,eAAgB,UAElBhF,MAAO,CACLqK,cAAe,cAEjBpK,MAAO,CACLoC,MAAO,WAETuM,cAAe,CACb9J,QAAS,cACTmL,SAAU,OACVjL,eAAgB,UAElBoK,SAAU,CACRtK,QAAS,eAEXuK,SAAU,CACRlL,YAAa,GACbD,UAAW,GAEbgL,UAAW,CACThL,UAAW,IAEbyL,SAAU,CACRzK,YAAa,OACbyE,SAAU,KA2QC3C,CAAmB2G,I,sqBC9RlC,SAASuC,GAAT,GAAiD,IAAvBC,EAAsB,EAAtBA,SAAavN,EAAS,6BAC9C,OAAO,uCAAK2G,IAAK4G,GAAcvN,IAmFjC,IAAMwN,GAAa,CACjBC,QAjFF,SAAiBzN,GACf,OACE,kBAAC,KAAD,eACE0N,WAAS,EACTC,WAAY,CACVL,kBACAM,WAAW,GAAD,CACR/J,UAAW7D,EAAM6N,YAAYtK,QAAQuK,MACrCP,SAAUvN,EAAM+N,SAChBC,SAAUhO,EAAMgO,UACbhO,EAAMiO,cAGTjO,EAAM6N,YAAYK,kBAqE1BC,KAdF,SAAcnO,GACZ,OACE,kBAAC,IAAD,eACEoO,QAAM,EACNvK,UAAW7D,EAAM6N,YAAYtK,QAAQiG,OACjCxJ,EAAMiO,YAETjO,EAAMgO,WAQXK,WA7BF,SAAoBrO,GAClB,OACE,kBAAC,KAAD,CACEsO,UAAW,EACXlR,MAAO4C,EAAMgO,SACbnK,UAAW0K,KAAWvO,EAAM6N,YAAYtK,QAAQiL,KAA3B,eAClBxO,EAAM6N,YAAYtK,QAAQkL,YAAczO,EAAM0O,YAEjDC,SAAU3O,EAAM4O,YAAY5K,QAC5B6K,WAAY,kBAAC,KAAe7O,EAAM4O,gBAqBtCE,iBApGF,SAA0B9O,GACxB,OACE,kBAAC,IAAD,eACEP,MAAM,gBACNoE,UAAW7D,EAAM6N,YAAYtK,QAAQwL,kBACjC/O,EAAMiO,YAETjO,EAAMgO,WA8FXgB,OAnEF,SAAgBhP,GACd,OACE,kBAAC,KAAD,eACEiP,UAAWjP,EAAM+N,SACjBmB,SAAUlP,EAAM0O,UAChBS,UAAU,MACVjL,MAAO,CACLyD,WAAY3H,EAAMoP,WAAa,IAAM,MAEnCpP,EAAMiO,YAETjO,EAAMgO,WAyDXqB,YApDF,SAAqBrP,GACnB,OACE,kBAAC,IAAD,eACEP,MAAM,gBACNoE,UAAW7D,EAAM6N,YAAYtK,QAAQ+L,aACjCtP,EAAMiO,YAETjO,EAAMgO,WA8CXuB,eAzCF,SAAwBvP,GACtB,OACE,yBAAK6D,UAAW7D,EAAM6N,YAAYtK,QAAQiM,gBACvCxP,EAAMgO,YAyCPyB,G,2MACJC,aAAe,SAAArP,GACb,EAAKL,MAAM2P,eAAetP,I,wEAK1B,IAAIuP,EAAkB7P,KAAKC,MAAMkB,gBAC7B2O,EAAQ9P,KAAKC,MAAM8P,YAEvB,OACE,yBAAKjM,UAAW9D,KAAKC,MAAMuD,QAAQwM,iBACjC,kBAAC,KAAD,CACExM,QAASxD,KAAKC,MAAMuD,QACpByM,QAASH,EACTrC,WAAYA,GACZ5D,SAAU7J,KAAK2P,aACfrS,MAAOuS,EACPN,YAAY,0BACZW,SAAO,S,GAnBY3P,aA0Bd8D,wBArLA,SAAA8L,GAAK,MAAK,CACvBH,gBAAiB,CACfI,SAAU,IACV1Q,MAAO,QACP8B,YAAa,GACbD,UAAW,IAEbwM,MAAO,CACL5L,QAAS,OACTxB,QAAS,GAEX8O,eAAgB,CACdtN,QAAS,OACTmL,SAAU,OACV+C,KAAM,EACNhJ,WAAY,SACZ5F,SAAU,UAEZgN,KAAM,CACJ1M,OAAO,GAAD,OAAKoO,EAAM1P,QAAQ6P,KAAO,EAA1B,cAAiCH,EAAM1P,QAAQ6P,KAAO,EAAtD,OAER5B,YAAa,CACX7M,gBAAiB0O,qBACQ,UAAvBJ,EAAMK,QAAQ/W,KACV0W,EAAMK,QAAQC,KAAK,KACnBN,EAAMK,QAAQC,KAAK,KACvB,MAGJzB,iBAAkB,CAChBrO,QAAQ,GAAD,OAAKwP,EAAM1P,QAAQ6P,KAAnB,cAAkD,EAArBH,EAAM1P,QAAQ6P,KAA3C,OAETf,YAAa,CACXmB,SAAU,WACV/K,KAAM,EACNgC,SAAU,IAEZ8B,MAAO,CACLiH,SAAU,WACVC,OAAQ,EACRpP,UAAW4O,EAAM1P,QAAQ6P,KACzB3K,KAAM,EACNe,MAAO,GAETc,QAAS,CACPhH,OAA6B,EAArB2P,EAAM1P,QAAQ6P,QAwIXjM,CAAmBqL,ICpL5BkB,I,mBACJ,WAAY3Q,GAAQ,IAAD,uBACjB,4CAAMA,KA2CR4Q,gBAAkB,WAChB,IAAMtL,EAAO,EAAKA,KAElBL,IAAUK,GACPa,UAAU,OACVjB,SAEH,EAAKlF,MAAMkB,gBAAgBrK,QAAQ,SAAA8C,GACvBsL,IACAK,GACPE,OAAO,OACP5J,KAAK,sBAAuB,iBAC5BA,KAAK,UAAW,gBAChBA,KAAK,KAAM,aAAejC,EAAE0D,OAC5BmI,OAAO,KACP5J,KACC,YACA,aACE,EAAK6J,MAAM3D,OAAO4D,KAClB,IACA,EAAKD,MAAM3D,OAAO6D,IAClB,KAIHH,OAAO,KACP5J,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB,EAAK6J,MAAMlF,OAAS,KACvD2F,KAAK,EAAKT,MAAMoL,OAChBrL,OAAO,QACP7C,KAAKhJ,EAAEyD,OACPxB,KAAK,QAAS,cACdA,KAAK,KAAM,IACXA,KAAK,KAAM,MAGhB,EAAK4I,UAhFY,EAmFnBA,OAAS,WACP,EAAKxE,MAAMkB,gBAAgBrK,QAAQ,SAAA8C,GACjC,IAAI4L,EAAMN,IAAU,EAAKK,MAAMwL,OAAO,cAAgBnX,EAAE0D,OAExDkI,EAAIY,UAAU,gBAAgBjB,SAE9BK,EACGY,UAAU,gBACVhQ,KAAK,EAAK6J,MAAM0C,aAAc,SAAAmD,GAAC,OAAIA,EAAEvM,KACrC8M,QACAZ,OAAO,QACPoH,OAAO,SAAA/G,GACN,OAAOA,EAAE/N,QAAQ4C,KAAO,EAAKsF,MAAM8M,UAEpClR,KAAK,KAAM,SAAAiK,GACV,OAAO,EAAKJ,MAAMsL,OAAOlL,EAAE/N,QAAQ6B,EAAE0D,QAAU,KAEhDzB,KAAK,KAAM,SAAAiK,GACV,OAAO,EAAKJ,MAAMsL,OAAOlL,EAAE/N,QAAQ6B,EAAE0D,QAAU,KAEhDzB,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,QAAS,eACdA,KAAK,KAAM,SAAAiK,GACV,MAAO,cAAgBA,EAAEvM,KAE1BgN,GAAG,YAAa,SAAAT,GACf,EAAK7F,MAAMgR,SAASnL,EAAEvM,MAEvBgN,GAAG,WAAY,SAAAT,GACd,EAAK7F,MAAMgR,UAAU,KAEtB1K,GAAG,QAAS,SAAAT,GACX,EAAK7F,MAAMiR,SAASpL,EAAEvM,aAGnB,EAAK0G,MAAMtC,KAAKhD,KAEvB,IAAIwW,EAAO3L,EACRY,UAAU,YACVhQ,KAAK,EAAK6J,MAAMtC,MAChB0I,QACAZ,OAAO,KAEV0L,EACG1L,OAAO,QACP5J,KAAK,KAAM,SAAAiK,GACV,OAAO,EAAKJ,MAAMsL,OAAOlL,EAAElM,EAAE0D,QAAU,KAExCzB,KAAK,KAAM,SAAAiK,GACV,OAAO,EAAKJ,MAAMsL,OAAOlL,EAAElM,EAAE0D,QAAU,KAExCzB,KAAK,KAAM,IACXA,KAAK,KAAM,IACXsI,MAAM,SAAU,WAChBA,MAAM,eAAgB,GACtBA,MAAM,UAAW,IAEpBgN,EACG1L,OAAO,QACP7C,KAAK,SAAAkD,GAAC,MAAI,QAAUA,EAAElM,EAAE0D,OAAO8T,QAAQ,GAAK,MAC5CvV,KAAK,cAAe,UACpBA,KAAK,IAAK,SAAAiK,GACT,OAAO,EAAKJ,MAAMsL,OAAOlL,EAAElM,EAAE0D,QAAU,KAExCzB,KAAK,IAAK,IACVA,KAAK,cAAe,cACpBA,KAAK,YAAa,QAClBA,KAAK,OAAQ,cApJlB,IAAIkG,EAAS,CACX6D,IAAK,EACLc,MAAO,GACPC,OAAQ,EACRhB,KAAM,IAKJqL,EAAS9L,MAEVrF,MAAM,CAAC,EALE,IAKSkC,EAAO2E,MAAQ3E,EAAO4D,OACxC/F,OAAO,CAAC,EAAG,MACVyR,EAASnM,MAEVrF,MAAM,CARI,GAQMkC,EAAO6D,IAAM7D,EAAO4E,OAAQ,IAC5C/G,OAAO,CAAC,EAAG,MAEVkR,EAAQ5L,MAETvF,MAAMqR,GACNM,YAAY,GACZC,MAAM,GACNC,WAAW,SAAS1L,GACnB,OAAW,EAAJA,EAAQ,MA3BF,OA8BjB,EAAKJ,MAAQ,CACX3D,OAAQA,EACRnD,MAvBU,IAuBKmD,EAAO4D,KAAO5D,EAAO2E,MACpClG,OAvBW,GAuBMuB,EAAO6D,IAAM7D,EAAO4E,OACrCqK,OAAQA,EACRK,OAAQA,EACRP,MAAOA,GApCQ,E,iFAyCjB9Q,KAAK6Q,oB,4CAkHevN,EAAW9G,GAC/B,OAAI8G,EAAUyJ,UAAY/M,KAAKC,MAAM8M,UAInCzJ,EAAUnC,gBAAgB7J,SAAW0I,KAAKC,MAAMkB,gBAAgB7J,QAI9DgM,EAAUX,aAAarL,SAAW0I,KAAKC,MAAM0C,aAAarL,U,yCAM7Cma,EAAWjV,GAE1BiV,EAAUtQ,gBAAgB7J,SAAW0I,KAAKC,MAAMkB,gBAAgB7J,QAEhE0I,KAAK6Q,oB,+BAIC,IAAD,OAEP,OADA7Q,KAAKyE,SAEH,yBACEX,UAAW9D,KAAKC,MAAMuD,QAAQkO,KAC9B9K,IAAK,SAAArB,GAAI,OAAK,EAAKA,KAAOA,S,GAxLVhF,cA8LT8D,wBAtMA,CACbqN,KAAM,CACJvP,QAAS,eACTiO,SAAU,IACVxR,MAAO,SAkMIyF,CAAmBuM,I,+DCxL5BvP,GAAS,CACbsQ,KAAM,CACJxP,QAAS,OACTC,cAAe,UAEjBwP,QAAS,CACPhT,MAAO,MACPuD,QAAS,OACTC,cAAe,SACfb,UAAW,GACX4L,WAAY,IAEd0E,SAAU,CACRC,SAAU,EACVpS,MAAOvC,EACPwE,UAAW,UAEboQ,QAAS,CACPD,SAAU,EACV3E,WAAY,GACZzN,MAAOvC,EACPwE,UAAW,QAEbqQ,cAAe,CACb5B,SAAU,OACV6B,UAAW,oBACX1Q,WAAY,GACZM,gBb9CyB,Ua+CzBE,OAAQ,YAEVmQ,YAAa,CACXC,WAAY,IACZzS,MAAO,QACPiC,UAAW,UAEbyQ,gBAAiB,CACfjQ,QAAS,QACTgL,WAAY,OACZ3L,YAAa,OACb9B,MAAO,SAET2S,SAAU,CACRzT,MAAO,QACPmD,OAAQ,WACRR,UAAW,IAEb+Q,WAAY,CACV/Q,UAAW,GACX7B,MAAO,QACPiC,UAAW,UAEbvC,MAAO,CACLwI,WAAY,KAEd2K,QAAS,CACP7S,MAAO,QACPiC,UAAW,UAEb6Q,SAAU,CACRC,oBAAqB,QACrB/S,MAAO,QACPgT,eAAgB,QAElBC,WAAY,CACVhS,QAAS,GACTiS,WbpFyB,UaqFzB7Q,OAAQ,GACRrC,MAAOvC,EACP0V,WAAY,SACZjL,WAAY,IACZD,SAAU,GACVmL,YAAa,QACbC,aAAc,EACd5Q,QAAS,OACTC,cAAe,MACfiF,WAAY,SACZQ,OAAQ,WAEVmL,OAAQ,CACN7Q,QAAS,OACTE,eAAgB,SAChBd,UAAW,IAEb0R,KAAM,CACJtL,SAAU,GACVnG,YAAa,KAIX0R,G,iLACM,IAAD,OACH1P,EAAUxD,KAAKC,MAAMuD,QAErB2P,EAAW,qCAKf,OAJInT,KAAKC,MAAMmT,UACbD,EAAW,kBAAC,KAAD,OAIX,yBAAKrP,UAAWN,EAAQwO,eACtB,kBAAC,IAAD,CACEhO,QAAQ,KACRtE,MAAM,UACNoE,UAAWN,EAAQ0O,aAEnB,2CAAyB,KAE3B,kBAAC,IAAD,CAAYlO,QAAQ,KAAKF,UAAWN,EAAQqO,UAA5C,uDAGA,kBAAC,IAAD,CAAY7N,QAAQ,KAAKF,UAAWN,EAAQ8O,YAA5C,oBAGA,kBAAC,IAAD,CAAOxO,UAAWN,EAAQ6O,UACxB,kBAAC,IAAD,CAAOvO,UAAWN,EAAQU,OACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,gBACA,kBAAC,IAAD,aACA,kBAAC,IAAD,aACA,kBAAC,IAAD,CAAWL,MAAM,UAAUsP,KAG/B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAW/D,UAAU,KAAKiE,MAAM,OAC9B,uBACEvP,UAAWN,EAAQgP,SACnBc,KAAK,iDAFP,cAOF,kBAAC,IAAD,6BACA,kBAAC,IAAD,eACA,kBAAC,IAAD,CAAWzP,MAAM,SACf,kBAAC,IAAD,CACEG,QAAQ,YACRtE,MAAM,UACNuE,QAAS,SAAAzH,GAAC,OAAI,EAAKyD,MAAMsT,SAASC,QAHpC,YASJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWpE,UAAU,KAAKiE,MAAM,OAC9B,uBACEvP,UAAWN,EAAQgP,SACnBc,KAAK,kDAFP,WAOF,kBAAC,IAAD,2BACA,kBAAC,IAAD,cACA,kBAAC,IAAD,CAAWzP,MAAM,SACf,kBAAC,IAAD,CACEG,QAAQ,YACRtE,MAAM,UACNuE,QAAS,SAAAzH,GAAC,OAAI,EAAKyD,MAAMsT,SAASE,QAHpC,eAiCV,uBAAGH,KAAK,KAAKxP,UAAWN,EAAQ+O,SAC9B,wEAGF,yBAAKzO,UAAWN,EAAQwP,QACtB,uBAAGM,KAAK,oCACN,4BAAQxP,UAAWN,EAAQmP,YACzB,kBAAC,KAAD,CAAU7O,UAAWN,EAAQyP,OAD/B,eAKF,uBAAGK,KAAK,qCACN,4BAAQxP,UAAWN,EAAQmP,YACzB,kBAAC,KAAD,CAAU7O,UAAWN,EAAQyP,OAD/B,UAIF,uBAAGK,KAAK,uCACN,4BAAQxP,UAAWN,EAAQmP,YACzB,kBAAC,KAAD,CAAU7O,UAAWN,EAAQyP,OAD/B,SAKF,uBAAGK,KAAK,2CACN,4BAAQxP,UAAWN,EAAQmP,YACzB,kBAAC,KAAD,CAAS7O,UAAWN,EAAQyP,OAD9B,e,GA5HU1S,aAuIP8D,wBAAWhD,GAAXgD,CAAmB6O,ICrN5B/C,GAAQuD,yBAAe,CAC3BlD,QAAS,CACPnG,QAAS,CACPsJ,KdjCuB,WcmCzBC,UAAW,CACTD,KAAMzW,IAGV2W,UAAW,CACTC,UAAW,CACTC,MAAO,CACLlS,gBAAiB,WAEnBmS,MAAO,CACLnS,gBAAiB,eAMnBR,GAAS,CACb4S,OAAQ,CACNtD,OAAQ,GAEVgB,KAAM,CACJxP,QAAS,OACTC,cAAe,UAEjBwP,QAAS,CACPhT,MAAO,MACPuD,QAAS,OACTC,cAAe,SACfb,UAAW,GACX4L,WAAY,IAEduE,KAAM,CACJ9S,MAAO,QAETsV,OAAQ,CACNtV,MAAO,IACP+B,QAAS,GACTa,YAAa,IAEf2S,MAAO,CACL9G,MAAO,SAETwE,SAAU,CACRC,SAAU,EACVpS,MAAOvC,EACPwE,UAAW,UAEboQ,QAAS,CACPD,SAAU,EACV3E,WAAY,GACZzN,MAAOvC,EACPwE,UAAW,QAEbqQ,cAAe,CACb5B,SAAU,OACV6B,UAAW,oBACX1Q,WAAY,GACZM,gBd5FyB,Uc6FzBE,OAAQ,YAEVmQ,YAAa,CACXC,WAAY,IACZzS,MAAO,QACPiC,UAAW,UAEbyQ,gBAAiB,CACfjQ,QAAS,QACTgL,WAAY,OACZ3L,YAAa,OACb9B,MAAO,SAET2S,SAAU,CACRzT,MAAO,QACPmD,OAAQ,WACRR,UAAW,IAEb+Q,WAAY,CACV/Q,UAAW,GACX7B,MAAO,QACPiC,UAAW,UAEbvC,MAAO,CACLwI,WAAY,KAEd2K,QAAS,CACP7S,MAAO,QACPiC,UAAW,WAITyS,G,YACJ,WAAYnU,GAAQ,IAAD,8BACjB,4CAAMA,KA6CRsT,SAAW,SAAAnd,GACT,EAAKsS,SAAS,CAAE0K,QAAS,IAGzB,IAAIiB,EAAe,IAAIrW,EAAUC,GAEjCoW,EAAa7W,iBAAiB,UAAW,SAAAvE,GACvC,IAAIyE,EAAMzE,EAAE7C,KACRqV,EAAWjQ,EAAYkC,EAAItH,KAAMsH,EAAIlE,MAAOkE,EAAIzG,MACpD,EAAKyR,SAAS,CACZtS,KAAMsH,EAAItH,KACVuO,YAAajH,EAAIhE,QACjBiE,KAAM,CAACD,EAAIC,MACXlC,SAAUiC,EAAIlE,MACd8G,OAAQ5C,EAAIzG,KACZwU,SAAUA,EACV6I,YAAY,EACZtI,gBAAgB,MAGpB9G,IAAO9O,GAAMme,KAAK,SAAAzO,GAAC,OAAIuO,EAAatW,YAAY+H,MAlE/B,EAqEnB3P,gBAAkB,SAAAE,GAEhB,IAAIyB,EAAY3B,EACd,EAAKuP,MAAMtP,KACXC,EACA,EAAKqP,MAAM/C,aAAarL,OACxB,EAAKoO,MAAMjK,SACX,EAAKiK,MAAMpF,QAEb,EAAKoI,SAAS,CACZ/F,aAAc,EAAK+C,MAAM/C,aAAazB,OAAOpJ,MA/E9B,EAoFnBoT,eAAiB,SAAA4B,GACf5H,IAAa,cAAcsP,QAAQ,aAAa,GAEhD,IAAMC,EAAW,EAAK/O,MAAM/C,aAAakK,OACvC,SAAA6H,GAAE,OAAIA,EAAGzX,YAAc6P,EAAM7P,YAGP,IAApBwX,EAASnd,QACXwV,EAAMvT,GAAK,EAAKmM,MAAM/C,aAAarL,OAEnC,EAAKoR,SACH,CACE/F,aAAc,EAAK+C,MAAM/C,aAAazB,OAAO4L,GAC7C7K,QAAS6K,EAAMvT,IAEjB,WACE2L,IAAa,eAAiB4H,EAAMvT,IAAIib,QAAQ,aAAa,GAC7DtP,IAAa,eAAiB,EAAKQ,MAAMxD,SAASsS,QAChD,aACA,OAKNtP,IAAa,eAAiBuP,EAAS,GAAGlb,IAAIib,QAAQ,aAAa,GACnE,EAAK9L,SACH,CACEzG,QAASwS,EAAS,GAAGlb,IAEvB,WACE2L,IAAa,eAAiB,EAAKQ,MAAMxD,SAASsS,QAChD,aACA,OApHS,EA2HnBpJ,iBAAmB,SAAA0B,GACjB5H,IAAa,cAAcsP,QAAQ,aAAa,GAEhD,IAAIG,EAAa,EAAKjP,MAAM/C,aAAakK,OACvC,SAAApP,GAAC,OAAIA,EAAElE,KAAO,EAAKmM,MAAMxD,SAAWzE,EAAElE,KAAOuT,EAAMvT,KAGrD,EAAKmP,SACH,CACE/F,aAAcgS,EACd1S,SAAU,GAEZ,WACEiD,IAAa,eAAiB,EAAKQ,MAAMxD,SAASsS,QAChD,aACA,MA1IW,EAoJnBlJ,eAAiB,SAAAwB,GACf5H,IAAa,cAAcsP,QAAQ,aAAa,GAEhD,IAAMC,EAAW,EAAK/O,MAAM/C,aAAakK,OACvC,SAAA6H,GAAE,OAAIA,EAAGzX,YAAc6P,EAAM7P,YAGP,IAApBwX,EAASnd,QACXwV,EAAMvT,GAAK,EAAKmM,MAAM/C,aAAarL,OAEnC,EAAKoR,SACH,CACE/F,aAAc,EAAK+C,MAAM/C,aAAazB,OAAO4L,GAC7C5K,QAAS4K,EAAMvT,IAEjB,WACE2L,IAAa,eAAiB4H,EAAMvT,IAAIib,QAAQ,aAAa,OAIjEtP,IAAa,eAAiBuP,EAAS,GAAGlb,IAAIib,QAAQ,aAAa,GACnE,EAAK9L,SAAS,CACZxG,QAASuS,EAAS,GAAGlb,OA1KR,EA+KnB0X,SAAW,SAAA1X,GACT2L,IAAa,cAAcsP,QAAQ,aAAa,GAEhDtP,IAAa,eAAiB3L,GAAIib,QAAQ,aAAa,GAEvD,EAAK9L,SAAS,CACZzG,QAAS1I,KArLM,EAyLnB2X,SAAW,SAAA3X,GACT2L,IAAa,cAAcsP,QAAQ,aAAa,GAChDtP,IAAa,eAAiB3L,GAAIib,QAAQ,aAAa,GAEvD,EAAK9L,SAAS,CACZxG,QAAS3I,KA9LM,EAkMnBqb,cAAgB,SAACpY,EAAG4D,GAClB,EAAKsI,SAAS,CACZqE,QAAS3M,KApMM,EAwMnByU,YAAc,WACZ,EAAKnM,SAAS,CACZzG,SAAU,EACVC,SAAU,EACV6K,QAAS,EACTpK,aAAc,MA7MC,EAiNnBmS,oBAAsB,SAAAlb,GACpB,EAAK8O,SAAS,CACZvH,gBAAiBvH,KAjNnBkJ,SAAS1D,MAAQ,yDAajB,EAAKsG,MAAQ,CAEXtP,KAAM,GAENuO,YAAa,GAEb8G,SAAU,GAEV9I,aAAc,GAEdhF,KAAM,GAGNlC,SAAU,GACV6E,OAAQ,GAGR2B,SAAU,EACVC,SAAU,EAGVf,gBAAiB/D,EAAQ5F,MAAM,EAAG,GAElCuV,QAAS,EAETqG,QAAS,EACTkB,YAAY,EACZtI,gBAAgB,GA1CD,E,sEAwNjB,IAAIxI,EAAUxD,KAAKC,MAAMuD,QAEzB,OAAKxD,KAAK0F,MAAM4O,WAKd,kBAAC,mBAAD,CAAkBnE,MAAOA,IACvB,kBAAC,IAAD,CAAQO,SAAS,QAAQ5M,UAAWN,EAAQyQ,QAC1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEc,QAAM,EACN/Q,QAAQ,KACRtE,MAAM,UACNoE,UAAWN,EAAQpE,OAJrB,WAQA,kBAAC,IAAD,CAAY2V,QAAM,EAAC/Q,QAAQ,KAAKF,UAAWN,EAAQuO,SAChD,IADH,+CAE+C,KAE/C,kBAAC,IAAD,CAAY/N,QAAQ,QAAQtE,MAAM,WAAlC,iBACiBM,KAAK0F,MAAMqH,SAE5B,kBAAC,IAAD,CACEjJ,UAAWN,EAAQ0Q,OACnB5W,MAAO0C,KAAK0F,MAAMqH,QAClBlD,SAAU7J,KAAK4U,cACfI,KAAM,EACNC,IAAK,EACLC,IACqC,IAAnClV,KAAK0F,MAAM/C,aAAarL,OACpB,EACA4N,IAAOlF,KAAK0F,MAAM/C,aAAc,SAAAmD,GAAC,OAAIA,EAAE/N,QAAQ4C,SAGvD,kBAAC,IAAD,CACEmJ,UAAWN,EAAQ2Q,MACnBnQ,QAAQ,YACRtE,MAAM,YACNuE,QAASjE,KAAK6U,aAJhB,kBAUJ,yBAAK/Q,UAAWN,EAAQmO,MACtB,kBAAC,GAAD,CACElW,SAAUuE,KAAK0F,MAAMjK,SACrB6E,OAAQN,KAAK0F,MAAMpF,OACnBnK,gBAAiB6J,KAAK7J,gBACtBwO,YAAa3E,KAAK0F,MAAMf,YACxB2P,WAAYtU,KAAK0F,MAAM4O,WACvBrS,QAASjC,KAAK0F,MAAMzD,QACpBC,QAASlC,KAAK0F,MAAMxD,QACpBS,aAAc3C,KAAK0F,MAAM/C,eAE3B,yBAAKmB,UAAWN,EAAQoO,SACtB,kBAAC,GAAD,CACE9N,UAAWN,EAAQ2R,eACnBvF,eAAgB5P,KAAK8U,oBACrB/E,YAAa3S,EACb+D,gBAAiBnB,KAAK0F,MAAMvE,kBAE9B,yBAAK2C,UAAWN,EAAQkO,MACtB,kBAAC,GAAD,CACE/O,aAAc3C,KAAK0F,MAAM/C,aACzBhF,KAAMqC,KAAK0F,MAAM/H,KACjBsT,SAAUjR,KAAKiR,SACfC,SAAUlR,KAAKkR,SACfnE,QAAS/M,KAAK0F,MAAMqH,QACpB5L,gBAAiBnB,KAAK0F,MAAMvE,mBAGhC,kBAAC,GAAD,CACEsK,SAAUzL,KAAK0F,MAAM+F,SACrBsB,QAAS/M,KAAK0F,MAAMqH,QACpB7B,eAAgBlL,KAAKkL,eACrBE,iBAAkBpL,KAAKoL,iBACvBE,eAAgBtL,KAAKsL,eACrBU,eAAgBhM,KAAK0F,MAAMsG,eAC3BvQ,SAAUuE,KAAK0F,MAAMjK,SACrB6E,OAAQN,KAAK0F,MAAMpF,OACnB4B,QAASlC,KAAK0F,MAAMxD,QACpBS,aAAc3C,KAAK0F,MAAM/C,gBAG7B,kBAAC,GAAD,CACEV,QAASjC,KAAK0F,MAAMzD,QACpBC,QAASlC,KAAK0F,MAAMxD,QACpBS,aAAc3C,KAAK0F,MAAM/C,aACzBxB,gBAAiBnB,KAAK0F,MAAMvE,gBAC5BsK,SAAUzL,KAAK0F,MAAM+F,aA1FpB,kBAAC,GAAD,CAAS8H,SAAUvT,KAAKuT,SAAUH,QAASpT,KAAK0F,MAAM0N,c,GA5NjD7S,aA8TH8D,wBAAWhD,GAAXgD,CAAmB+P,IC/adgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAAS5S,SAAS6S,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC,iB","file":"static/js/main.e8abaeda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compas.6aa63d4a.csv\";","module.exports = __webpack_public_path__ + \"static/media/adult.f0b32474.csv\";","/** Since ES6 Maps do equality by reference, objects can't really be used as keys.\n *  Here we simply use a concatenated string as the key.\n **/\nexport function createSubgroups(data, groups, nextId, allFeatures, allValues) {\n  let sub = new Map();\n\n  let groupFeatures = Object.keys(groups);\n\n  data.forEach(inst => {\n    let key = \"\";\n    let vals = [];\n\n    let include = true;\n\n    groupFeatures.forEach(feat_name => {\n      let v = inst[feat_name];\n      if (groups[feat_name].includes(v) || groups[feat_name].length === 0) {\n        vals.push(v);\n        key += v + \", \";\n      } else {\n        include = false;\n      }\n    });\n\n    if (include) {\n      //  Remove last \", \"\n      key = key.slice(0, -2);\n\n      // If key doesn't exist add entry, else push to group\n      let old = sub.get(key);\n      if (old === undefined) {\n        sub.set(key, { vals: vals, insts: [inst] });\n      } else {\n        old[\"insts\"].push(inst);\n        sub.set(key, old);\n      }\n    }\n  });\n\n  return calculateSubgroupMetrics(\n    sub,\n    nextId,\n    groupFeatures,\n    allFeatures,\n    allValues\n  );\n}\n\n/**\n * Calculate Common Fairness Metrics\n *\n * @param counts: counts of tp, tn, fp, tn, p, n\n * Note:\n * acc = accuracy\n * rec = recall\n * prec = precision\n * spec = specificity\n * npv = negative predictive value\n * fnr = false negative rate or miss rate\n * fpr = false positive rate\n * fdr = false discovery rate\n * for = false omission rate\n * f1 = f1 score\n */\nexport function calculateFairnessMetrics(data) {\n  let m = calculateBaseRates(data);\n\n  let metrics = {\n    size: data.length,\n    p: (100 * m.p) / data.length,\n    n: (100 * m.n) / data.length,\n    acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\n    rec: (100 * m.tp) / (m.tp + m.fn),\n    spec: (100 * m.tn) / (m.fp + m.tn),\n    prec: (100 * m.tp) / (m.tp + m.fp),\n    npv: (100 * m.tn) / (m.tn + m.fn),\n    fnr: (100 * m.fn) / (m.fn + m.tp),\n    fpr: (100 * m.fp) / (m.fp + m.tn),\n    fdr: (100 * m.fp) / (m.fp + m.tp),\n    for: (100 * m.fn) / (m.fn + m.tn),\n    f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\n  };\n\n  Object.keys(metrics).forEach(k => {\n    if (isNaN(metrics[k])) {\n      metrics[k] = 0;\n    }\n  });\n\n  return metrics;\n}\n\n/** Calculate performance metrics for all subgroups */\nfunction calculateSubgroupMetrics(\n  subgroups,\n  nextId,\n  groupFeatures,\n  allFeatures,\n  allValues\n) {\n  let metrics = [];\n\n  // Keep track of the ID for all active subgroups\n  let i = nextId;\n\n  subgroups.forEach((group, key) => {\n    let fm = calculateFairnessMetrics(group.insts);\n    let dist = calcValueDist(group.insts, allFeatures, allValues);\n\n    metrics.push({\n      id: i,\n      feats: groupFeatures,\n      vals: group.vals,\n      insts: group.insts,\n      metrics: fm,\n      type: \"top\",\n      distrib: dist\n    });\n    i++;\n  });\n\n  return metrics;\n}\n\n/** Calculate the base classification COUNTS for a group of instances */\nfunction calculateBaseRates(items) {\n  let p = 0;\n  let n = 0;\n  let tp = 0;\n  let tn = 0;\n  let fp = 0;\n  let fn = 0;\n\n  items.forEach(item => {\n    let predicted = Math.round(parseFloat(item[\"out\"]));\n    let actual = parseInt(item[\"class\"], 10);\n\n    if (predicted === 1 && actual === 1) {\n      tp++;\n      p++;\n    } else if (predicted === 0 && actual === 0) {\n      tn++;\n      n++;\n    } else if (predicted === 1 && actual === 0) {\n      fp++;\n      n++;\n    } else {\n      fn++;\n      p++;\n    }\n  });\n\n  return {\n    p: p,\n    n: n,\n    tp: tp,\n    tn: tn,\n    fp: fp,\n    fn: fn\n  };\n}\n\nfunction calcValueDist(insts, allFeatures, allValues) {\n  // init dist\n  let dist = {};\n  allFeatures.forEach((f, i) => {\n    let thisVals = allValues[i];\n    let v_dist = {};\n    thisVals.forEach((v, i) => {\n      v_dist[v] = 0;\n    });\n    dist[f] = v_dist;\n  });\n\n  // populate dist\n  insts.forEach((item, i) => {\n    Object.entries(item).forEach(tuple => {\n      // tuple = [\"age\", 17]\n      dist[tuple[0]][tuple[1]] += 1;\n    });\n  });\n\n  // turn into array with values sorted\n  let collator = new Intl.Collator(undefined, {\n    numeric: true,\n    sensitivity: \"base\"\n  });\n\n  let distrib_arr = [];\n  allFeatures.forEach(feat_name => {\n    let r = Object.entries(dist[feat_name]);\n    r.sort((a, b) => collator.compare(a[0], b[0]));\n    distrib_arr.push(r);\n  });\n\n  return distrib_arr;\n}\n","import { calculateFairnessMetrics } from \"../util/generateSubgroups\";\n\nfunction shannonEntropy(arr, size) {\n  let s = 0;\n  Object.keys(arr).forEach(k => {\n    arr[k] = arr[k] / size;\n    let v = arr[k];\n    if (v !== 0) {\n      s += v * Math.log2(v);\n    }\n  });\n  return -s;\n}\n\n/**\n * Given an array of instances with a class, output label, and cluster, returns an array of clusters\n * with the defining feature, corresponding values, instances that belong to\n * the cluster, and performance metrics.\n */\nexport function getClusters(data, feats, vals) {\n  // Get all features, ignoring class, out, and cluster\n  let features = Object.keys(data[0]);\n  features.splice(features.indexOf(\"class\"), 1);\n  features.splice(features.indexOf(\"out\"), 1);\n  features.splice(features.indexOf(\"cluster\"), 1);\n\n  // Calculte all possible features values\n  let all_atts = {};\n  features.forEach(attr => {\n    let s = new Set(data.map(p => p[attr]));\n    all_atts[attr] = s;\n  });\n\n  // Group instances by cluster\n  let clustInstances = [];\n  //let clusters = runClustering(data, feats, vals);\n  data.forEach(inst => {\n    // Ignore cluster -1, since unclustered\n    if (inst.cluster !== -1) {\n      if (clustInstances[inst.cluster] == null) {\n        clustInstances[inst.cluster] = [inst];\n      } else {\n        clustInstances[inst.cluster] = [...clustInstances[inst.cluster], inst];\n      }\n    }\n  });\n\n  // Calculate value count per cluster\n  let clustDistributions = [];\n  clustInstances.forEach((cluster, i) => {\n    clustDistributions[i] = {};\n    let clustDistrib = clustDistributions[i];\n    clustDistrib[\"size\"] = cluster.length;\n    features.forEach(feat => {\n      clustDistrib[feat] = {};\n      let featDistrib = clustDistrib[feat];\n      cluster.forEach(inst => {\n        featDistrib[inst[feat]] = featDistrib[inst[feat]]\n          ? featDistrib[inst[feat]] + 1\n          : 1;\n      });\n    });\n  });\n\n  // Calculate entropy per cluster per feature, normalizing value counts to get distributions\n  let clustEntropies = [];\n  clustDistributions.forEach((_, i) => {\n    clustEntropies[i] = {};\n    let clustEntr = clustEntropies[i];\n    let clustDistrib = clustDistributions[i];\n    let size = clustDistrib[\"size\"];\n    features.forEach(feat => {\n      clustEntr[feat] = shannonEntropy(clustDistrib[feat], size);\n    });\n  });\n\n  // TODO: Let user set or see more than 3 features\n  // Get top K defining features and values for each cluster\n  let clustDefining = [];\n  clustEntropies.forEach((cluster, i) => {\n    let orderedFeats = Object.keys(cluster).sort((a, b) => {\n      return cluster[a] - cluster[b];\n    });\n\n    let clustDistrib = clustDistributions[i];\n    let orderedVals = orderedFeats.map(feat => {\n      let vals = clustDistrib[feat];\n      return Object.keys(vals).reduce((a, b) => (vals[a] < vals[b] ? a : b));\n    });\n\n    clustDefining[i] = {\n      feats: orderedFeats,\n      clusterid: i,\n      vals: orderedVals,\n      insts: clustInstances[i],\n      metrics: calculateFairnessMetrics(clustInstances[i]),\n      distrib: clustDistributions[i],\n      type: \"bottom\"\n    };\n  });\n\n  return clustDefining;\n}\n","export const PRIMARY_COLOR = \"#1D2737\";\nexport const SECONDARY_COLOR = \"#5a6d94\";\nexport const TERTIARY_COLOR = \"#d6d6d6\";\nexport const HOVERED_COLOR = \"#2979ff\";\nexport const CLICKED_COLOR = \"#b71c1c\";\n\nexport const METRICS = [\n  { label: \"Accuracy\", value: \"acc\", key: \"acc\" },\n  { label: \"Precision\", value: \"prec\", key: \"prec\" },\n  { label: \"Recall\", value: \"rec\", key: \"rec\" },\n  { label: \"Specificity\", value: \"spec\", key: \"spec\" },\n  { label: \"Negative Predictive Value\", value: \"npv\", key: \"npv\" },\n  { label: \"False Negative Rate\", value: \"fnr\", key: \"fnr\" },\n  { label: \"False Positive Rate\", value: \"fpr\", key: \"fpr\" },\n  { label: \"False Discovery Rate\", value: \"fdr\", key: \"fdr\" },\n  { label: \"False Omission Rate\", value: \"for\", key: \"for\" },\n  { label: \"F1\", value: \"f1\", key: \"f1\" }\n];\n","// This WebWorker loads takes the loaded data and calcualtes fairnes metrics for it.\nexport default () => {\n  /**\n   * Calculate Common Fairness Metrics\n   *\n   * @param counts: counts of tp, tn, fp, tn, p, n\n   * Note:\n   * acc = accuracy\n   * rec = recall\n   * prec = precision\n   * spec = specificity\n   * npv = negative predictive value\n   * fnr = false negative rate or miss rate\n   * fpr = false positive rate\n   * fdr = false discovery rate\n   * for = false omission rate\n   * f1 = f1 score\n   */\n  function calculateFairnessMetrics(data) {\n    let m = calculateBaseRates(data);\n\n    let metrics = {\n      size: data.length,\n      p: (100 * m.p) / data.length,\n      n: (100 * m.n) / data.length,\n      acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\n      rec: (100 * m.tp) / (m.tp + m.fn),\n      spec: (100 * m.tn) / (m.fp + m.tn),\n      prec: (100 * m.tp) / (m.tp + m.fp),\n      npv: (100 * m.tn) / (m.tn + m.fn),\n      fnr: (100 * m.fn) / (m.fn + m.tp),\n      fpr: (100 * m.fp) / (m.fp + m.tn),\n      fdr: (100 * m.fp) / (m.fp + m.tp),\n      for: (100 * m.fn) / (m.fn + m.tn),\n      f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\n    };\n\n    Object.keys(metrics).forEach(k => {\n      if (isNaN(metrics[k])) {\n        metrics[k] = 0;\n      }\n    });\n\n    return metrics;\n  }\n\n  /** Calculate the base classification COUNTS for a group of instances */\n  function calculateBaseRates(items) {\n    let p = 0;\n    let n = 0;\n    let tp = 0;\n    let tn = 0;\n    let fp = 0;\n    let fn = 0;\n\n    items.forEach(item => {\n      let predicted = Math.round(parseFloat(item[\"out\"]));\n      let actual = parseInt(item[\"class\"], 10);\n\n      if (predicted === 1 && actual === 1) {\n        tp++;\n        p++;\n      } else if (predicted === 0 && actual === 0) {\n        tn++;\n        n++;\n      } else if (predicted === 1 && actual === 0) {\n        fp++;\n        n++;\n      } else {\n        fn++;\n        p++;\n      }\n    });\n\n    return {\n      p: p,\n      n: n,\n      tp: tp,\n      tn: tn,\n      fp: fp,\n      fn: fn\n    };\n  }\n\n  /** Calculate distribution over instances */\n  function calcValueDist(insts, allFeatures, allValues) {\n    // init dist\n    let dist = {};\n    allFeatures.forEach((f, i) => {\n      let thisVals = allValues[i];\n      let v_dist = {};\n      thisVals.forEach((v, i) => {\n        v_dist[v] = 0;\n      });\n      dist[f] = v_dist;\n    });\n\n    // populate dist\n    insts.forEach((item, i) => {\n      Object.entries(item).forEach(tuple => {\n        // tuple = [\"age\", 17]\n        dist[tuple[0]][tuple[1]] += 1;\n      });\n    });\n\n    return dist;\n  }\n\n  self.addEventListener(\"message\", function(e) { // eslint-disable-line no-restricted-globals\n    let out = {};\n    let data = e.data;\n\n    out.data = data;\n    out.avgs = calculateFairnessMetrics(data);\n    out.feats = Object.keys(data[0]);\n\n    // calculate values\n    let vals = [];\n    for (let i = 0; i < out.feats.length; i++) {\n      let s = new Set(data.map(p => p[out.feats[i]]));\n      let s_arr = Array.from(s);\n      vals.push(s_arr);\n    }\n\n    out.vals = vals;\n\n    // calculate global feat distribution\n    let distrib = calcValueDist(data, out.feats, out.vals);\n    let distrib_arr = [];\n\n    let collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: \"base\"\n    });\n\n    out.feats.forEach(feat_name => {\n      let r = Object.entries(distrib[feat_name]);\n      r.sort((a, b) => collator.compare(a[0], b[0]));\n      distrib_arr.push(r);\n    });\n\n    out.distrib = distrib_arr;\n\n    postMessage(out);\n  });\n};\n","export default class WebWorker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob([\"(\" + code + \")()\"]);\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n","import React, { Component } from \"react\";\nimport VegaLite from \"react-vega-lite\";\n\nconst spec = {\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\n  mark: { type: \"bar\", tooltip: true },\n  width: 250,\n  transform: [\n    {\n      calculate: \"datum.val/100\",\n      as: \"percent\"\n    }\n  ],\n  encoding: {\n    y: {\n      field: \"name\",\n      type: \"ordinal\",\n      axis: { title: \"\", labelFontSize: 13, labelPadding: 10 }\n    },\n    x: {\n      field: \"percent\",\n      aggregate: \"sum\",\n      type: \"quantitative\",\n      axis: { title: \"Ground Truth Label Balance\", format: \"%\" }\n    },\n    color: {\n      field: \"color\",\n      type: \"nominal\",\n      scale: {\n        domain: [\"hovpos\", \"hovneg\", \"clickpos\", \"clickneg\"],\n        range: [\n          \"#64b5f6\",\n          \"rgba(100, 181, 246, .3)\",\n          \"#e57373\",\n          \"rgba(229, 115, 115, .3)\"\n        ]\n      },\n      legend: null\n    }\n  }\n};\n\nclass ClassDistribution extends Component {\n  render() {\n    let data = [];\n    if (this.props.clickedGroup !== undefined) {\n      data.push({\n        name: \"Pinned\",\n        type: \"Positive\",\n        val: this.props.clickedGroup.metrics.p,\n        color: \"clickpos\"\n      });\n      data.push({\n        name: \"Pinned\",\n        type: \"Negative\",\n        val: this.props.clickedGroup.metrics.n,\n        color: \"clickneg\"\n      });\n    }\n    if (this.props.hoveredGroup !== undefined) {\n      data.push({\n        name: \"Hovered\",\n        type: \"Positive\",\n        val: this.props.hoveredGroup.metrics.p,\n        color: \"hovpos\"\n      });\n      data.push({\n        name: \"Hovered\",\n        type: \"Negative\",\n        val: this.props.hoveredGroup.metrics.n,\n        color: \"hovneg\"\n      });\n    }\n\n    return <VegaLite data={{ values: data }} spec={spec} />;\n  }\n}\n\nexport default ClassDistribution;\n","import React, { Component } from \"react\";\nimport VegaLite from \"react-vega-lite\";\n\nconst spec = {\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\n  width: 250,\n  height: 50,\n  mark: \"bar\",\n  transform: [\n    {\n      calculate: \"datum.value/100\",\n      as: \"percent\"\n    }\n  ],\n  spacing: 10,\n  encoding: {\n    row: {\n      field: \"metric\",\n      type: \"ordinal\",\n      scale: { padding: 4 },\n      axis: { title: \"\", orient: \"top\", axisWidth: 1, offset: -8 },\n      header: {title: \"\"},\n    },\n    y: {\n      field: \"group\",\n      type: \"ordinal\",\n      axis: { title: \"\", labels: false }\n    },\n    x: {\n      field: \"percent\",\n      type: \"quantitative\",\n      scale: {\n        domain: [0, 1]\n      },\n      axis: { title: \"\", format: \"%\" }\n    },\n    tooltip: {\n      field: \"percent\",\n      type: \"quantitative\"\n    },\n    color: {\n      field: \"group\",\n      type: \"nominal\",\n      scale: {\n        domain: [\"hovered\", \"pinned\"],\n        // range: [HOVERED_COLOR, CLICKED_COLOR]\n        range: [\"#64b5f6\", \"#e57373\"]\n      },\n      legend: null\n    }\n  }\n};\n\nclass MetricsDistribution extends Component {\n  render() {\n    let data = [];\n    if (this.props.hoveredGroup) {\n      data = data.concat(\n        this.props.selectedMetrics.map(m => {\n          return {\n            group: \"hovered\",\n            metric: m.label,\n            value: this.props.hoveredGroup.metrics[m.value]\n          };\n        })\n      );\n    }\n    if (this.props.clickedGroup) {\n      data = data.concat(\n        this.props.selectedMetrics.map(m => {\n          return {\n            group: \"pinned\",\n            metric: m.label,\n            value: this.props.clickedGroup.metrics[m.value]\n          };\n        })\n      );\n    }\n    return <VegaLite data={{ values: data }} spec={spec} />;\n  }\n}\n\nexport default MetricsDistribution;\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { Component } from \"react\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport ClassDistribution from \"./ClassDistribution\";\nimport \"../style/Radar.css\";\nimport MetricsDistribution from \"./MetricsDistribution\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { HOVERED_COLOR, CLICKED_COLOR } from \"../util/globals\";\n\nconst styles = {\n  card: {\n    width: \"25%\",\n    height: \"100%\",\n    marginTop: 70,\n    marginRight: 10,\n    overflow: \"scroll\"\n  },\n  featureStyle: {\n    textAlign: \"justify\"\n  },\n  avatar: {\n    backgroundColor: \"#1D2737\"\n  },\n  expand: {\n    margin: \"0px auto\"\n  },\n  metrics: {\n    marginTop: 10\n  },\n  feats: {\n    marginBottom: 10\n  },\n  hovered: {\n    color: HOVERED_COLOR\n  },\n  clicked: {\n    color: CLICKED_COLOR\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"space-between\",\n    padding: 7,\n    marginBottom: 5\n  },\n  selectedGroups: {\n    marginTop: 8\n  },\n  feats: {\n    paddingLeft: 8\n  },\n  hoveredCell: {\n    paddingRight: 8\n  }\n};\n\nclass ExpandedCard extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      nextProps.hovered === this.props.hovered &&\n      nextProps.clicked === this.props.clicked\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  export = () => {\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\n    if (clickedGroup) {\n      function saveText(text, filename) {\n        var a = document.createElement(\"a\");\n        a.setAttribute(\n          \"href\",\n          \"data:text/plain;charset=utf-u,\" + encodeURIComponent(text)\n        );\n        a.setAttribute(\"download\", filename);\n        a.click();\n      }\n      saveText(JSON.stringify(clickedGroup), \"clickedgroup.json\");\n    }\n  };\n\n  render() {\n    let classes = this.props.classes;\n\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\n    let hoveredGroup = this.props.activeGroups[this.props.hovered];\n\n    let featsClick = [];\n    if (clickedGroup) {\n      featsClick = clickedGroup.feats;\n      if (clickedGroup.type === \"bottom\") {\n        featsClick = clickedGroup.feats.slice(0, 5);\n      }\n    }\n\n    let featsHov = [];\n    if (hoveredGroup) {\n      featsHov = hoveredGroup.feats;\n      if (hoveredGroup.type === \"bottom\") {\n        featsHov = hoveredGroup.feats.slice(0, 5);\n      }\n    }\n    let feats_comb = [...new Set(featsHov.concat(featsClick))];\n\n    let feats = feats_comb.map((feat, i) => {\n      let hoveredCell = <TableCell />;\n      let clickedCell = <TableCell />;\n      if (this.props.clicked !== -1 && clickedGroup.feats.includes(feat)) {\n        clickedCell = (\n          <TableCell align={\"right\"}>\n            {clickedGroup.vals[clickedGroup.feats.indexOf(feat)]}\n          </TableCell>\n        );\n      }\n      if (this.props.hovered !== -1 && hoveredGroup.feats.includes(feat)) {\n        hoveredCell = (\n          <TableCell align={\"right\"} className={classes.hoveredCell}>\n            {hoveredGroup.vals[hoveredGroup.feats.indexOf(feat)]}\n          </TableCell>\n        );\n      }\n\n      return (\n        <>\n          <TableRow key={i}>\n            <TableCell className={classes.feat}>{feat}</TableCell>\n            {clickedCell}\n            {hoveredCell}\n          </TableRow>\n        </>\n      );\n    });\n\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <div className={classes.header}>\n            <h4 className={classes.selectedGroups}>Group Details</h4>\n            <Button\n              className={classes.exportButton}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.export}\n            >\n              Export\n            </Button>\n          </div>\n          <Divider />\n          <MetricsDistribution\n            hoveredGroup={hoveredGroup}\n            clickedGroup={clickedGroup}\n            selectedMetrics={this.props.selectedMetrics}\n          />\n          <ClassDistribution\n            hoveredGroup={hoveredGroup}\n            clickedGroup={clickedGroup}\n          />\n          <Paper className={classes.feats}>\n            <Table className={classes.table} padding=\"none\" size=\"small\">\n              <colgroup>\n                <col style={{ width: \"33%\" }} />\n                <col style={{ width: \"33%\" }} />\n                <col style={{ width: \"33%\" }} />\n              </colgroup>\n              <TableHead className={classes.tableHeader}>\n                <TableRow key={0}>\n                  <TableCell className={classes.feat}>Feature</TableCell>\n                  <TableCell align=\"right\">\n                    <span className={classes.clicked}>Pinned</span>\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.hoveredCell}>\n                    <span className={classes.hovered}>Hovered</span>\n                  </TableCell>\n                </TableRow>\n                <TableRow key={1}>\n                  <TableCell>Size</TableCell>\n                  <TableCell align=\"right\">\n                    {clickedGroup && clickedGroup.metrics.size}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {hoveredGroup && hoveredGroup.metrics.size}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{feats}</TableBody>\n            </Table>\n          </Paper>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(ExpandedCard);\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport d3tip from \"d3-tip\";\nimport \"../style/BoxPlot.css\";\nimport { TERTIARY_COLOR } from \"../util/globals\";\n\nconst boxWidth = 300;\nconst boxHeight = 100;\n\nclass Histogram extends Component {\n  constructor(props) {\n    super(props);\n\n    var margin = {\n        top: 50,\n        right: 10,\n        bottom: 0,\n        left: 10\n      },\n      width = boxWidth - margin.left - margin.right,\n      height = boxHeight - margin.top - margin.bottom;\n\n    this.state = {\n      margin,\n      width,\n      height\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.type === \"global\" &&\n      this.props.dataDistrib.length === 0 &&\n      nextProps.dataDistrib.length !== 0\n    ) {\n      return true;\n    } else if (\n      this.props.type === \"click\" &&\n      this.props.clicked !== nextProps.clicked\n    ) {\n      return true;\n    } else if (\n      this.props.type === \"hover\" &&\n      this.props.hovered !== nextProps.hovered\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate() {\n    this.update();\n  }\n\n  update = () => {\n    if (this.props.type === \"global\") {\n      this.drawGlobalDistBar(\n        this.props.dataDistrib,\n        this.props.featName,\n        this.props.featIndex,\n        this.props.maxy\n      );\n    } else {\n      let groupIndex =\n        this.props.type === \"click\" ? this.props.clicked : this.props.hovered;\n\n      this.drawGroupDistBar(\n        this.props.activeGroups,\n        groupIndex,\n        this.props.type,\n        this.props.featName,\n        this.props.featIndex,\n        this.props.maxy\n      );\n    }\n  };\n\n  drawGlobalDistBar = (dataDistrib, feat, featIndex, maxy) => {\n    let arr = dataDistrib[featIndex];\n\n    this.drawBar(arr, featIndex, \"global\", maxy);\n  };\n\n  /**\n   * @param clickedGroupDist dist for this feature\n   * @param type: \"hover\" or \"click\"\n   */\n  drawGroupDistBar = (\n    activeGroups,\n    groupIndex,\n    type,\n    feat,\n    featIndex,\n    maxy\n  ) => {\n    // delete existing plots of this type\n    d3.select(\"#box-plot-bar-\" + type + \"-\" + featIndex).remove();\n\n    if (groupIndex >= 0) {\n      let group = activeGroups[groupIndex];\n\n      // TODO temp: need to change format of bottom up subgroups\n      if (group.type === \"top\") {\n        let feat_dist_arr = group.distrib[featIndex];\n        this.drawBar(feat_dist_arr, featIndex, \"bar-\" + type, maxy);\n      }\n    }\n  };\n\n  /**\n   * Draw the actual bars yah\n   * @param data_arr: [value, count]\n   * @param featIndex\n   * @param bar_type: \"\", \"bar-click\", or \"bar-hover\"\n   */\n  drawBar = (data_arr, featIndex, bar_type, maxy) => {\n    const node = this.node;\n\n    let svg = d3\n      .select(node)\n      .append(\"svg\")\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 300 100\")\n      .attr(\"class\", \"box-plot\")\n      .attr(\"id\", \"box-plot-\" + bar_type + \"-\" + featIndex)\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        \"translate(\" +\n          this.state.margin.left +\n          \",\" +\n          this.state.margin.top +\n          \")\"\n      );\n\n    // categorical X\n    let x = d3\n      .scaleBand()\n      .rangeRound([0, 300], 0.1)\n      .domain(\n        data_arr.map(d => {\n          return d[0];\n        })\n      );\n\n    let y = d3\n      .scaleLinear()\n      .range([this.state.height, 0])\n      .domain([0, maxy]);\n\n    let hght = this.state.height;\n\n    var tip = d3tip()\n      .attr(\"class\", \"d3-tip\")\n      .offset([-10, 0])\n      .html(function(d) {\n        return (\n          d[0] +\n          \": <span style='color:\" +\n          TERTIARY_COLOR +\n          \"'>\" +\n          d[1] +\n          \"</span>\"\n        );\n      });\n\n    svg.call(tip);\n\n    svg\n      .selectAll(\"rect\")\n      .data(data_arr)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", d => {\n        return x(d[0]);\n      })\n      .attr(\"y\", d => {\n        return y(d[1]);\n      })\n      .attr(\"width\", function(d) {\n        return x.bandwidth();\n      })\n      .attr(\"height\", function(d) {\n        return hght - y(d[1]);\n      })\n      .attr(\"id\", function(d, i) {\n        return \"rect-\" + featIndex + \"-\" + i;\n      })\n      .attr(\"class\", \"barchart-rect \" + bar_type)\n      .on(\"mouseover\", tip.show)\n      .on(\"mouseout\", tip.hide);\n  };\n\n  render() {\n    return <div ref={node => (this.node = node)} />;\n  }\n}\n\nexport default Histogram;\n","import Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport * as d3 from \"d3\";\nimport React, { Component } from \"react\";\nimport Histogram from \"./Histogram\";\nimport {\n  PRIMARY_COLOR,\n  SECONDARY_COLOR,\n  TERTIARY_COLOR\n} from \"../util/globals\";\n\nimport { FaInfoCircle } from \"react-icons/fa\";\n\nconst styles = {\n  info: {},\n  drawer: {\n    width: \"20%\",\n    flexShrink: 0,\n    marginTop: 65,\n    maxWidth: 360\n  },\n  feature: {\n    margin: 10\n  },\n  button: {\n    margin: \"0px auto\"\n  },\n  listItem: {\n    paddingBottom: \"20px\",\n    height: 100,\n    alignItems: \"baseline\"\n  },\n  listText: {\n    height: 25\n  },\n  radio: {\n    top: \"25%\"\n  },\n  divider: {\n    marginTop: 5\n  },\n  boxLabel: {\n    textTransform: \"capitalize\",\n    fontSize: \"16px\",\n    color: PRIMARY_COLOR,\n    fontWeight: 500,\n    margin: 0\n  },\n  info: {\n    color: PRIMARY_COLOR,\n    cursor: \"pointer\"\n  }\n};\n\nclass FeatureDrawer extends Component {\n  constructor(props) {\n    super(props);\n\n    let sub = {};\n    let max_ys = [];\n\n    props.features.forEach((feat_name, feat_i) => {\n      sub[feat_i] = new Set();\n      let maxy = d3.max(props.dataDistrib[feat_i], d => {\n        return d[1];\n      });\n      max_ys.push(maxy);\n    });\n\n    this.state = {\n      checked: new Set(),\n      opened: new Set(),\n      subchecked: sub,\n      features: props.features,\n      max_ys: max_ys\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      (this.props.features.length === 0 && nextProps.features.length > 0) ||\n      this.props.clicked !== nextProps.clicked ||\n      this.props.hovered !== nextProps.hovered ||\n      this.compareState(this.state, nextState)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Determine if state has changed...only comparing size of sets for increased speed.\n   */\n  compareState = (oldState, newState) => {\n    if (\n      oldState.opened.size !== newState.opened.size ||\n      oldState.checked.size !== newState.checked.size\n    ) {\n      return true;\n    }\n\n    let out = false;\n    Object.keys(oldState.subchecked).forEach(k => {\n      if (newState.subchecked[k].size !== oldState.subchecked[k].size) {\n        out = true;\n      }\n    });\n\n    return out;\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n\n    let newChecked = new Set(checked);\n\n    if (newChecked.has(value)) {\n      newChecked.delete(value);\n    } else {\n      newChecked.add(value);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n\n  handleSubToggle = (feat_i, item_i) => () => {\n    const { subchecked, checked } = this.state;\n\n    let subnew = {};\n    Object.keys(subchecked).forEach(k => {\n      subnew[k] = new Set(subchecked[k]);\n    });\n\n    let n = new Set(checked);\n\n    if (subnew[feat_i].has(item_i)) {\n      subnew[feat_i].delete(item_i);\n    } else {\n      subnew[feat_i].add(item_i);\n    }\n\n    n.delete(feat_i);\n\n    this.setState({\n      subchecked: subnew,\n      checked: n\n    });\n  };\n\n  handleClick = feat_i => () => {\n    const { opened } = this.state;\n\n    let newOpened = new Set(opened);\n\n    if (newOpened.has(feat_i)) {\n      newOpened.delete(feat_i);\n    } else {\n      newOpened.add(feat_i);\n    }\n    this.setState({\n      opened: newOpened\n    });\n  };\n\n  handleHover = (i, j) => {\n    let selector = \"#rect-\" + i + \"-\" + j;\n\n    d3.select(selector)\n      .style(\"fill\", SECONDARY_COLOR)\n      .style(\"opacity\", 1);\n  };\n\n  handleUnhover = (i, j) => {\n    let selector = \"#rect-\" + i + \"-\" + j;\n\n    d3.select(selector)\n      .style(\"fill\", TERTIARY_COLOR)\n      .style(\"opacity\", 0.8);\n  };\n\n  handleClickSubgroup = () => {\n    let groups = {};\n    let sub = {};\n\n    this.props.features.forEach((feat_name, feat_i) => {\n      // get value\n      if (\n        this.state.checked.has(feat_i) ||\n        this.state.subchecked[feat_i].size > 0\n      ) {\n        let val_arr = [];\n\n        this.state.subchecked[feat_i].forEach(valIndex => {\n          val_arr.push(this.props.values[feat_i][valIndex]);\n        });\n\n        groups[feat_name] = val_arr;\n      }\n\n      // reset selection\n      sub[feat_i] = new Set();\n    });\n\n    this.props.createSubgroups(groups);\n\n    this.setState({ checked: new Set(), subchecked: sub });\n  };\n\n  render() {\n    const classes = this.props.classes;\n    const collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: \"base\"\n    });\n\n    if (this.props.features.length > 0) {\n      return (\n        <Drawer\n          className={classes.drawer}\n          classes={{ paper: classes.drawer }}\n          variant=\"permanent\"\n          anchor=\"left\"\n        >\n          <List>\n            <ListItem key={-1}>\n              <Tooltip\n                title=\"Create all subgroups of the selected features\"\n                placement=\"bottom\"\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.button}\n                  onClick={this.handleClickSubgroup}\n                >\n                  Generate Subgroups\n                </Button>\n              </Tooltip>\n              <FaInfoCircle className={classes.info} onClick={() => alert(\"hello\")}/>\n            </ListItem>\n            <Divider />\n\n            {this.props.features.map((feat_name, feat_i) => (\n              <>\n                <ListItem\n                  key={`section-${feat_i}`}\n                  className={classes.listItem}\n                  onClick={this.handleClick(feat_i)}\n                >\n                  <p className={classes.boxLabel}>{feat_name}</p>\n                  {/* Global BoxPlot */}\n                  <Histogram\n                    featName={feat_name}\n                    dataDistrib={this.props.dataDistrib}\n                    featIndex={feat_i}\n                    type={\"global\"}\n                    maxy={this.state.max_ys[feat_i]}\n                  />\n                  {/* Clicked BoxPlot */}\n                  {/* <BoxPlot\n                    featName={feat_name}\n                    featIndex={feat_i}\n                    clicked={this.props.clicked}\n                    hovered={this.props.hovered}\n                    activeGroups={this.props.activeGroups}\n                    type={\"click\"}\n                    maxy= {this.state.max_ys[feat_i]}\n                  /> */}\n                  {/* Hovered BoxPlot */}\n                  <Histogram\n                    featName={feat_name}\n                    featIndex={feat_i}\n                    clicked={this.props.clicked}\n                    hovered={this.props.hovered}\n                    activeGroups={this.props.activeGroups}\n                    type={\"hover\"}\n                    maxy={this.state.max_ys[feat_i]}\n                  />\n\n                  <ListItemSecondaryAction className={classes.radio}>\n                    <Checkbox\n                      onChange={this.handleToggle(feat_i)}\n                      checked={this.state.checked.has(feat_i)}\n                      disabled={this.state.subchecked[feat_i].size > 0}\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n\n                <Collapse\n                  in={this.state.opened.has(feat_i)}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  {this.props.values[feat_i]\n                    .sort(collator.compare)\n                    .map((value, value_i) => (\n                      <ListItem\n                        key={`item-${feat_i}-${value_i}`}\n                        button\n                        onMouseOver={e => this.handleHover(feat_i, value_i, e)}\n                        onMouseOut={e => this.handleUnhover(feat_i, value_i, e)}\n                      >\n                        <ListItemText primary={value} />\n\n                        <ListItemSecondaryAction>\n                          <Checkbox\n                            onChange={this.handleSubToggle(feat_i, value_i)}\n                            checked={this.state.subchecked[feat_i].has(value_i)}\n                          />\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                </Collapse>\n                <Divider className={classes.divider} />\n              </>\n            ))}\n          </List>\n        </Drawer>\n      );\n    }\n\n    return <div className={classes.drawer}>Loading...</div>;\n  }\n}\n\nexport default withStyles(styles)(FeatureDrawer);\n","import React, { Component } from \"react\";\nimport VegaLite from \"react-vega-lite\";\nimport { PRIMARY_COLOR } from \"../util/globals\";\n\nconst spec = {\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\n  height: 50,\n  width: 75,\n  data: {\n    name: \"myData\"\n  },\n  transform: [\n    {\n      calculate: \"datum.makeup/100\",\n      as: \"percent\"\n    }\n  ],\n  mark: {type: \"bar\", tooltip: true},\n  encoding: {\n    y: {\n      field: \"value\",\n      type: \"ordinal\",\n      axis: { title: \"\" },\n      sort: { encoding: \"x\", order: \"descending\" }\n    },\n    x: {\n      field: \"percent\",\n      type: \"quantitative\",\n      axis: { title: \"\", format: \"%\" }\n    },\n    color: {\n      field: \"primary\",\n      type: \"nominal\",\n      scale: {\n        domain: [0, 1],\n        range: [PRIMARY_COLOR, \"#718C73\"]\n      },\n      legend: null\n    }\n  }\n};\n\nclass ClusterDistribution extends Component {\n  render() {\n    let cluster = this.props.cluster;\n    let feature = this.props.feature;\n\n    let distrib = cluster.distrib[feature];\n    let data = this.props.values[this.props.features.indexOf(feature)].map(\n      (val, i) => {\n        if (distrib[val]) {\n          return {\n            value: val,\n            makeup: distrib[val] * 100,\n            primary: val === this.props.maxVal ? 1 : 0\n          };\n        } else {\n          return {\n            value: val,\n            makeup: 0,\n            primary: 0\n          };\n        }\n      }\n    );\n\n    return (\n      <VegaLite\n        data={{ values: data }}\n        spec={spec}\n        style={{ paddingLeft: 0 }}\n      />\n    );\n  }\n}\n\nexport default ClusterDistribution;\n","// Gets all neighbors in activeGroups that only have one feature difference.\nexport function getNeighbors(subgroup, activeGroups) {\n  let oneAwayGroups = [];\n  activeGroups.forEach(group => {\n    let same = group.feats.length;\n    let diffFeatInd = -1;\n    subgroup.feats.forEach((feat, ind) => {\n      let i = group.feats.indexOf(feat);\n      if (i >= 0) {\n        if (group.vals[i] === subgroup.vals[ind]) {\n          same--;\n        } else {\n          diffFeatInd = ind;\n        }\n      }\n    });\n    if (same === 1) {\n      group[\"featDiff\"] = diffFeatInd;\n      oneAwayGroups.push(group);\n    }\n  });\n  return oneAwayGroups;\n}\n","import { withStyles } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClusterDistribution from \"./ClusterDistribution\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { CLICKED_COLOR, METRICS } from \"../util/globals\";\nimport { getNeighbors } from \"../util/neighboringClusters\";\nimport { TableHead } from \"@material-ui/core\";\nimport \"../style/GroupSuggestions.css\";\n\nconst styles = {\n  paper: {\n    height: 350,\n    overflow: \"scroll\",\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 30\n  },\n  metrics: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"space-between\",\n    padding: 7\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"space-between\",\n    padding: 7\n  },\n  cards: {\n    display: \"flex\",\n    flexDirection: \"inline\",\n    justifyContent: \"center\"\n  },\n  cardContent: {\n    padding: 0\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  headerDivider: {\n    marginBottom: 7\n  },\n  table: {\n    width: \"100%\"\n  },\n  fab: {\n    float: \"right\"\n  },\n  paging: {\n    float: \"right\",\n    display: \"inline-flex\",\n    marginTop: 7,\n    justifyContent: \"center\"\n  },\n  label: {\n    textTransform: \"capitalize\"\n  },\n  value: {\n    color: \"#718C73\"\n  },\n  similarGroups: {\n    display: \"inline-flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  settings: {\n    display: \"inline-flex\"\n  },\n  sortText: {\n    marginRight: 13,\n    marginTop: 7\n  },\n  diffTable: {\n    marginTop: 10\n  },\n  leftCell: {\n    paddingLeft: \"10px\",\n    maxWidth: 50\n  }\n};\n\nclass GroupSuggestions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      showSimilar: false,\n      neighbors: [],\n      sort: \"acc\"\n    };\n  }\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.clustersLoaded) {\n      return true;\n    }\n    return false;\n  }\n\n  mouseEnter = cluster => {\n    this.props.suggestedHover(cluster);\n  };\n\n  mouseLeave = cluster => {\n    this.props.suggestedUnhover(cluster);\n  };\n\n  mouseClick = cluster => {\n    this.props.suggestedClick(cluster);\n  };\n\n  pageRight = () => {\n    if (this.state.page * 2 + 3 < this.props.clusters.length) {\n      this.setState({\n        page: this.state.page + 1\n      });\n    }\n  };\n\n  pageLeft = () => {\n    if (this.state.page !== 0) {\n      this.setState({\n        page: this.state.page - 1\n      });\n    }\n  };\n\n  changeView = val => {\n    if (val.target.value === 0) {\n      this.setState({\n        showSimilar: false\n      });\n    } else {\n      if (this.props.clicked !== -1) {\n        this.setState({\n          neighbors: getNeighbors(\n            this.props.activeGroups[this.props.clicked],\n            this.props.activeGroups.slice()\n          ),\n          showSimilar: true\n        });\n      } else {\n        this.setState({\n          showSimilar: true\n        });\n      }\n    }\n  };\n\n  changeSort = val => {\n    this.setState({\n      sort: val.target.value\n    });\n  };\n\n  render() {\n    let classes = this.props.classes;\n\n    if (this.state.showSimilar && this.state.neighbors.length !== 0 && this.props.clicked !== -1) {\n      let clickedGroup = this.props.activeGroups[this.props.clicked];\n      let similarGroups = this.state.neighbors\n        .sort((a, b) => {\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\n        })\n        .map((neigh, index) => {\n          return (\n            <Card\n              className={\"similar-card\"}\n              key={index}\n              onMouseEnter={_ => this.mouseEnter(neigh)}\n              onMouseLeave={_ => this.mouseLeave(neigh)}\n              onClick={_ => this.mouseClick(neigh)}\n            >\n              <CardContent className={classes.cardContent}>\n                <Table className={classes.table} padding=\"dense\">\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        <b> Group {this.state.page * 2 + index + 1} </b>\n                        <br />\n                        {neigh.type === \"top\" ? \"Generated\" : \"Suggested\"}\n                      </TableCell>\n                      <TableCell />\n                      <TableCell align=\"right\">\n                        {neigh.metrics.size} Instances\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n                <Table className={classes.diffTable} padding=\"dense\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Feature Difference</TableCell>\n                      <TableCell style={{ color: CLICKED_COLOR }} align=\"right\">\n                        Pinned\n                      </TableCell>\n                      <TableCell style={{ color: \"#718C73\" }} align=\"right\">\n                        Similar\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableCell>{clickedGroup.feats[neigh.featDiff]}</TableCell>\n                    <TableCell align=\"right\">\n                      {clickedGroup.vals[neigh.featDiff]}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {\n                        neigh.vals[\n                          neigh.feats.indexOf(\n                            clickedGroup.feats[neigh.featDiff]\n                          )\n                        ]\n                      }\n                    </TableCell>\n                  </TableBody>\n                </Table>\n              </CardContent>\n            </Card>\n          );\n        });\n\n      return (\n        <Paper className={classes.paper}>\n          <div className={classes.header}>\n            <FormControl>\n              <Select value={1} onChange={this.changeView}>\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\n              </Select>\n            </FormControl>\n            <div className={classes.settings}>\n              <Typography variant=\"body1\" className={classes.sortText}>\n                Sort by:\n              </Typography>\n              <FormControl>\n                <Select value={this.state.sort} onChange={this.changeSort}>\n                  {METRICS.map(m => (\n                    <MenuItem value={m.value}>{m.label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <Divider className={classes.headerDivider} />\n          <div className={classes.similarGroups}>{similarGroups}</div>\n        </Paper>\n      );\n    } else {\n      // Get least performing subgroups.\n      let bottomClusters = this.props.clusters\n        .filter(clust => clust.metrics.size > this.props.minSize)\n        .sort((a, b) => {\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\n        })\n        .slice(this.state.page * 2, this.state.page * 2 + 2);\n\n      let cards = bottomClusters.map((clust, index) => (\n        <Card\n          className={\"suggested-card\"}\n          key={index}\n          onMouseEnter={_ => this.mouseEnter(clust)}\n          onMouseLeave={_ => this.mouseLeave(clust)}\n          onClick={_ => this.mouseClick(clust)}\n        >\n          <CardContent className={classes.cardContent}>\n            <Table className={classes.table} padding=\"none\">\n              <TableBody>\n                <TableRow>\n                  <TableCell padding=\"none\" className={classes.leftCell}>\n                    <b>Group {this.state.page * 2 + index + 1}</b>\n                  </TableCell>\n                  <TableCell width={80} padding=\"dense\" align=\"right\">\n                    {clust.metrics.size} Instances\n                  </TableCell>\n                </TableRow>\n                {clust.feats.map((feat, i) => (\n                  <TableRow key={i}>\n                    <TableCell padding=\"none\" className={classes.leftCell}>\n                      <b className={classes.label}>{feat}</b>\n                      <br />\n                      <span className={classes.value}>{clust.vals[i]}</span>\n                    </TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      className={classes.cell}\n                      align=\"right\"\n                    >\n                      <ClusterDistribution\n                        maxVal={clust.vals[i]}\n                        features={this.props.features}\n                        values={this.props.values}\n                        cluster={clust}\n                        feature={feat}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      ));\n\n      return (\n        <Paper className={classes.paper}>\n          <div className={classes.header}>\n            <FormControl>\n              <Select value={0} onChange={this.changeView}>\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\n              </Select>\n            </FormControl>\n            <div className={classes.settings}>\n              <Typography variant=\"body1\" className={classes.sortText}>\n                Sort by:\n              </Typography>\n              <FormControl>\n                <Select value={this.state.sort} onChange={this.changeSort}>\n                  {METRICS.map(m => (\n                    <MenuItem value={m.value}>{m.label}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <div className={classes.paging}>\n                <ChevronLeft onClick={this.pageLeft} />\n                <Typography variant=\"body1\">\n                  {this.state.page * 2 + 1} -{\" \"}\n                  {this.state.page * 2 + 2 > this.props.clusters.length\n                    ? this.props.clusters.length\n                    : this.state.page * 2 + 2}\n                </Typography>\n                <ChevronRight onClick={this.pageRight} />\n              </div>\n            </div>\n          </div>\n          <Divider className={classes.headerDivider} />\n          <div className={classes.cards}>{cards}</div>\n        </Paper>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(GroupSuggestions);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport Select from \"react-select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\n\nconst styles = theme => ({\n  selectorWrapper: {\n    minWidth: 250,\n    color: \"white\",\n    marginRight: 20,\n    marginTop: 10\n  },\n  input: {\n    display: \"flex\",\n    padding: 0\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    fontSize: 16\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  ValueContainer\n};\n\nclass MetricSelector extends Component {\n  handleChange = values => {\n    this.props.onMetricChange(values);\n  };\n\n  render() {\n    // these have to be defined out here or it breaks...idk man\n    var selectedOptions = this.props.selectedMetrics;\n    var suggs = this.props.suggestions;\n\n    return (\n      <div className={this.props.classes.selectorWrapper}>\n        <Select\n          classes={this.props.classes}\n          options={suggs}\n          components={components}\n          onChange={this.handleChange}\n          value={selectedOptions}\n          placeholder=\"Select Fairness Metrics\"\n          isMulti\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MetricSelector);\n","import { withStyles } from \"@material-ui/core/styles\";\nimport * as d3 from \"d3\";\nimport React, { Component } from \"react\";\nimport \"../style/StripPlot.css\";\n\nconst styles = {\n  plot: {\n    display: \"inline-block\",\n    minWidth: 500,\n    width: \"100%\"\n  }\n};\n\nclass StripPlot extends Component {\n  constructor(props) {\n    super(props);\n\n    let margin = {\n      top: 0,\n      right: 50,\n      bottom: 0,\n      left: 50\n    };\n    let width = 1000;\n    let height = 80;\n\n    let xScale = d3\n      .scaleLinear()\n      .range([0, width - margin.right - margin.left])\n      .domain([0, 100]);\n    let yScale = d3\n      .scaleLinear()\n      .range([height - margin.top - margin.bottom, 0])\n      .domain([0, 100]);\n\n    let xAxis = d3\n      .axisBottom()\n      .scale(xScale)\n      .tickPadding(8)\n      .ticks(8)\n      .tickFormat(function(d) {\n        return d * 1 + \"%\";\n      });\n\n    this.state = {\n      margin: margin,\n      width: width - margin.left - margin.right,\n      height: height - margin.top - margin.bottom,\n      xScale: xScale,\n      yScale: yScale,\n      xAxis: xAxis\n    };\n  }\n\n  componentDidMount() {\n    this.createStripPlot();\n  }\n\n  createStripPlot = () => {\n    const node = this.node;\n\n    d3.select(node)\n      .selectAll(\"svg\")\n      .remove();\n\n    this.props.selectedMetrics.forEach(m => {\n      let svg = d3\n        .select(node)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 1000 105\")\n        .attr(\"id\", \"stripplot-\" + m.value)\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          \"translate(\" +\n            this.state.margin.left +\n            \",\" +\n            this.state.margin.top +\n            \")\"\n        );\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\n        .call(this.state.xAxis)\n        .append(\"text\")\n        .text(m.label)\n        .attr(\"class\", \"axis-label\")\n        .attr(\"x\", -10)\n        .attr(\"y\", -10);\n    });\n\n    this.update();\n  };\n\n  update = () => {\n    this.props.selectedMetrics.forEach(m => {\n      let svg = d3.select(this.node).select(\"#stripplot-\" + m.value);\n\n      svg.selectAll(\".percentline\").remove();\n\n      svg\n        .selectAll(\".percentline\")\n        .data(this.props.activeGroups, d => d.id)\n        .enter()\n        .append(\"line\")\n        .filter(d => {\n          return d.metrics.size > this.props.minSize;\n        })\n        .attr(\"x1\", d => {\n          return this.state.xScale(d.metrics[m.value]) + 50;\n        })\n        .attr(\"x2\", d => {\n          return this.state.xScale(d.metrics[m.value]) + 50;\n        })\n        .attr(\"y1\", 30)\n        .attr(\"y2\", 80)\n        .attr(\"class\", \"percentline\")\n        .attr(\"id\", d => {\n          return \"linecluster\" + d.id;\n        })\n        .on(\"mouseover\", d => {\n          this.props.barHover(d.id);\n        })\n        .on(\"mouseout\", d => {\n          this.props.barHover(-1);\n        })\n        .on(\"click\", d => {\n          this.props.barClick(d.id);\n        });\n\n      delete this.props.avgs.size;\n\n      let avgG = svg\n        .selectAll(\"line.avg\")\n        .data(this.props.avgs)\n        .enter()\n        .append(\"g\");\n\n      avgG\n        .append(\"line\")\n        .attr(\"x1\", d => {\n          return this.state.xScale(d[m.value]) + 50;\n        })\n        .attr(\"x2\", d => {\n          return this.state.xScale(d[m.value]) + 50;\n        })\n        .attr(\"y1\", 20)\n        .attr(\"y2\", 90)\n        .style(\"stroke\", \"#5a6d94\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\", 0.4);\n\n      avgG\n        .append(\"text\")\n        .text(d => \"avg: \" + d[m.value].toFixed(2) + \"%\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"x\", d => {\n          return this.state.xScale(d[m.value]) + 50;\n        })\n        .attr(\"y\", 15)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"fill\", \"#5a6d94\");\n    });\n  };\n\n  shouldComponentUpdate(nextProps, _) {\n    if (nextProps.minSize !== this.props.minSize) {\n      return true;\n    }\n    if (\n      nextProps.selectedMetrics.length !== this.props.selectedMetrics.length\n    ) {\n      return true;\n    }\n    if (nextProps.activeGroups.length === this.props.activeGroups.length) {\n      return false;\n    }\n    return true;\n  }\n\n  componentDidUpdate(prevProps, _) {\n    if (\n      prevProps.selectedMetrics.length !== this.props.selectedMetrics.length\n    ) {\n      this.createStripPlot();\n    }\n  }\n\n  render() {\n    this.update();\n    return (\n      <div\n        className={this.props.classes.plot}\n        ref={node => (this.node = node)}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(StripPlot);\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { FaMedium, FaScroll, FaGithub, FaGlobe } from \"react-icons/fa\";\nimport { PRIMARY_COLOR, TERTIARY_COLOR } from \"../util/globals\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/* Datasets */\nimport compasData from \"../data/compas.csv\";\nimport adultData from \"../data/adult.csv\";\n// import censusData from \"../data/census.csv\";\n\nconst styles = {\n  body: {\n    display: \"flex\",\n    flexDirection: \"inline\"\n  },\n  content: {\n    width: \"55%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 65,\n    marginLeft: 10\n  },\n  subtitle: {\n    flexGrow: 1,\n    color: TERTIARY_COLOR,\n    textAlign: \"center\"\n  },\n  tagline: {\n    flexGrow: 1,\n    marginLeft: 30,\n    color: TERTIARY_COLOR,\n    textAlign: \"left\"\n  },\n  loadingScreen: {\n    minWidth: \"100%\",\n    minHeight: \"calc(100% + 22px)\",\n    marginTop: -22,\n    backgroundColor: PRIMARY_COLOR,\n    margin: \"0px auto\"\n  },\n  loadingText: {\n    paddingTop: 150,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  loadingProgress: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: \"white\"\n  },\n  datasets: {\n    width: \"600px\",\n    margin: \"0px auto\",\n    marginTop: 10\n  },\n  tabletitle: {\n    marginTop: 50,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  title: {\n    fontWeight: 800\n  },\n  adddata: {\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  dataLink: {\n    textDecorationColor: \"black\",\n    color: \"black\",\n    textDecoration: \"none\"\n  },\n  socialLink: {\n    padding: 10,\n    background: PRIMARY_COLOR,\n    margin: 10,\n    color: TERTIARY_COLOR,\n    fontFamily: \"Roboto\",\n    fontWeight: 500,\n    fontSize: 16,\n    borderColor: \"white\",\n    borderRadius: 7,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    cursor: \"pointer\"\n  },\n  social: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 70\n  },\n  icon: {\n    fontSize: 16,\n    marginRight: 10\n  }\n};\n\nclass Welcome extends Component {\n  render() {\n    let classes = this.props.classes;\n\n    let loadIcon = <></>\n    if (this.props.loading) {\n      loadIcon = <CircularProgress />\n    }\n\n    return (\n      <div className={classes.loadingScreen}>\n        <Typography\n          variant=\"h2\"\n          color=\"inherit\"\n          className={classes.loadingText}\n        >\n          <strong>FairVis</strong>{\" \"}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.subtitle}>\n          Audit Classification Models for Intersectional Bias\n        </Typography>\n        <Typography variant=\"h6\" className={classes.tabletitle}>\n          Select a Dataset\n        </Typography>\n        <Paper className={classes.datasets}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Dataset</TableCell>\n                <TableCell>Goal</TableCell>\n                <TableCell>Size</TableCell>\n                <TableCell align=\"center\">{loadIcon}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\">\n                  <a\n                    className={classes.dataLink}\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Adult\"\n                  >\n                    UCI Adult\n                  </a>\n                </TableCell>\n                <TableCell>Predict income >$50K</TableCell>\n                <TableCell>32,562</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={_ => this.props.loadData(adultData)}\n                  >\n                    Select\n                  </Button>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\">\n                  <a\n                    className={classes.dataLink}\n                    href=\"https://github.com/propublica/compas-analysis/\"\n                  >\n                    COMPAS\n                  </a>\n                </TableCell>\n                <TableCell>Predict recidivism</TableCell>\n                <TableCell>6,173</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={_ => this.props.loadData(compasData)}\n                  >\n                    Select\n                  </Button>\n                </TableCell>\n              </TableRow>\n              {/* <TableRow> \n                <TableCell component=\"th\" scope=\"row\">\n                  <a\n                    className={classes.dataLink}\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Census-Income+%28KDD%29\"\n                  >\n                    UCI Census-Income\n                  </a>\n                </TableCell>\n                <TableCell>Predict income >$50K</TableCell>\n                <TableCell>199,523</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={_ => this.props.loadData(censusData)}\n                  >\n                    Select\n                  </Button>\n                </TableCell>\n              </TableRow> */}\n            </TableBody>\n          </Table>\n        </Paper>\n        <a href=\"./\" className={classes.adddata}>\n          <p>Instructions for adding a custom dataset</p>\n        </a>\n\n        <div className={classes.social}>\n          <a href=\"https://arxiv.org/abs/1904.05419\">\n            <button className={classes.socialLink}>\n              <FaScroll className={classes.icon} />\n              Full Paper\n            </button>\n          </a>\n          <a href=\"https://medium.com/p/acbd362a3e2f\">\n            <button className={classes.socialLink}>\n              <FaMedium className={classes.icon} /> Blog\n            </button>\n          </a>\n          <a href=\"https://github.com/poloclub/FairVis\">\n            <button className={classes.socialLink}>\n              <FaGithub className={classes.icon} />\n              Code\n            </button>\n          </a>\n          <a href=\"https://cabreraalex.com/#/paper/fairvis\">\n            <button className={classes.socialLink}>\n              <FaGlobe className={classes.icon} />\n              Cite\n            </button>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Welcome);\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  withStyles\n} from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/lab/Slider\";\nimport * as d3 from \"d3\";\nimport React, { Component } from \"react\";\nimport \"../style/App.css\";\nimport { getClusters } from \"../util/clusterDescriptions\";\nimport { createSubgroups } from \"../util/generateSubgroups\";\nimport {\n  METRICS,\n  PRIMARY_COLOR,\n  SECONDARY_COLOR,\n  TERTIARY_COLOR\n} from \"../util/globals\";\nimport worker from \"../workers/dataLoader.js\";\nimport WebWorker from \"../workers/WebWorker\";\nimport ExpandedCard from \"./ExpandedCard\";\nimport FeatureDrawer from \"./FeatureDrawer\";\nimport GroupSuggestions from \"./GroupSuggestions\";\nimport MetricSelector from \"./MetricSelector\";\nimport StripPlot from \"./StripPlot\";\nimport Welcome from \"./Welcome\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: PRIMARY_COLOR\n    },\n    secondary: {\n      main: SECONDARY_COLOR\n    }\n  },\n  overrides: {\n    MuiSlider: {\n      thumb: {\n        backgroundColor: \"#EBEBEB\"\n      },\n      track: {\n        backgroundColor: \"#EBEBEB\"\n      }\n    }\n  }\n});\n\nconst styles = {\n  appBar: {\n    zIndex: 1\n  },\n  body: {\n    display: \"flex\",\n    flexDirection: \"inline\"\n  },\n  content: {\n    width: \"55%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: 65,\n    marginLeft: 10\n  },\n  plot: {\n    width: \"100%\"\n  },\n  slider: {\n    width: 150,\n    padding: 20,\n    marginRight: 30\n  },\n  reset: {\n    float: \"right\"\n  },\n  subtitle: {\n    flexGrow: 1,\n    color: TERTIARY_COLOR,\n    textAlign: \"center\"\n  },\n  tagline: {\n    flexGrow: 1,\n    marginLeft: 30,\n    color: TERTIARY_COLOR,\n    textAlign: \"left\"\n  },\n  loadingScreen: {\n    minWidth: \"100%\",\n    minHeight: \"calc(100% + 22px)\",\n    marginTop: -22,\n    backgroundColor: PRIMARY_COLOR,\n    margin: \"0px auto\"\n  },\n  loadingText: {\n    paddingTop: 150,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  loadingProgress: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: \"white\"\n  },\n  datasets: {\n    width: \"600px\",\n    margin: \"0px auto\",\n    marginTop: 10\n  },\n  tabletitle: {\n    marginTop: 50,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  title: {\n    fontWeight: 800\n  },\n  adddata: {\n    color: \"white\",\n    textAlign: \"center\"\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    document.title = \"FairVis - Audit Classification for Intersectional Bias\";\n\n    /**\n     * Every subgroup in the activeGroups array should have the following form:\n     * {\n     *  feats: -> Array of features defining the group\n     *  vals: -> Array of values corresponding to the features (same indices)\n     *  insts: -> Array of all the instances belonging to the subgroup\n     *  metrics: -> Object containing all the base metrics (Acc, Prec, etc.)\n     *  type: -> The type of subgroup it is, either 'top' or 'bottom'\n     *  distrib: -> Value distribution for each feature\n     * }\n     */\n    this.state = {\n      // Array of instances with features, label, class output, and cluster\n      data: [],\n      // distribution counts of data in same order as features, sorted by value\n      dataDistrib: {},\n      // Array of clusters from DBSCAN with metrics and value distribution\n      clusters: [],\n      // Array of active groups with values and metrics\n      activeGroups: [],\n      // Object of metrics for the overall group\n      avgs: [],\n\n      // Features and values for all instances\n      features: [],\n      values: [],\n\n      // State of StripPlot\n      hovered: -1,\n      clicked: -1,\n\n      // State for selected metrics, by default accuracy, recall, and specificity\n      selectedMetrics: METRICS.slice(0, 3),\n\n      minSize: 0,\n\n      loading: 0,\n      dataLoaded: false,\n      clustersLoaded: false,\n    };\n  }\n\n  loadData = data => {\n    this.setState({ loading: 1 });\n\n    // WebWorker to run preprocessing in parallel.\n    let loaderWorker = new WebWorker(worker);\n\n    loaderWorker.addEventListener(\"message\", r => {\n      let out = r.data;\n      let clusters = getClusters(out.data, out.feats, out.vals);\n      this.setState({\n        data: out.data,\n        dataDistrib: out.distrib,\n        avgs: [out.avgs],\n        features: out.feats,\n        values: out.vals,\n        clusters: clusters,\n        dataLoaded: true,\n        clustersLoaded: true\n      });\n    });\n    d3.csv(data).then(d => loaderWorker.postMessage(d));\n  };\n\n  createSubgroups = groups => {\n    // TODO: Prevent adding duplicate subgroups\n    let subgroups = createSubgroups(\n      this.state.data,\n      groups,\n      this.state.activeGroups.length,\n      this.state.features,\n      this.state.values\n    );\n    this.setState({\n      activeGroups: this.state.activeGroups.concat(subgroups)\n    });\n  };\n\n  // Either -1 or the cluster that was hovered.\n  suggestedHover = clust => {\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\n\n    const foundArr = this.state.activeGroups.filter(\n      el => el.clusterid === clust.clusterid\n    );\n\n    if (foundArr.length === 0) {\n      clust.id = this.state.activeGroups.length;\n\n      this.setState(\n        {\n          activeGroups: this.state.activeGroups.concat(clust),\n          hovered: clust.id\n        },\n        () => {\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"linehover\", true);\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\n            \"lineclick\",\n            true\n          );\n        }\n      );\n    } else {\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"linehover\", true);\n      this.setState(\n        {\n          hovered: foundArr[0].id\n        },\n        () => {\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\n            \"lineclick\",\n            true\n          );\n        }\n      );\n    }\n  };\n\n  suggestedUnhover = clust => {\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\n\n    let newActives = this.state.activeGroups.filter(\n      e => e.id === this.state.clicked || e.id !== clust.id\n    );\n\n    this.setState(\n      {\n        activeGroups: newActives,\n        hovered: -1\n      },\n      () => {\n        d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\n          \"lineclick\",\n          true\n        );\n      }\n    );\n  };\n\n  /**\n   * Have to set id to length -1 since groups gets added once on hover then again\n   * on click. If not it breaks when hovering later on\n   */\n  suggestedClick = clust => {\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\n\n    const foundArr = this.state.activeGroups.filter(\n      el => el.clusterid === clust.clusterid\n    );\n\n    if (foundArr.length === 0) {\n      clust.id = this.state.activeGroups.length;\n\n      this.setState(\n        {\n          activeGroups: this.state.activeGroups.concat(clust),\n          clicked: clust.id\n        },\n        () => {\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"lineclick\", true);\n        }\n      );\n    } else {\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"lineclick\", true);\n      this.setState({\n        clicked: foundArr[0].id\n      });\n    }\n  };\n\n  barHover = id => {\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\n\n    d3.selectAll(\"#linecluster\" + id).classed(\"linehover\", true);\n\n    this.setState({\n      hovered: id\n    });\n  };\n\n  barClick = id => {\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\n    d3.selectAll(\"#linecluster\" + id).classed(\"lineclick\", true);\n\n    this.setState({\n      clicked: id\n    });\n  };\n\n  changeMinSize = (_, val) => {\n    this.setState({\n      minSize: val\n    });\n  };\n\n  resetGroups = () => {\n    this.setState({\n      hovered: -1,\n      clicked: -1,\n      minSize: 0,\n      activeGroups: []\n    });\n  };\n\n  handleMetricsChange = m => {\n    this.setState({\n      selectedMetrics: m\n    });\n  };\n\n  render() {\n    let classes = this.props.classes;\n\n    if (!this.state.dataLoaded) {\n      return <Welcome loadData={this.loadData} loading={this.state.loading} />;\n    }\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography\n              inline\n              variant=\"h4\"\n              color=\"inherit\"\n              className={classes.title}\n            >\n              FairVis\n            </Typography>\n            <Typography inline variant=\"h6\" className={classes.tagline}>\n              {\" \"}\n              Audit Classification for Intersectional Bias{\" \"}\n            </Typography>\n            <Typography variant=\"body1\" color=\"inherit\">\n              Minimum Size: {this.state.minSize}\n            </Typography>\n            <Slider\n              className={classes.slider}\n              value={this.state.minSize}\n              onChange={this.changeMinSize}\n              step={1}\n              min={0}\n              max={\n                this.state.activeGroups.length === 0\n                  ? 0\n                  : d3.max(this.state.activeGroups, d => d.metrics.size)\n              }\n            />\n            <Button\n              className={classes.reset}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.resetGroups}\n            >\n              Reset Groups\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.body}>\n          <FeatureDrawer\n            features={this.state.features}\n            values={this.state.values}\n            createSubgroups={this.createSubgroups}\n            dataDistrib={this.state.dataDistrib}\n            dataLoaded={this.state.dataLoaded}\n            hovered={this.state.hovered}\n            clicked={this.state.clicked}\n            activeGroups={this.state.activeGroups}\n          />\n          <div className={classes.content}>\n            <MetricSelector\n              className={classes.metricSelector}\n              onMetricChange={this.handleMetricsChange}\n              suggestions={METRICS}\n              selectedMetrics={this.state.selectedMetrics}\n            />\n            <div className={classes.plot}>\n              <StripPlot\n                activeGroups={this.state.activeGroups}\n                avgs={this.state.avgs}\n                barHover={this.barHover}\n                barClick={this.barClick}\n                minSize={this.state.minSize}\n                selectedMetrics={this.state.selectedMetrics}\n              />\n            </div>\n            <GroupSuggestions\n              clusters={this.state.clusters}\n              minSize={this.state.minSize}\n              suggestedHover={this.suggestedHover}\n              suggestedUnhover={this.suggestedUnhover}\n              suggestedClick={this.suggestedClick}\n              clustersLoaded={this.state.clustersLoaded}\n              features={this.state.features}\n              values={this.state.values}\n              clicked={this.state.clicked}\n              activeGroups={this.state.activeGroups}\n            />\n          </div>\n          <ExpandedCard\n            hovered={this.state.hovered}\n            clicked={this.state.clicked}\n            activeGroups={this.state.activeGroups}\n            selectedMetrics={this.state.selectedMetrics}\n            clusters={this.state.clusters}\n          />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}